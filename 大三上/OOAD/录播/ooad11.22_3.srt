1
00:00:01,466 --> 00:00:04,199
我们还是从Controller层开始看起

2
00:00:04,200 --> 00:00:05,300
因为我们在图上的

3
00:00:05,300 --> 00:00:06,733
其实没有画Controller层

4
00:00:07,466 --> 00:00:08,899
呃Controller层的话

5
00:00:09,000 --> 00:00:11,933
我们其实正常改查是分开的代码

6
00:00:15,933 --> 00:00:18,166
这是piece template的新增

7
00:00:18,166 --> 00:00:20,099
就我们刚才看到在Controller层的代码

8
00:00:20,466 --> 00:00:21,199
Controller代码的职责

9
00:00:21,200 --> 00:00:22,500
我们应该已经很熟悉了

10
00:00:22,500 --> 00:00:24,766
就是把VO对象变成Bo对象

11
00:00:24,966 --> 00:00:26,166
所以大家可以看到

12
00:00:26,166 --> 00:00:28,933
他在变这个Bo对象的时候

13
00:00:28,933 --> 00:00:30,299
他变出来的是什么

14
00:00:30,666 --> 00:00:32,933
变出来的是 73倍

15
00:00:32,933 --> 00:00:33,933
这是直对象啊

16
00:00:33,933 --> 00:00:35,399
因为他不是满血对象

17
00:00:35,500 --> 00:00:36,900
就是直对象而已

18
00:00:37,066 --> 00:00:39,199
所以我们用clock factory copy方法

19
00:00:39,200 --> 00:00:41,366
把vior里的值copy到这个里头了

20
00:00:41,566 --> 00:00:44,733
然后呢我们把路径上面的这个啊

21
00:00:44,733 --> 00:00:46,899
parage ID和这个reading ID

22
00:00:46,900 --> 00:00:49,500
又设到了他的这个BUD上面去

23
00:00:49,500 --> 00:00:52,200
BUD变成了一个带着值往后走的东西

24
00:00:52,200 --> 00:00:53,366
他没有任何别的意义

25
00:00:53,366 --> 00:00:55,299
就是把值都都淡

26
00:00:55,533 --> 00:00:57,733
然后我们去调它的这个方法

27
00:00:57,733 --> 00:01:00,066
那因为现在我们是这个这个APR

28
00:01:00,300 --> 00:01:02,366
所以我们用了这个类标

29
00:01:02,366 --> 00:01:04,666
就是我们后面会用到这个一个类

30
00:01:04,666 --> 00:01:06,199
peace class表示说

31
00:01:06,200 --> 00:01:10,266
我们现在给他的是peace的这个东西啊

32
00:01:10,266 --> 00:01:12,599
就是这样的一个d

33
00:01:12,766 --> 00:01:15,466
那上面的这个wait其实

34
00:01:18,333 --> 00:01:19,366
类似看见没有

35
00:01:19,533 --> 00:01:20,466
其实是一样的

36
00:01:20,466 --> 00:01:22,866
这个control人代码是没有营养的

37
00:01:23,766 --> 00:01:24,533
一模一样的代码

38
00:01:24,533 --> 00:01:25,266
这个没办法

39
00:01:25,266 --> 00:01:26,599
因为这个类型不同

40
00:01:27,300 --> 00:01:29,333
所以这段代码包括API不同

41
00:01:29,333 --> 00:01:29,899
类型不同

42
00:01:29,900 --> 00:01:31,933
所以这部分代码我们就没有去重用

43
00:01:32,200 --> 00:01:36,066
就是去写了这么几句这个废话啊

44
00:01:36,133 --> 00:01:39,099
但是这个最后这个类型是不一样的

45
00:01:39,333 --> 00:01:40,166
那我们看一下

46
00:01:40,166 --> 00:01:41,933
在调进去以后

47
00:01:45,266 --> 00:01:46,666
我们知道啊我

48
00:01:46,666 --> 00:01:48,866
们开始最后这个参数

49
00:01:49,133 --> 00:01:50,533
我们其实是标识的时候

50
00:01:50,533 --> 00:01:53,299
他是从计件的API进来的

51
00:01:53,300 --> 00:01:55,300
还是计重的API进来

52
00:01:55,866 --> 00:01:59,166
那所以说我们这个参数我们是要用到

53
00:01:59,500 --> 00:02:00,466
要用到什么呢

54
00:02:00,700 --> 00:02:02,666
我们看一下我们前面两句话

55
00:02:03,166 --> 00:02:05,166
我们刚才您看到ID变对象

56
00:02:05,166 --> 00:02:06,733
背景对象摊牌对象

57
00:02:06,733 --> 00:02:07,466
微键其实没用

58
00:02:07,466 --> 00:02:08,499
看到没有灰的

59
00:02:08,500 --> 00:02:10,100
但这时候其实它会做一个判断

60
00:02:10,100 --> 00:02:11,333
就是这个ID图存在

61
00:02:11,500 --> 00:02:12,066
如果不存在

62
00:02:12,066 --> 00:02:13,566
就抛出一个set中断

63
00:02:13,766 --> 00:02:13,999
所以

64
00:02:14,000 --> 00:02:15,666
你不应该在一个不存在的地址上头

65
00:02:15,666 --> 00:02:17,699
去增加一个优惠模板

66
00:02:17,733 --> 00:02:19,899
那这个会判断ID图存在

67
00:02:19,900 --> 00:02:22,333
你看是不是这个商铺的

68
00:02:22,333 --> 00:02:23,166
如果在的话

69
00:02:23,166 --> 00:02:24,733
那就会拿到这个看谱对象

70
00:02:24,800 --> 00:02:25,933
然后下面是我们画的

71
00:02:25,933 --> 00:02:27,133
我们把资格送给了看谱对象

72
00:02:27,133 --> 00:02:28,733
但是在这两句话之间

73
00:02:28,733 --> 00:02:29,499
我们做了一个判断

74
00:02:29,500 --> 00:02:30,466
就图上没有画

75
00:02:30,766 --> 00:02:31,999
这个判断是判断什么呢

76
00:02:32,200 --> 00:02:33,600
我们其实是有一个逻辑的

77
00:02:33,600 --> 00:02:34,600
这个逻辑是

78
00:02:34,733 --> 00:02:37,266
你不能在一个计重的模板下面

79
00:02:37,266 --> 00:02:39,266
去加一个计件的明细

80
00:02:39,733 --> 00:02:41,733
对吧这个是肯定是不合理的

81
00:02:41,900 --> 00:02:42,866
那我们怎么判断的呢

82
00:02:42,866 --> 00:02:45,866
我们不是用计件机动写这个写死

83
00:02:46,066 --> 00:02:46,999
我们想一个办法

84
00:02:47,000 --> 00:02:47,933
我们懂得原则

85
00:02:47,933 --> 00:02:49,699
虽然这地方不是这地方

86
00:02:49,700 --> 00:02:50,766
虽然不是变化点

87
00:02:50,766 --> 00:02:51,599
也不是眼镜点

88
00:02:51,600 --> 00:02:54,266
他不会增加也不会去修改的

89
00:02:54,566 --> 00:02:57,866
但是我们还是不想把EFZL死这个东西

90
00:02:57,866 --> 00:02:58,866
写死在里面

91
00:02:59,400 --> 00:03:00,200
那怎么办呢

92
00:03:00,200 --> 00:03:02,300
这个就是用了数据驱动的方式

93
00:03:03,500 --> 00:03:06,133
所以我们实际上是在temper中间

94
00:03:06,133 --> 00:03:07,266
做了一个Mapper

95
00:03:07,366 --> 00:03:08,199
这个map呢

96
00:03:08,200 --> 00:03:11,800
定义了说我们在temper中间有一个属性

97
00:03:11,800 --> 00:03:13,600
这个属性叫做temper的病的名字

98
00:03:13,600 --> 00:03:14,900
我们实际上是把这个名字写

99
00:03:14,900 --> 00:03:15,766
成了一个支付串

100
00:03:15,766 --> 00:03:16,566
写到这里

101
00:03:16,866 --> 00:03:18,733
但我们不好用支付券去比是吧

102
00:03:19,066 --> 00:03:20,733
所以我们就定义了两个类

103
00:03:20,966 --> 00:03:22,599
这两个类其实还有别的用途啊

104
00:03:22,600 --> 00:03:24,000
不仅仅是在这有这个用途

105
00:03:24,000 --> 00:03:24,666
还有别的用途

106
00:03:24,666 --> 00:03:25,466
我们后面看到

107
00:03:25,466 --> 00:03:27,399
既运费的这两个类还有用途的

108
00:03:27,566 --> 00:03:29,099
那我们就用了这两个类啊

109
00:03:29,300 --> 00:03:30,500
所以就把这两个类呢

110
00:03:30,500 --> 00:03:34,200
把它放到了这个一个map里头

111
00:03:34,266 --> 00:03:35,599
一个type的map里头

112
00:03:35,933 --> 00:03:38,066
所以我们这里为了防止它去拷贝

113
00:03:38,066 --> 00:03:39,699
我们把这个名字特别改了一下

114
00:03:39,700 --> 00:03:42,700
这个就是防止那个那个color object去把

115
00:03:42,700 --> 00:03:43,733
用到这个方法

116
00:03:43,900 --> 00:03:45,933
我们把这个type改成了god type

117
00:03:45,933 --> 00:03:46,966
不是gate type

118
00:03:47,466 --> 00:03:48,366
这就是怕

119
00:03:48,366 --> 00:03:50,199
怕引起他的误会

120
00:03:51,366 --> 00:03:52,999
所以它的作用是什么

121
00:03:53,000 --> 00:03:53,533
我们就是用

122
00:03:53,533 --> 00:03:55,866
我们在这个template之间的这个属性

123
00:03:56,400 --> 00:03:56,900
这个属性

124
00:03:56,900 --> 00:03:58,800
其实就是我们的两个病的名字

125
00:03:59,400 --> 00:04:02,800
用它去变成我们在这里所定义的piece

126
00:04:02,866 --> 00:04:05,166
object piece还是weight的两个类

127
00:04:05,533 --> 00:04:08,133
所以这个返回的就是这个template type

128
00:04:08,700 --> 00:04:09,300
那这样的话呢

129
00:04:09,300 --> 00:04:10,500
我们在收费时城里头

130
00:04:10,500 --> 00:04:12,133
在这个收费时城里头

131
00:04:12,133 --> 00:04:14,099
其实只是要把这个type的Clus

132
00:04:14,100 --> 00:04:14,766
是不是等于

133
00:04:14,766 --> 00:04:16,099
我们传建这个Clus

134
00:04:16,166 --> 00:04:16,766
就会知道

135
00:04:16,766 --> 00:04:19,199
说我们这个运费模板是计件的

136
00:04:19,200 --> 00:04:20,000
还是计重的

137
00:04:20,000 --> 00:04:22,400
和传件的这个值是不是匹配的

138
00:04:22,500 --> 00:04:23,166
如果不匹配

139
00:04:23,166 --> 00:04:23,733
大家可以看到

140
00:04:23,733 --> 00:04:24,699
就抛出一个错误

141
00:04:24,866 --> 00:04:24,999
说

142
00:04:25,000 --> 00:04:27,733
你不能在一个计重的运费模板下面

143
00:04:27,733 --> 00:04:29,533
去加一个计件的内容

144
00:04:29,733 --> 00:04:30,766
对吧这个是不允许的

145
00:04:30,766 --> 00:04:32,366
或者在一个计件的运费模板之间

146
00:04:32,366 --> 00:04:33,599
去加一个计重的内容

147
00:04:33,933 --> 00:04:34,933
这个也是不允许的啊

148
00:04:34,933 --> 00:04:36,333
我们要求说击中500多年

149
00:04:36,333 --> 00:04:37,199
所有的明细全是

150
00:04:37,200 --> 00:04:39,000
击中的击剑的里头

151
00:04:39,000 --> 00:04:41,366
所有的明细全是击剑啊

152
00:04:41,366 --> 00:04:43,499
所以这是在图上没有画的部分

153
00:04:43,533 --> 00:04:45,099
对因为这其实是属于

154
00:04:45,100 --> 00:04:46,733
这个程序的技术细节

155
00:04:46,733 --> 00:04:48,066
所以没必要在图上画

156
00:04:48,133 --> 00:04:50,399
我们的图是为了表示我们是怎么做的

157
00:04:50,400 --> 00:04:52,866
其实我们并没有把这些很琐碎的细节

158
00:04:52,866 --> 00:04:53,799
画在这个图上

159
00:04:54,733 --> 00:04:56,999
呃模板去创建他的地区

160
00:04:57,000 --> 00:04:58,466
这个其实就直接调他的道

161
00:04:58,466 --> 00:04:59,999
这个跟图上画的是一样的

162
00:05:00,200 --> 00:05:01,100
那我们去

163
00:05:05,366 --> 00:05:08,299
看它的这个Doll是怎么做的啊

164
00:05:08,300 --> 00:05:10,333
音色的音色的里头啊

165
00:05:10,333 --> 00:05:12,699
我们可以看到跟图上画的一样

166
00:05:12,700 --> 00:05:13,766
我们首先把它变成了

167
00:05:13,766 --> 00:05:16,499
我们在满CPU的处分这一半的p O

168
00:05:17,266 --> 00:05:18,733
然后呢我们调这个方法

169
00:05:18,966 --> 00:05:21,799
去到temper中间去找这个倒对象

170
00:05:21,800 --> 00:05:22,933
刚刚我们已经看到

171
00:05:23,066 --> 00:05:24,066
在temper里头

172
00:05:24,066 --> 00:05:25,533
我们其实是有一个属性

173
00:05:25,700 --> 00:05:27,666
放了那个倒对象的名称的

174
00:05:28,533 --> 00:05:30,699
所以大家应该能猜到这个方法在干嘛

175
00:05:30,766 --> 00:05:31,266
这个方法

176
00:05:31,266 --> 00:05:33,733
就是跟我们前面讲的那个方式一样

177
00:05:33,800 --> 00:05:36,266
我们利用Supreme框架的特性

178
00:05:36,700 --> 00:05:41,400
去用这个名字去返回它的冰对象

179
00:05:41,400 --> 00:05:43,500
而且我们把它的冰对象的参数

180
00:05:43,600 --> 00:05:46,166
把它的返回的类型做强行类型转换

181
00:05:46,466 --> 00:05:46,999
分成什么呢

182
00:05:47,000 --> 00:05:47,900
分它的负类

183
00:05:48,066 --> 00:05:49,366
而不是它的子类

184
00:05:49,500 --> 00:05:50,466
然后它的接口啊

185
00:05:50,466 --> 00:05:51,266
这是接口

186
00:05:51,366 --> 00:05:52,799
而不是它具体的子类

187
00:05:52,800 --> 00:05:54,366
因为用冰对象去get并的话

188
00:05:54,366 --> 00:05:56,199
得出来是它的具体的那个子类对象

189
00:05:56,400 --> 00:05:57,800
所以我们把它做了强转

190
00:05:57,800 --> 00:05:59,766
转成它的接口

191
00:06:00,866 --> 00:06:03,533
这个是用了什么设计模式知道吗

192
00:06:05,733 --> 00:06:07,666
我这就是很故意的

193
00:06:07,666 --> 00:06:09,566
没有写任何射击模式的方法

194
00:06:09,566 --> 00:06:10,399
明显的上当

195
00:06:10,466 --> 00:06:12,166
但这里其实是一个射击模式

196
00:06:12,666 --> 00:06:14,666
这个设计模式就是我们说的简单工厂

197
00:06:14,666 --> 00:06:16,566
设计模式跟那个一样的

198
00:06:16,566 --> 00:06:17,999
只是那个是做了一个类

199
00:06:18,000 --> 00:06:19,133
做了一个工厂类

200
00:06:19,366 --> 00:06:20,999
然后工厂类里头有一个方法

201
00:06:21,000 --> 00:06:22,200
去得到这个对象

202
00:06:22,333 --> 00:06:24,466
现在呢我就是没有做那个类

203
00:06:24,866 --> 00:06:27,099
而是在这个已有的一个类中间

204
00:06:27,100 --> 00:06:27,933
写了一个方法

205
00:06:27,933 --> 00:06:29,266
用这个方法去得到这个对象

206
00:06:29,266 --> 00:06:31,333
这个其实就是简单工厂的模式

207
00:06:31,366 --> 00:06:33,366
也叫做工厂方法模式啊

208
00:06:33,366 --> 00:06:34,933
但是我没有单写一个类

209
00:06:35,266 --> 00:06:37,999
那做法其实跟我们在之前看到的那个

210
00:06:38,566 --> 00:06:40,599
而doctor得到doctor那个factory的做法

211
00:06:40,600 --> 00:06:41,500
是完全一样

212
00:06:41,600 --> 00:06:44,600
就是用Supreme框架所具备这个特性

213
00:06:44,800 --> 00:06:46,300
用我们把它

214
00:06:46,300 --> 00:06:48,366
把它的用的哪个兵对象的名字

215
00:06:48,366 --> 00:06:49,599
写到我们的数据库里

216
00:06:49,766 --> 00:06:52,133
用这个名字去找到这个兵对象

217
00:06:53,366 --> 00:06:54,699
找到它以后

218
00:07:00,200 --> 00:07:01,800
所以我们就可以调他的音色的

219
00:07:02,366 --> 00:07:03,366
然后调他音色的以后

220
00:07:03,366 --> 00:07:05,966
我们可以拿到他在芒果中间的主键

221
00:07:05,966 --> 00:07:07,299
然后把芒果中间的主键呢

222
00:07:07,300 --> 00:07:10,466
设到这个Po里头

223
00:07:10,466 --> 00:07:11,533
这次还没存到数据库

224
00:07:11,533 --> 00:07:12,499
为什么要放到后头存

225
00:07:12,500 --> 00:07:13,366
就是因为这个原因

226
00:07:13,366 --> 00:07:15,533
我要把它的主件存到这个数据库里

227
00:07:15,666 --> 00:07:17,099
以后我在做正常改查的时候

228
00:07:17,100 --> 00:07:17,900
都是用这个组件

229
00:07:17,900 --> 00:07:19,566
去找芒果里头的另外一半啊

230
00:07:19,600 --> 00:07:21,100
所以这时候把它存到数据库里

231
00:07:21,200 --> 00:07:22,500
这里特别注意一下

232
00:07:22,500 --> 00:07:23,066
大家可以看到

233
00:07:23,066 --> 00:07:24,766
我这里track catch了一个exception

234
00:07:25,100 --> 00:07:28,333
为啥因为我们的业务逻辑是要求说

235
00:07:29,066 --> 00:07:30,466
在一个模板里头

236
00:07:30,533 --> 00:07:32,733
一个地区只能建一条

237
00:07:32,900 --> 00:07:33,500
你比如说下面

238
00:07:33,500 --> 00:07:35,866
你不能建两个运费模板是吧

239
00:07:35,866 --> 00:07:36,666
只能建一条

240
00:07:37,000 --> 00:07:37,766
那怎么做的呢

241
00:07:37,766 --> 00:07:39,599
我们没有在事先做查询

242
00:07:39,600 --> 00:07:41,300
大家可以看到我们就直接插进去了

243
00:07:41,466 --> 00:07:44,066
但是我们在索引上建了一个唯一索引

244
00:07:44,866 --> 00:07:45,299
因为他要

245
00:07:45,300 --> 00:07:46,100
需要建个唯一缩影

246
00:07:46,100 --> 00:07:47,766
他要做查询也会更快

247
00:07:47,966 --> 00:07:49,999
所以我们建了一个联合唯一缩影

248
00:07:50,400 --> 00:07:51,400
那在这张表上

249
00:07:51,400 --> 00:07:54,600
就只见了他的唯一的一个联合唯一缩

250
00:07:54,600 --> 00:07:55,766
缩影还有他组件

251
00:07:55,900 --> 00:07:58,200
组件我们其实没有用到这个唯一缩影

252
00:07:58,200 --> 00:08:00,466
就只见了这么唯一的一个东西

253
00:08:00,933 --> 00:08:02,666
所以我们就没有去做判断

254
00:08:02,966 --> 00:08:03,799
插进去的时候

255
00:08:03,800 --> 00:08:05,533
如果抛出来这个错

256
00:08:06,400 --> 00:08:07,933
dublicate key section

257
00:08:07,933 --> 00:08:10,366
这个应该能看到什么名词组件

258
00:08:10,366 --> 00:08:12,299
就是唯一锁引冲突了

259
00:08:12,700 --> 00:08:14,200
所以因为只有一个唯一锁引

260
00:08:14,200 --> 00:08:15,300
所以唯一锁引冲突

261
00:08:15,300 --> 00:08:17,700
我们就知道这个地区已经存在

262
00:08:17,700 --> 00:08:19,100
不能插入啊

263
00:08:19,100 --> 00:08:20,533
所以这个大家可以看到

264
00:08:20,900 --> 00:08:21,533
很多的东西

265
00:08:21,533 --> 00:08:23,466
其实并不是靠用代码去写的

266
00:08:23,466 --> 00:08:24,566
你如果熟悉说

267
00:08:24,566 --> 00:08:26,099
my circle有这样的一个特性

268
00:08:26,333 --> 00:08:27,466
那你可以利用my circle

269
00:08:27,466 --> 00:08:28,333
去完成这样一个过程

270
00:08:28,333 --> 00:08:29,399
因为为所以本来就要戒

271
00:08:29,400 --> 00:08:30,366
因为查也需要这个

272
00:08:30,366 --> 00:08:31,733
所以那既然有了这个

273
00:08:31,733 --> 00:08:32,366
所以呢

274
00:08:32,366 --> 00:08:34,399
我们插进去之后就让他出下错误

275
00:08:34,600 --> 00:08:36,200
把这个错误抓到啊

276
00:08:36,500 --> 00:08:38,533
把它返回回去啊

277
00:08:38,533 --> 00:08:39,199
把它返把

278
00:08:39,200 --> 00:08:42,133
把它变成我们所要的这个错误

279
00:08:42,266 --> 00:08:43,666
把它弄回去

280
00:08:43,966 --> 00:08:45,099
所以这里额外说一下

281
00:08:45,100 --> 00:08:47,666
这是属于小的技术技巧啊

282
00:08:48,133 --> 00:08:49,366
那这是这个音色

283
00:08:50,266 --> 00:08:52,266
所以看完音色的大家应该知道

284
00:08:56,866 --> 00:08:57,699
其他怎么做

285
00:08:57,800 --> 00:08:58,366
正常改查

286
00:08:58,366 --> 00:08:59,266
其实都是一样

287
00:08:59,266 --> 00:09:00,566
就是前面的都是一样

288
00:09:01,066 --> 00:09:04,366
只是把最后的这一点点的差异

289
00:09:04,700 --> 00:09:06,166
给他放到后面去啊

290
00:09:06,166 --> 00:09:06,899
我还没看完

291
00:09:06,900 --> 00:09:09,800
这个每一个的东西是什么样的啊

292
00:09:09,800 --> 00:09:11,666
这只看到他的公共用代码

293
00:09:12,466 --> 00:09:14,766
那我们知道在调这个音色的的时候

294
00:09:14,766 --> 00:09:15,766
调调这个

295
00:09:20,100 --> 00:09:21,366
我们知道在调这个音色的时候

296
00:09:21,366 --> 00:09:22,799
其实是有不同的实现的

297
00:09:22,800 --> 00:09:24,266
这个不同实现在哪呢

298
00:09:24,566 --> 00:09:26,166
这个不同实现就在这个地方

299
00:09:26,300 --> 00:09:27,566
所以我们可以看到

300
00:09:28,066 --> 00:09:31,166
我们的重量模板的音色的

301
00:09:31,466 --> 00:09:33,599
就是把这个对象

302
00:09:33,600 --> 00:09:34,533
再把剩下一半

303
00:09:34,533 --> 00:09:37,599
拷到重量模板的Po对象上面去

304
00:09:37,600 --> 00:09:40,333
然后调用芒果的Mapper去把它插进去

305
00:09:40,333 --> 00:09:41,899
把它的返回值upper

306
00:09:41,900 --> 00:09:43,100
Justin拿回来

307
00:09:43,333 --> 00:09:43,999
piece的话

308
00:09:44,000 --> 00:09:45,566
这张代码其实也是一样

309
00:09:45,566 --> 00:09:47,333
这都属于没有营养的代码啊

310
00:09:48,333 --> 00:09:48,899
对啊

311
00:09:48,900 --> 00:09:51,100
所以真山改查这种代码

312
00:09:51,100 --> 00:09:52,266
写起来很枯燥的

313
00:09:52,266 --> 00:09:54,466
其实都是一模一样的

314
00:09:54,800 --> 00:09:56,100
但是你又不能不写

315
00:09:56,266 --> 00:09:58,899
对吧我们知道在写一个系统里头

316
00:09:58,900 --> 00:10:00,933
50%都是这种垃圾代码

317
00:10:00,933 --> 00:10:02,599
真山改查真山改查真山改查

318
00:10:02,700 --> 00:10:03,666
但你你不能不写

319
00:10:03,666 --> 00:10:05,333
没有真山改查就没有复杂的业务

320
00:10:05,800 --> 00:10:06,300
那怎么办呢

321
00:10:06,300 --> 00:10:08,000
我们现在的办法就是把垃圾代码

322
00:10:08,000 --> 00:10:09,066
把它变得小一点

323
00:10:09,700 --> 00:10:12,266
让他总体的代码数减少

324
00:10:12,533 --> 00:10:14,533
减少的好处就是在于说

325
00:10:14,533 --> 00:10:17,299
这些垃圾代码如果有写错了

326
00:10:17,300 --> 00:10:18,933
那他就比较容易发现

327
00:10:18,933 --> 00:10:21,133
然后代码的重新提高

328
00:10:21,266 --> 00:10:23,533
所以说他就会相对比较稳定一点

329
00:10:23,966 --> 00:10:25,066
我们其他的

330
00:10:25,066 --> 00:10:27,799
我们就不再仔细的看代码了

331
00:10:27,800 --> 00:10:28,000
当然

332
00:10:28,000 --> 00:10:30,100
但是你从这个指令中就能看出来

333
00:10:30,333 --> 00:10:32,333
其实真山改茶四个方法

334
00:10:33,200 --> 00:10:35,500
差异的部分就那么一点点

335
00:10:36,133 --> 00:10:38,499
就正常改查差异的部分就这么一点点

336
00:10:38,500 --> 00:10:40,733
所以我们把针对这个对象的

337
00:10:40,733 --> 00:10:41,533
正常改查的

338
00:10:41,533 --> 00:10:42,799
这么差异的这一个部分

339
00:10:42,800 --> 00:10:45,166
就最后在芒果里头写的那一小部分

340
00:10:45,166 --> 00:10:46,299
不同的东西

341
00:10:46,566 --> 00:10:48,966
给他写成了这里的4个方法

342
00:10:49,133 --> 00:10:50,799
然后waiter里头

343
00:10:50,800 --> 00:10:52,533
也写了它对应的4个方法

344
00:10:53,000 --> 00:10:55,266
然后这4个方法都定义在了这个

345
00:10:56,600 --> 00:10:57,500
接口里头

346
00:10:58,533 --> 00:10:59,799
定义在这个接口里头

347
00:11:00,100 --> 00:11:03,466
而在reaching template道里头的真三改查

348
00:11:03,466 --> 00:11:05,699
都是调的这个接

349
00:11:05,700 --> 00:11:07,733
口里头的这4个方法去完成的

350
00:11:07,733 --> 00:11:09,166
那具体会用哪个道

351
00:11:09,466 --> 00:11:11,866
用being的name去把它找出来啊

352
00:11:11,866 --> 00:11:12,966
是这样的一个逻辑

353
00:11:20,866 --> 00:11:23,533
所以修改同样的是两个API

354
00:11:24,100 --> 00:11:25,266
control程是两个API

355
00:11:25,333 --> 00:11:26,899
收尾绳缩缩紧成为一个

356
00:11:26,900 --> 00:11:28,466
倒层缩紧成为一个

357
00:11:28,466 --> 00:11:31,499
然后倒层再分开两个去调

358
00:11:31,600 --> 00:11:33,366
我们把它挂在一张图上啊

359
00:11:33,366 --> 00:11:34,366
所以这个过程

360
00:11:34,366 --> 00:11:36,266
跟前面那过程基本上是一样的

361
00:11:36,800 --> 00:11:38,900
就是逻辑上稍微有点差别

362
00:11:39,300 --> 00:11:41,900
他要找一下这个paper

363
00:11:41,900 --> 00:11:42,766
然后把这个职责

364
00:11:42,766 --> 00:11:44,799
这是用信息专家的原则

365
00:11:45,000 --> 00:11:46,933
把修改这个职责付给了paper

366
00:11:46,933 --> 00:11:48,799
用我不想的社会制度去公关贷

367
00:11:49,066 --> 00:11:50,599
所以把它付给了paper啊

368
00:11:50,600 --> 00:11:51,866
paper值中间去写

369
00:11:52,266 --> 00:11:53,099
他们的是显示

370
00:11:53,100 --> 00:11:54,900
我们首先要找一下这个东西存不存在

371
00:11:55,200 --> 00:11:56,600
如果找这个东西不存在的话

372
00:11:56,600 --> 00:11:58,766
他会抛毁404错误给他改一个嘛

373
00:11:58,766 --> 00:12:00,133
所以他要去找一下

374
00:12:00,466 --> 00:12:01,699
找到如果他存在的话

375
00:12:01,700 --> 00:12:03,166
他就会去做修改

376
00:12:03,866 --> 00:12:03,966
是吧

377
00:12:03,966 --> 00:12:06,999
所以说会去调查的这个SAV的方法

378
00:12:07,266 --> 00:12:08,766
那调查的SAV的方法的话

379
00:12:08,766 --> 00:12:10,766
我们知道他的SAV方法里头

380
00:12:10,766 --> 00:12:11,566
会去

381
00:12:11,866 --> 00:12:13,333
首先去更改数据库了

382
00:12:13,333 --> 00:12:14,933
因为这里不涉及到组件的更改

383
00:12:14,933 --> 00:12:17,133
所以先改了数据库完CO的数据库

384
00:12:17,300 --> 00:12:19,066
第二同样用这个方法去找到他的到

385
00:12:19,066 --> 00:12:20,533
然后调他的到的设置方法

386
00:12:20,533 --> 00:12:22,066
去把芒果的也改

387
00:12:22,200 --> 00:12:23,500
所以这次改数据库

388
00:12:23,700 --> 00:12:24,800
这次改完CO数据库

389
00:12:24,800 --> 00:12:25,800
这次改芒果数据库

390
00:12:27,066 --> 00:12:28,199
一样的做法

391
00:12:28,366 --> 00:12:29,766
那茶的话也类似

392
00:12:30,133 --> 00:12:31,366
山的话也类似啊

393
00:12:31,366 --> 00:12:32,933
所以说大家可以看到

394
00:12:32,933 --> 00:12:34,766
在region template的道里头

395
00:12:34,766 --> 00:12:36,666
这三改茶都写成是一套代码

396
00:12:36,766 --> 00:12:38,866
但是把它差异性的部分

397
00:12:42,066 --> 00:12:44,466
放到了这个呃

398
00:12:44,933 --> 00:12:46,099
放到了这个外面

399
00:12:46,666 --> 00:12:48,933
然后让他用一个接口去访问啊

400
00:12:48,933 --> 00:12:50,566
去去访问他

401
00:12:51,000 --> 00:12:53,466
这个就是我们的这个设计

402
00:12:54,466 --> 00:12:55,999
所以啊如果这个

403
00:12:57,466 --> 00:12:58,766
这两个API

404
00:12:58,766 --> 00:12:59,599
不管是哪个API

405
00:12:59,600 --> 00:13:00,900
如果初考题的话

406
00:13:01,166 --> 00:13:01,999
出一道分析题

407
00:13:02,000 --> 00:13:03,733
所这里头用了什么样的设计方法

408
00:13:03,900 --> 00:13:05,100
解决了什么样的问题

409
00:13:06,200 --> 00:13:07,333
记住吗刚才讲完了

410
00:13:08,100 --> 00:13:08,933
解决什么问题

411
00:13:10,266 --> 00:13:11,733
首先要知道他解决什么问题

412
00:13:11,733 --> 00:13:13,266
他并不是眼镜点

413
00:13:13,266 --> 00:13:16,466
变化点并不是说要会发生变化

414
00:13:16,666 --> 00:13:17,999
也不是想做开币

415
00:13:18,200 --> 00:13:20,166
就是想简单朴素的

416
00:13:20,400 --> 00:13:23,366
只用一套代码去完成两个事情

417
00:13:23,600 --> 00:13:24,866
就是为了做做这一点

418
00:13:24,900 --> 00:13:27,300
那么怎样来完成这个过程中呢

419
00:13:27,300 --> 00:13:29,966
靠的就是我们的多肽的方法

420
00:13:30,733 --> 00:13:32,533
就简简单的使用了

421
00:13:32,533 --> 00:13:34,933
在GRASS中的多肽的方法

422
00:13:34,966 --> 00:13:35,866
然后这个多肽呢

423
00:13:35,866 --> 00:13:37,533
大家可以看到它上面不是鸡肋

424
00:13:37,533 --> 00:13:38,466
而是接口

425
00:13:38,600 --> 00:13:38,966
所以

426
00:13:38,966 --> 00:13:42,799
它满足了我们在软件设计中间的

427
00:13:42,800 --> 00:13:44,333
依赖导致原则

428
00:13:44,766 --> 00:13:46,099
我们用的时候用的接口

429
00:13:46,100 --> 00:13:47,700
而不是用的具体类

430
00:13:47,900 --> 00:13:49,566
那因为满足依赖导致原则

431
00:13:49,566 --> 00:13:52,533
就必然符合disco服可替换原则

432
00:13:52,800 --> 00:13:54,400
所以使得我们在这里写代码之后

433
00:13:54,400 --> 00:13:56,400
可以不用区分说这个是这个

434
00:13:56,400 --> 00:13:57,266
这两个可以换

435
00:13:57,600 --> 00:13:59,133
他不区分这两个东西

436
00:13:59,266 --> 00:13:59,499
这样

437
00:13:59,500 --> 00:14:01,733
就把尽量健康的代码写在了这个里头

438
00:14:01,966 --> 00:14:04,099
把不同的代码写到了这个里头

439
00:14:04,200 --> 00:14:06,966
就是为了达成这样的一个目的啊

440
00:14:07,000 --> 00:14:08,766
那里头还有一些小的细节

441
00:14:08,766 --> 00:14:10,733
比如说我们怎么得到这个刀对象的

442
00:14:10,800 --> 00:14:13,266
我们其实用了用了什么呢

443
00:14:13,266 --> 00:14:15,099
用了一个工厂

444
00:14:15,100 --> 00:14:17,566
方工厂啊方法

445
00:14:17,566 --> 00:14:18,399
觉得这个道理

446
00:14:18,400 --> 00:14:20,200
好吧让他去根据他的病的名字

447
00:14:20,200 --> 00:14:21,500
得到具体这个对象

448
00:14:21,500 --> 00:14:23,666
让他返回的是负能类型

449
00:14:23,666 --> 00:14:25,966
这是一个变种的工厂方法

450
00:14:25,966 --> 00:14:26,466
的方法但

451
00:14:26,466 --> 00:14:27,366
这个写不写无所谓啊

452
00:14:27,366 --> 00:14:28,899
这个不是我们主要的设计点

453
00:14:28,933 --> 00:14:30,066
我们其实主要的设计点

454
00:14:30,066 --> 00:14:31,733
就是不想重复写单

455
00:14:32,300 --> 00:14:34,466
把尽量的代码只写一套

456
00:14:34,466 --> 00:14:36,366
集中在这个里头

457
00:14:37,100 --> 00:14:38,666
这套改行集中在这个里头

458
00:14:38,900 --> 00:14:41,400
而把差异性的代码把它放到这个里头

459
00:14:41,400 --> 00:14:43,000
靠的就是依赖老资原则

460
00:14:43,166 --> 00:14:46,533
以及由依赖老资原则所形成的disco服

461
00:14:46,533 --> 00:14:47,466
和替换原则

462
00:14:47,766 --> 00:14:47,933
对吧

463
00:14:47,933 --> 00:14:49,199
因为依然导致原则

464
00:14:49,200 --> 00:14:51,700
必然就会导致他CP系统不可替换的

465
00:14:51,733 --> 00:14:53,133
从而使得我们可以不区分

466
00:14:53,133 --> 00:14:54,266
底下的这个东西

467
00:14:54,300 --> 00:14:56,300
能把共性代码提上去啊

468
00:14:56,866 --> 00:14:59,066
就是这个真山改茶都是一样

469
00:14:59,366 --> 00:15:00,166
都是一样的

470
00:15:00,166 --> 00:15:00,799
这个设计方法

471
00:15:00,800 --> 00:15:03,533
只是说他是不同的方法和不同的逻辑

472
00:15:09,933 --> 00:15:12,866
好那我们最后来讲这个最复杂的

473
00:15:12,866 --> 00:15:13,666
这个部分

474
00:15:13,733 --> 00:15:14,699
怎么来算

475
00:15:14,700 --> 00:15:16,166
一批东西的运费

476
00:15:16,400 --> 00:15:18,000
其实不仅仅是算运费了

477
00:15:18,000 --> 00:15:19,300
他在算说

478
00:15:19,500 --> 00:15:22,866
这批东西到底要分成多少个包裹

479
00:15:22,933 --> 00:15:25,133
就是在如果买的很多的时候

480
00:15:25,533 --> 00:15:27,866
我们知道这一个API

481
00:15:27,866 --> 00:15:30,166
大家可以看到是一个内部API

482
00:15:30,566 --> 00:15:31,933
就是我们在下订单的时候

483
00:15:31,933 --> 00:15:33,266
其实会掉这个API

484
00:15:33,933 --> 00:15:37,466
当订单模块用户下了一堆的东西

485
00:15:37,466 --> 00:15:38,599
要去买的时候

486
00:15:39,133 --> 00:15:39,866
啊

487
00:15:39,866 --> 00:15:40,933
支付完成

488
00:15:41,200 --> 00:15:42,466
其实没有在支付了

489
00:15:42,466 --> 00:15:45,366
在支付完成之前你就要支付之前

490
00:15:45,600 --> 00:15:46,900
你就要需要算一下说

491
00:15:46,900 --> 00:15:49,766
这玩意到底要不要算运费

492
00:15:49,766 --> 00:15:51,799
因为算运费定位的付的钱要更多

493
00:15:52,000 --> 00:15:52,533
还有一个

494
00:15:52,533 --> 00:15:53,133
你要算一下

495
00:15:53,133 --> 00:15:54,999
说这玩意到底要用一个包裹技术去拿

496
00:15:55,000 --> 00:15:56,200
还是两个包裹技术去拿

497
00:15:56,466 --> 00:15:57,533
我们的订单

498
00:15:57,533 --> 00:15:58,866
这部分的逻辑是这样的啊

499
00:15:58,866 --> 00:16:00,266
我们分包裹是这样的

500
00:16:00,400 --> 00:16:01,700
如果在一个订单中间

501
00:16:01,700 --> 00:16:05,200
他买的商品是有不同的运费模板的

502
00:16:05,500 --> 00:16:06,400
那怎么办呢

503
00:16:06,800 --> 00:16:07,200
那就

504
00:16:07,200 --> 00:16:10,866
自然按照不同的运费模板去打包

505
00:16:11,200 --> 00:16:14,000
就是我们知道我们在商户定义的时候

506
00:16:14,000 --> 00:16:15,100
其实大部分的商品

507
00:16:15,100 --> 00:16:16,333
都会定义同一个模板

508
00:16:16,333 --> 00:16:17,399
是我们的默认模板

509
00:16:17,400 --> 00:16:18,200
计重模板

510
00:16:18,466 --> 00:16:19,999
他但凡定义了一个商品

511
00:16:20,000 --> 00:16:21,933
说他是特别的计件模板的话

512
00:16:21,933 --> 00:16:22,766
就是肯定说明

513
00:16:22,766 --> 00:16:23,566
这个商品

514
00:16:23,866 --> 00:16:24,766
是不能跟其他商品

515
00:16:24,766 --> 00:16:25,799
放在一个包裹里头的

516
00:16:25,800 --> 00:16:26,900
因为他超限了

517
00:16:27,133 --> 00:16:28,899
对吧所以你就必须把那个定义了

518
00:16:28,900 --> 00:16:31,800
特定的这个包裹

519
00:16:32,133 --> 00:16:34,166
这个商品给他单打一个包裹

520
00:16:34,466 --> 00:16:36,999
所以首先第一个排除的

521
00:16:37,000 --> 00:16:39,700
就是我们这个商铺里头的这些

522
00:16:39,700 --> 00:16:40,700
买的这些商品

523
00:16:40,700 --> 00:16:42,566
如果他的运费模板是不同的

524
00:16:42,900 --> 00:16:44,200
按照不同的运费模板

525
00:16:44,266 --> 00:16:46,999
分别形成快递单

526
00:16:47,333 --> 00:16:47,999
快递包裹

527
00:16:48,000 --> 00:16:48,800
这是第一

528
00:16:49,133 --> 00:16:50,933
然后呢在同一个用户模板中间

529
00:16:50,933 --> 00:16:51,999
比如说默认用户模板

530
00:16:52,000 --> 00:16:53,000
通常会出现这个问题

531
00:16:53,000 --> 00:16:54,133
他买的东西太多了

532
00:16:54,933 --> 00:16:55,799
买的东西太多了

533
00:16:55,800 --> 00:16:58,066
超过了单个包裹的上限

534
00:16:58,400 --> 00:17:01,066
那就需要分成若干个包裹

535
00:17:01,700 --> 00:17:04,333
那么怎么会超过上限呢

536
00:17:04,466 --> 00:17:07,266
就需要由运费模板来决定的

537
00:17:07,466 --> 00:17:09,133
所以这个API就是

538
00:17:09,133 --> 00:17:13,866
当订单模块已经按照不同的运费模板

539
00:17:14,066 --> 00:17:15,933
把所有的商品分开以后

540
00:17:16,100 --> 00:17:17,733
每一个运费模板商品

541
00:17:17,733 --> 00:17:21,199
它都要送到这个商铺模块去

542
00:17:21,200 --> 00:17:22,000
判断一下

543
00:17:22,000 --> 00:17:23,600
说他的运费是多少

544
00:17:23,933 --> 00:17:25,999
以及他是不是要分包

545
00:17:26,133 --> 00:17:27,733
运费是多少只是算一下

546
00:17:27,733 --> 00:17:28,599
至于收不收

547
00:17:28,766 --> 00:17:30,599
这是由商铺的规则来决定

548
00:17:30,600 --> 00:17:31,933
是不达到免额门槛

549
00:17:32,100 --> 00:17:34,066
如果达到免额门槛就不会收这个运费

550
00:17:34,100 --> 00:17:35,733
如果没达到免额门槛

551
00:17:35,733 --> 00:17:36,999
他就会收这个运费

552
00:17:37,333 --> 00:17:38,499
所以这个API进来以后

553
00:17:38,500 --> 00:17:40,066
他就会得到两个结果

554
00:17:40,533 --> 00:17:41,599
进来的时候大家可以看到

555
00:17:41,600 --> 00:17:43,133
我们只传了什么的

556
00:17:43,400 --> 00:17:44,566
只传了o的IP

557
00:17:44,566 --> 00:17:45,599
和PRO8的IP

558
00:17:45,800 --> 00:17:46,600
其实大家会觉得

559
00:17:46,600 --> 00:17:47,933
这两个功能传一个就好

560
00:17:48,166 --> 00:17:49,999
但是我们其实两个都传了啊

561
00:17:50,366 --> 00:17:51,966
然后呢传到他的数量

562
00:17:52,166 --> 00:17:53,166
传到他的重量

563
00:17:53,400 --> 00:17:55,700
因为如果计重的话是按照重量算的

564
00:17:55,700 --> 00:17:57,333
如果计件的话按照件数算

565
00:17:57,466 --> 00:17:59,133
所以我们势必要求说

566
00:17:59,133 --> 00:18:01,466
他要把这个商品的重量给他传进来

567
00:18:01,466 --> 00:18:02,166
这个重量信息

568
00:18:02,166 --> 00:18:03,966
并不代表这个模块里头

569
00:18:03,966 --> 00:18:05,533
而是在商品模块里头

570
00:18:05,700 --> 00:18:08,266
所以啊订单模块

571
00:18:08,266 --> 00:18:10,499
需要从商品模块拿到这个商品的重量

572
00:18:10,500 --> 00:18:13,800
然后再把它传给我们的这个模块

573
00:18:13,800 --> 00:18:14,966
我们不能去掉商品模块

574
00:18:14,966 --> 00:18:15,933
去查这个重量啊

575
00:18:15,933 --> 00:18:18,099
因为我们始终记得我们这个模块在哪

576
00:18:18,500 --> 00:18:20,000
在商品模块的下面

577
00:18:20,100 --> 00:18:21,600
所以你不能去掉商品模块

578
00:18:21,700 --> 00:18:24,000
但是订单模块是在商品模块的上面

579
00:18:24,100 --> 00:18:25,566
所以订单模块可以到商品模块

580
00:18:25,566 --> 00:18:26,466
拿到商品的重量

581
00:18:26,466 --> 00:18:29,399
再把商品重量告诉我们的商铺模块

582
00:18:29,400 --> 00:18:30,166
就是这个逻辑

583
00:18:30,166 --> 00:18:32,666
所以把重量也传了过来

584
00:18:32,766 --> 00:18:33,899
那返回值是什么呢

585
00:18:33,900 --> 00:18:35,300
返回值其实是一个

586
00:18:37,533 --> 00:18:38,333
对列

587
00:18:40,133 --> 00:18:41,466
上面有一个总价啊

588
00:18:41,466 --> 00:18:42,599
就运费的总价

589
00:18:42,666 --> 00:18:43,899
然后是一个对列

590
00:18:44,200 --> 00:18:46,200
这个对列里头又是一个对列

591
00:18:46,733 --> 00:18:47,699
外头这个对列是什么

592
00:18:47,700 --> 00:18:49,166
外头对列是有多少个包裹

593
00:18:49,400 --> 00:18:50,933
就是5 比如分成三个包裹

594
00:18:50,933 --> 00:18:53,533
那就是三个元素在里头

595
00:18:53,766 --> 00:18:54,699
每一个元素是什么呢

596
00:18:54,700 --> 00:18:56,066
每个元素里头又是一个对列

597
00:18:56,066 --> 00:18:57,599
这个对列是在这个包裹里头

598
00:18:57,600 --> 00:18:59,000
我放哪件商品

599
00:18:59,700 --> 00:19:02,266
也就是我们这一个API

600
00:19:02,366 --> 00:19:05,366
不仅仅要告诉他要打成多少个包裹

601
00:19:05,566 --> 00:19:09,366
而且还要明确的告诉前端说

602
00:19:09,366 --> 00:19:12,066
每一个包裹里应该放什么样的东西

603
00:19:12,333 --> 00:19:13,599
这个是因为什么原因呢

604
00:19:13,600 --> 00:19:15,133
是因为不可能说

605
00:19:15,133 --> 00:19:16,466
买的一批东西是同样的

606
00:19:16,466 --> 00:19:18,866
东西所以我们要按照配重

607
00:19:18,966 --> 00:19:20,299
按照不同的规则

608
00:19:20,500 --> 00:19:23,800
去把这些商品放到不同的包裹里头来

609
00:19:24,066 --> 00:19:25,099
有什么规则呢

610
00:19:25,100 --> 00:19:26,300
会有很多啊

611
00:19:26,566 --> 00:19:28,899
我们现在在这个系统中间有实现了

612
00:19:29,733 --> 00:19:31,499
不止我们这里所看到的四个

613
00:19:31,500 --> 00:19:33,700
因为去年有一帮这个做算法的大神

614
00:19:33,700 --> 00:19:35,800
所以他们这里都做了很多的算法

615
00:19:36,000 --> 00:19:37,900
我们在前列的时候做了两个

616
00:19:37,900 --> 00:19:39,400
一个是上线打包

617
00:19:39,400 --> 00:19:40,266
一个是均匀打包

618
00:19:40,266 --> 00:19:40,766
这最简单

619
00:19:40,766 --> 00:19:41,766
两个电脑

620
00:19:41,766 --> 00:19:43,966
就是我们的包裹的上限是多少

621
00:19:43,966 --> 00:19:46,566
那就把每个包裹都到上限

622
00:19:46,800 --> 00:19:48,800
然后把它分开

623
00:19:49,000 --> 00:19:50,466
对吧均匀打包呢

624
00:19:50,466 --> 00:19:52,299
就是我们的上限是多少

625
00:19:52,300 --> 00:19:54,133
然后我们的总重是多少

626
00:19:54,400 --> 00:19:55,700
然后我们总重呢

627
00:19:55,933 --> 00:19:57,866
均匀的分到每包裹的中间去

628
00:19:57,866 --> 00:19:59,199
所以叫做均匀打包

629
00:19:59,333 --> 00:20:00,733
就是均匀打包

630
00:20:01,300 --> 00:20:02,900
当然对于商户来说

631
00:20:02,900 --> 00:20:04,300
他其实最喜欢的是这个

632
00:20:04,800 --> 00:20:06,266
就是他不管重量

633
00:20:06,266 --> 00:20:07,566
也不管这个均不均匀

634
00:20:07,566 --> 00:20:10,466
他就管说我最后的运费最便宜

635
00:20:10,900 --> 00:20:13,300
就是那这个运费便宜怎么体现的呢

636
00:20:13,300 --> 00:20:14,466
他其实是间接的

637
00:20:14,466 --> 00:20:17,999
通过顾客的这个运费的价格来体现

638
00:20:18,166 --> 00:20:20,799
因为顾客算运费的这个价格

639
00:20:20,800 --> 00:20:25,200
其实变相反映了商户跟平

640
00:20:25,200 --> 00:20:26,966
跟那个物流公司的结算价格

641
00:20:26,966 --> 00:20:27,999
它是成正比的

642
00:20:28,000 --> 00:20:30,366
就是为什么我们要给顾客收那么多钱

643
00:20:30,566 --> 00:20:32,333
那肯定是因为平

644
00:20:32,333 --> 00:20:35,133
那个物流公司是给我们收了这么多钱

645
00:20:35,333 --> 00:20:37,566
所以我们这里算的价格对优

646
00:20:37,566 --> 00:20:38,933
其实是算的这个

647
00:20:39,100 --> 00:20:40,000
我们运费500块钱

648
00:20:40,000 --> 00:20:41,333
算出来的是运费费用

649
00:20:41,333 --> 00:20:42,699
因为这个费用高

650
00:20:42,700 --> 00:20:44,966
也是跟啊

651
00:20:44,966 --> 00:20:46,966
商户和物流公司的结算费用

652
00:20:46,966 --> 00:20:47,899
是成正比的啊

653
00:20:47,900 --> 00:20:50,466
所以说是求这个的费用

654
00:20:52,066 --> 00:20:55,099
所以不同的算法怎么样

655
00:20:55,100 --> 00:20:56,266
放到这里头去用

656
00:20:56,800 --> 00:20:58,400
我们用了一个设计模式

657
00:20:58,400 --> 00:21:00,333
这个设计模式解决什么样的问题呢

658
00:21:00,500 --> 00:21:01,400
解决的问题就是

659
00:21:01,400 --> 00:21:01,900
我们认为

660
00:21:01,900 --> 00:21:02,666
这些算法

661
00:21:02,666 --> 00:21:07,133
是整个这个部分的变化点和引进点

662
00:21:07,200 --> 00:21:09,266
既是变化点又是引进点

663
00:21:09,666 --> 00:21:09,766
所以

664
00:21:09,766 --> 00:21:12,966
我们要在这个地方要达成一个目标

665
00:21:12,966 --> 00:21:16,266
这个目标就是我们所说的开闭原则

666
00:21:16,900 --> 00:21:18,733
对吧你判断它是变化点和引力点

667
00:21:18,733 --> 00:21:19,133
你要说

668
00:21:19,133 --> 00:21:21,299
我的设计目标就是为达到开闭原则

669
00:21:21,566 --> 00:21:22,766
然后再想说

670
00:21:22,766 --> 00:21:25,799
你用什么样的手段来达到开闭原则

671
00:21:25,866 --> 00:21:27,499
那为什么是变化点引力点

672
00:21:27,500 --> 00:21:28,500
这个应该很明显

673
00:21:28,600 --> 00:21:31,166
因为我们的算法会不断的增加

674
00:21:31,566 --> 00:21:33,366
对吧这个

675
00:21:35,333 --> 00:21:35,966
每一年

676
00:21:35,966 --> 00:21:37,933
总会有同学们想出一些更好的算法

677
00:21:37,933 --> 00:21:38,966
超过前一页的算法

678
00:21:38,966 --> 00:21:40,333
不知道今年有没有啊

679
00:21:40,466 --> 00:21:41,466
让大家去努力

680
00:21:41,733 --> 00:21:44,299
所以总是会有更好的算法出现

681
00:21:44,666 --> 00:21:46,699
所以我们这个整个的这个结构

682
00:21:46,866 --> 00:21:49,066
不能说为了现在这几个算法做省

683
00:21:49,466 --> 00:21:51,466
我们希望说有新的算法进来的时候

684
00:21:51,466 --> 00:21:52,933
直接把新的算法加上去

685
00:21:53,166 --> 00:21:54,799
然后所有的都不动

686
00:21:54,866 --> 00:21:57,066
他就能够能够跑巧

687
00:21:57,066 --> 00:21:59,566
这就叫做对于扩展是开放的

688
00:21:59,866 --> 00:22:01,366
那现有算法有没有毛病呢

689
00:22:01,366 --> 00:22:02,599
肯定有毛病是吧

690
00:22:02,600 --> 00:22:03,866
算法这种东西嘛

691
00:22:04,000 --> 00:22:05,466
其实在做测试的时候

692
00:22:05,466 --> 00:22:08,099
比代码的测试更困难

693
00:22:08,333 --> 00:22:09,799
为啥因为代码的测试

694
00:22:09,800 --> 00:22:12,933
你只要去测缩代码覆盖了

695
00:22:12,933 --> 00:22:14,399
然后他的所有覆盖的

696
00:22:14,400 --> 00:22:16,766
这个和预想值是一样的

697
00:22:16,766 --> 00:22:18,533
那就可以大家去看一看

698
00:22:18,533 --> 00:22:21,466
这一段的测试用力

699
00:22:21,500 --> 00:22:23,166
我把其他测试用力都删了

700
00:22:23,666 --> 00:22:25,333
这一段的测试用力我把它全改了

701
00:22:25,333 --> 00:22:26,999
改成能够跑的这个状态

702
00:22:27,533 --> 00:22:30,133
它是远远不是以覆盖率

703
00:22:30,200 --> 00:22:32,066
来做这个判断的

704
00:22:32,200 --> 00:22:35,600
而是在找最优的这个结果

705
00:22:35,700 --> 00:22:37,733
也就是它用的各种数据去做对比

706
00:22:37,733 --> 00:22:38,699
比如说我们最开始做

707
00:22:38,700 --> 00:22:41,000
的上线打包和均匀打包

708
00:22:41,166 --> 00:22:42,166
然后后来也做了

709
00:22:42,166 --> 00:22:43,966
比这两个算法更好的算法

710
00:22:43,966 --> 00:22:44,699
那么怎么知道

711
00:22:44,700 --> 00:22:46,166
这两个算法是更好的算法呢

712
00:22:46,900 --> 00:22:49,366
大家觉得怎么知道他的更好的算法

713
00:22:49,800 --> 00:22:51,200
所以拿各种数据

714
00:22:51,200 --> 00:22:53,100
去在前面的算法上去做比较

715
00:22:53,100 --> 00:22:54,466
前面的算法算出来是多少

716
00:22:54,566 --> 00:22:56,566
我现在算法算出来至少不比他差

717
00:22:56,733 --> 00:22:58,099
那就说明我的算法是更好

718
00:22:58,533 --> 00:22:59,499
所以大家可以看到

719
00:22:59,500 --> 00:23:00,800
去年写这个部分

720
00:23:00,800 --> 00:23:03,100
特别是写后面的这个

721
00:23:03,366 --> 00:23:05,366
要证明最优的算法的那些同学

722
00:23:05,366 --> 00:23:06,299
是玩命的在写

723
00:23:06,300 --> 00:23:07,100
测兄弟

724
00:23:07,200 --> 00:23:09,100
整个测兄弟写了一两千行的测兄弟

725
00:23:09,100 --> 00:23:10,366
我都舍不得删啊

726
00:23:10,500 --> 00:23:12,733
所以我就把他完整的保下保留下来了

727
00:23:13,100 --> 00:23:14,333
所以算法的部分啊

728
00:23:14,333 --> 00:23:15,966
就大家如果去做算法工程师的话

729
00:23:15,966 --> 00:23:18,366
其实它它是一个比较烧脑的过程

730
00:23:18,366 --> 00:23:19,933
而且为了验证这个算法

731
00:23:20,000 --> 00:23:22,100
是比前面的算法更好

732
00:23:22,200 --> 00:23:24,766
你其实是要付出很大的这个代价

733
00:23:24,866 --> 00:23:27,066
那同样你怎么测试

734
00:23:27,066 --> 00:23:27,999
你其实都没办法证明

735
00:23:28,000 --> 00:23:32,066
这个算法在所有的情况下都是OK的

736
00:23:32,066 --> 00:23:32,866
因为大家知道

737
00:23:32,866 --> 00:23:34,566
这是一个不能穷举的过程

738
00:23:34,933 --> 00:23:37,566
对吧你不能穷举说所有的可能性

739
00:23:37,666 --> 00:23:39,166
所以你也不能保证这个算法案呢

740
00:23:39,166 --> 00:23:40,333
将来不会出问题

741
00:23:40,533 --> 00:23:42,499
那我们的算法就需要不断的改进

742
00:23:42,666 --> 00:23:44,266
所以我们在这个部分的设计目标

743
00:23:44,266 --> 00:23:44,933
就是要打通

744
00:23:44,933 --> 00:23:45,733
开辟原则

745
00:23:46,133 --> 00:23:47,333
新的算法能够融进呢

746
00:23:47,333 --> 00:23:48,766
新有算法在进行修改了以后

747
00:23:48,766 --> 00:23:50,599
不会去动到其他部分的代码

748
00:23:50,733 --> 00:23:51,766
就能够去完成

749
00:23:51,966 --> 00:23:52,699
那怎么做的呢

750
00:23:52,700 --> 00:23:54,200
我们到下周一再讲吧

751
00:23:55,000 --> 00:23:56,100
好今天就到这里

752
00:24:11,733 --> 00:24:13,166
你是想干嘛

753
00:24:41,900 --> 00:24:42,600
那你可以看一下

754
00:24:42,600 --> 00:24:43,900
为什么他没进起来

755
00:24:44,000 --> 00:24:44,800
对

756
00:24:47,100 --> 00:24:48,133
他这个没起来

757
00:24:48,133 --> 00:24:50,599
是吧所以你第一个你

758
00:24:50,600 --> 00:24:53,100
看一下他起来之后出没出错

759
00:24:53,600 --> 00:24:56,700
所以你先PS这个把它熄火

760
00:24:57,366 --> 00:24:58,466
然后看看有没有错

761
00:24:58,500 --> 00:24:59,666
他不是他们也错了

762
00:24:59,666 --> 00:25:00,966
他们也看不见我

763
00:25:01,266 --> 00:25:02,866
然后你给你加一个

764
00:25:13,666 --> 00:25:16,066
就是他是被你退出了

765
00:25:16,133 --> 00:25:17,399
那他声音太浅了

766
00:25:17,400 --> 00:25:18,200
你看

767
00:25:23,000 --> 00:25:25,000
好像他比我太好看后面

768
00:25:33,366 --> 00:25:34,899
但是启动时他已经起来了

769
00:25:34,900 --> 00:25:36,666
他启动时候是没有启动

770
00:25:48,100 --> 00:25:52,000
然后他是有一个my simple的8个亿没有

771
00:25:53,700 --> 00:25:55,266
他打不开这个文件

772
00:25:55,266 --> 00:25:56,066
这个文件打不开

773
00:25:56,066 --> 00:25:57,366
他就情况没有掉

774
00:25:58,000 --> 00:25:58,600
对

775
00:25:58,600 --> 00:25:59,800
那你这个怎么装呢

776
00:25:59,800 --> 00:26:00,600
为什么会

777
00:26:53,866 --> 00:26:55,066
这个

778
00:26:56,300 --> 00:26:58,100
这个是这个

779
00:27:03,333 --> 00:27:04,133
这

780
00:27:05,366 --> 00:27:08,466
样他就是把那个c口音全部存进去了

781
00:27:08,466 --> 00:27:10,266
然后把这个字母啊放好

782
00:27:10,966 --> 00:27:13,733
然后把这个数据一直到屏蔽是吧

783
00:27:14,333 --> 00:27:15,133
然后

784
00:27:27,866 --> 00:27:29,466
配置

785
00:27:29,466 --> 00:27:30,733
那就他出启动

786
00:27:31,000 --> 00:27:33,800
那个配置跟不上他的新版本

787
00:27:33,800 --> 00:27:35,100
因为这个版本更新了

788
00:27:35,200 --> 00:27:36,600
所以他可能配置老了

789
00:27:41,333 --> 00:27:42,599
那我再花时间找一下他到底

790
00:27:42,600 --> 00:27:44,000
找到配置之后他的情况

791
00:27:44,900 --> 00:27:45,666
我一般来说

792
00:27:45,666 --> 00:27:46,466
就是

793
00:27:46,466 --> 00:27:49,099
把这个新版本的这个配置卡考出去

794
00:27:49,100 --> 00:27:51,366
然后再把它登进到那个model里面

795
00:27:51,366 --> 00:27:52,899
就可以了因为啊

796
00:27:52,900 --> 00:27:54,166
这是去年写的这个店嘛

797
00:27:54,166 --> 00:27:54,933
但是现在的话是

798
00:27:54,933 --> 00:27:56,166
以后呢他本身的

799
00:27:56,166 --> 00:27:57,866
所以他可能去年就找配置了

800
00:27:58,900 --> 00:28:00,300
那我们这个启动之后

801
00:28:01,800 --> 00:28:03,533
可以改可以改

802
00:28:05,566 --> 00:28:06,666
你要改配置吗

803
00:28:41,533 --> 00:28:43,799
对啊那湖南的人家愿意做

804
00:28:44,366 --> 00:28:45,199
我们这边做

805
00:28:45,866 --> 00:28:49,266
然后本来那个是个企业项目

806
00:28:49,266 --> 00:28:50,933
所以会给你们一辈子补助

807
00:28:51,133 --> 00:28:52,366
看你们做的咋样

808
00:28:52,566 --> 00:28:54,866
然后因为哪位同学比较晚一点

809
00:28:54,966 --> 00:28:57,566
我们学校是20号之前才能发布

810
00:28:58,200 --> 00:29:01,066
恰好会在11月20号比较还账

811
00:29:01,533 --> 00:29:03,499
所以到春节

812
00:29:03,500 --> 00:29:05,700
春节之前到1月份就没办法

813
00:29:06,100 --> 00:29:06,566
那我每月

814
00:29:06,566 --> 00:29:07,933
都是办法啊

815
00:29:12,700 --> 00:29:14,466
然后你如果做了你看

816
00:29:14,566 --> 00:29:16,899
我相信你会发这样做事吗

817
00:29:17,000 --> 00:29:19,400
然后就看说你们做的情况

818
00:29:19,400 --> 00:29:20,366
有这样做的

819
00:29:20,366 --> 00:29:21,599
好的话多做的

820
00:29:21,666 --> 00:29:22,899
差的少一点

821
00:29:23,000 --> 00:29:23,800
哦可以

822
00:29:24,666 --> 00:29:26,099
我们现在决定的补助是这样决定的

823
00:29:26,100 --> 00:29:28,200
补助是五公里发到1,500

824
00:29:28,200 --> 00:29:30,166
或者超过2,000块就给你

825
00:29:30,166 --> 00:29:32,399
发到就直接给你发到1,900

826
00:29:32,966 --> 00:29:34,999
那就是正常来说

827
00:29:35,500 --> 00:29:36,333
打卡来说

828
00:29:36,333 --> 00:29:37,133
也就是

829
00:29:37,600 --> 00:29:39,500
呃超过2,000块钱吧

830
00:29:39,700 --> 00:29:41,500
就是女装的话不超过2,000块钱

831
00:29:41,600 --> 00:29:43,133
嗯那这个做不好

832
00:29:45,500 --> 00:29:47,066
然后这个任务的话

833
00:29:47,200 --> 00:29:50,700
我不是又把他那个代码分享给他了

834
00:29:51,366 --> 00:29:53,066
那我把代码也分享给你了

835
00:29:54,366 --> 00:29:54,933
给大家看

836
00:29:54,933 --> 00:29:55,866
给你们看一下

837
00:29:56,333 --> 00:29:58,299
这个任务里头对我们来说有两个难度

838
00:29:58,300 --> 00:29:59,266
一个是构宇

839
00:29:59,266 --> 00:30:00,166
你们两个都不熟悉

840
00:30:00,166 --> 00:30:00,933
构宇是吧

841
00:30:00,933 --> 00:30:02,066
有开始自学了没有

842
00:30:02,366 --> 00:30:04,966
看了就觉得反正都是分析

843
00:30:04,966 --> 00:30:05,766
差不多吧

844
00:30:06,100 --> 00:30:07,333
呃跟c差别大了

845
00:30:07,333 --> 00:30:09,133
差别大怎么会跟c差不多

846
00:30:09,666 --> 00:30:12,866
就是呃现在的这个

847
00:30:12,933 --> 00:30:14,966
这个嗯

848
00:30:15,133 --> 00:30:16,499
就是学这个勾语啊

849
00:30:16,500 --> 00:30:19,000
其实如果快的话

850
00:30:19,000 --> 00:30:21,733
大概一周到两周之内应该就能够看懂

851
00:30:21,733 --> 00:30:22,599
他先有蛋了

852
00:30:22,933 --> 00:30:23,333
就是

853
00:30:23,333 --> 00:30:25,333
你不是说漫无目的的去学会勾引

854
00:30:25,333 --> 00:30:26,466
我们现在是有一个

855
00:30:26,533 --> 00:30:27,399
是有一个目标

856
00:30:27,400 --> 00:30:28,400
这个目标就是

857
00:30:28,866 --> 00:30:31,133
他现在实际上是有一个现有的系统

858
00:30:38,700 --> 00:30:40,500
但是他是负责原理

859
00:30:40,866 --> 00:30:42,599
所以必须他把东西搞清楚

860
00:30:42,600 --> 00:30:43,966
然后让我去做

861
00:30:45,066 --> 00:30:46,999
我先把你的这个加进来

862
00:30:48,533 --> 00:30:49,333
他这代码还不全

863
00:30:49,333 --> 00:30:51,066
还有他这个代码做的

864
00:30:51,700 --> 00:30:52,866
做的比较垃圾哦

865
00:30:53,466 --> 00:30:56,466
就是我首先说他这个是个什么东西吧

866
00:30:56,566 --> 00:30:58,299
那你看代码里卡做的什么东西吧

867
00:30:58,466 --> 00:30:59,866
还没看

868
00:31:00,066 --> 00:31:00,866
还没看

869
00:31:01,600 --> 00:31:03,000
你一边看这个代码

870
00:31:03,000 --> 00:31:04,400
一边去学习后语

871
00:31:04,533 --> 00:31:05,399
这就比较有目标

872
00:31:05,400 --> 00:31:07,733
因为你学后语的目标不是漫目的的去

873
00:31:07,733 --> 00:31:08,699
去干别的事

874
00:31:09,100 --> 00:31:11,666
我们干这个东西的目标是为了什么呢

875
00:31:11,666 --> 00:31:15,399
就是他现在这个系统第一个里头有bug

876
00:31:15,400 --> 00:31:16,200
第二个呢

877
00:31:16,333 --> 00:31:17,766
他有新的设备加不上来

878
00:31:17,766 --> 00:31:19,499
这个系统是一个是一个

879
00:31:19,500 --> 00:31:20,166
什么是一个

880
00:31:20,166 --> 00:31:22,266
那个物联网的尚未期

881
00:31:22,666 --> 00:31:23,299
就是他外

882
00:31:23,300 --> 00:31:25,500
他外面是接了很多很多的设备

883
00:31:25,766 --> 00:31:28,533
那他现在目前主要的是两块设备

884
00:31:28,533 --> 00:31:30,266
一块是整个厦门市的夜景

885
00:31:30,500 --> 00:31:32,733
就像这不是所有的那个大楼上

886
00:31:32,733 --> 00:31:33,899
那个LED灯嘛

887
00:31:34,266 --> 00:31:35,466
都是这个系统控制的

888
00:31:36,333 --> 00:31:37,599
它的控制的目的就是

889
00:31:37,600 --> 00:31:39,933
那些LED灯其实并不属于那些大楼的

890
00:31:40,166 --> 00:31:41,499
它是属于市政府的

891
00:31:41,866 --> 00:31:43,966
市政府可以统一的控制所有LED灯

892
00:31:43,966 --> 00:31:44,866
在什么时候开

893
00:31:44,866 --> 00:31:45,666
什么时候关

894
00:31:46,166 --> 00:31:48,666
在LED灯上头放什么样的画面

895
00:31:48,700 --> 00:31:50,000
所以大家可以看到金鸡节的时候

896
00:31:50,000 --> 00:31:52,366
为什么所有的大楼都放同样的东西

897
00:31:52,366 --> 00:31:53,499
就是他们在控制的

898
00:31:53,700 --> 00:31:54,466
那现在这个系统

899
00:31:54,466 --> 00:31:57,866
就是那个LED灯的上微机主控系统

900
00:31:58,700 --> 00:31:59,300
就是它

901
00:31:59,300 --> 00:32:01,466
在上面还有一个用加瓦做的业务系统

902
00:32:01,900 --> 00:32:02,400
然后呢

903
00:32:02,400 --> 00:32:05,166
业务系统会去定义说要怎么开关

904
00:32:05,166 --> 00:32:05,966
怎么开关

905
00:32:06,100 --> 00:32:07,666
然后现在这个用构原做的

906
00:32:07,666 --> 00:32:09,366
是在业务系统下面

907
00:32:09,366 --> 00:32:10,566
他去调这个系统

908
00:32:10,700 --> 00:32:13,133
然后这个系统去真正的去控制

909
00:32:13,766 --> 00:32:16,166
去调那个所有大楼里头的那些

910
00:32:16,166 --> 00:32:17,699
没有移地的行线

911
00:32:18,133 --> 00:32:19,799
对那是用result API来调

912
00:32:20,000 --> 00:32:21,500
这个系统是用构员

913
00:32:21,500 --> 00:32:24,700
用那个镜框架做了为主的

914
00:32:24,700 --> 00:32:26,666
假如说我还没看到他是怎么调的

915
00:32:26,666 --> 00:32:29,299
我们周五去跟他公司去沟通一下

916
00:32:29,533 --> 00:32:31,199
主要是了解两方面的内容

917
00:32:31,200 --> 00:32:33,133
一个是他们的业务模块是怎么调

918
00:32:33,133 --> 00:32:34,533
我们照这个系统

919
00:32:35,000 --> 00:32:37,800
再一个是他要新加的设备

920
00:32:37,800 --> 00:32:39,300
是一个什么样的新加设备

921
00:32:39,366 --> 00:32:41,333
然后设备是怎么接到这个信号

922
00:32:41,733 --> 00:32:43,099
所以现在看到这个代码

923
00:32:43,100 --> 00:32:44,966
是一个承上启下的东西

924
00:32:45,366 --> 00:32:47,366
就是他提供那个DPI

925
00:32:47,500 --> 00:32:49,066
供加网的系统去调

926
00:32:49,366 --> 00:32:51,266
然后呢加网系统调他以后

927
00:32:51,266 --> 00:32:54,799
他会去发给所有的那些控制器

928
00:32:55,066 --> 00:32:56,199
然后控制器这边呢

929
00:32:56,200 --> 00:32:57,733
其实它是用网络连的

930
00:32:57,733 --> 00:32:59,166
自己定制的

931
00:32:59,400 --> 00:33:00,400
不是音乐连的

932
00:33:00,733 --> 00:33:02,799
他是通过网络去一两年

933
00:33:04,400 --> 00:33:06,100
因为他为什么会用高原做事

934
00:33:06,100 --> 00:33:07,000
他的设备特别多

935
00:33:07,000 --> 00:33:08,366
他都有400台设备

936
00:33:09,733 --> 00:33:11,099
400到500台设备

937
00:33:12,266 --> 00:33:13,099
然后它这个系统

938
00:33:13,100 --> 00:33:15,600
是要时时刻刻收集这些

939
00:33:15,733 --> 00:33:17,133
这些设备的信息

940
00:33:17,900 --> 00:33:19,366
就它的运行状态信息

941
00:33:19,666 --> 00:33:21,699
然后呢它要去控制它的开关

942
00:33:21,700 --> 00:33:22,933
液体会比较简单

943
00:33:22,933 --> 00:33:25,899
液体就是控制它开和关

944
00:33:26,300 --> 00:33:28,700
其他的它都它都它都没有去控制

945
00:33:28,766 --> 00:33:29,933
但还有些其他的设备

946
00:33:29,933 --> 00:33:30,933
它可能就会

947
00:33:31,700 --> 00:33:33,100
比如说像门禁系统啊这类的

948
00:33:33,100 --> 00:33:34,966
他会有控制会更多一点

949
00:33:35,300 --> 00:33:36,333
那这一个部分来说

950
00:33:36,333 --> 00:33:39,166
他主要是基于那个MQTT协议

951
00:33:39,166 --> 00:33:41,133
和m o bus协议

952
00:33:41,300 --> 00:33:43,300
这两个都是属于网络协议

953
00:33:43,866 --> 00:33:45,166
那这边来说

954
00:33:45,166 --> 00:33:47,133
其实是通过TCPIP的网络协议

955
00:33:47,133 --> 00:33:48,899
再去跟这些设备去做

956
00:33:48,900 --> 00:33:49,366
去做沟通

957
00:33:49,366 --> 00:33:50,166
那和

958
00:33:51,566 --> 00:33:52,733
沟通的协议是什么

959
00:33:52,966 --> 00:33:54,199
应该是research API

960
00:33:54,200 --> 00:33:56,000
他说的是research AP

961
00:33:56,366 --> 00:33:58,499
就是我们这个

962
00:33:58,500 --> 00:33:59,400
它是用近框架

963
00:33:59,400 --> 00:34:00,300
大家可以看到这个代码

964
00:34:00,300 --> 00:34:01,333
中间它是用近框架做的

965
00:34:01,333 --> 00:34:02,299
它既然用近框架做的

966
00:34:02,300 --> 00:34:03,366
肯定是要用RESO API

967
00:34:03,366 --> 00:34:04,399
那我们没找到这个部分

968
00:34:04,400 --> 00:34:06,300
那就是阿分西暴露接口吗

969
00:34:07,366 --> 00:34:09,199
也可能是接GRPC

970
00:34:09,200 --> 00:34:11,000
也可能所以要问他

971
00:34:11,000 --> 00:34:11,900
这个我还不知道

972
00:34:11,900 --> 00:34:12,666
我们周五去问他

973
00:34:12,666 --> 00:34:13,499
说到底是真

974
00:34:13,566 --> 00:34:15,299
他这里既用了这个GRPC

975
00:34:15,933 --> 00:34:17,333
也用了这个净化架

976
00:34:18,166 --> 00:34:18,966
看到没有

977
00:34:19,066 --> 00:34:19,899
如果是用净化液

978
00:34:19,900 --> 00:34:21,533
的话应该就是用的Reservoir API

979
00:34:21,933 --> 00:34:23,966
如果是用这个GRPC的话

980
00:34:23,966 --> 00:34:25,366
那就可能是用GRPC

981
00:34:25,366 --> 00:34:26,533
所以说这个具体要问他

982
00:34:26,533 --> 00:34:28,366
他们到底是用什么时候

983
00:34:28,366 --> 00:34:29,466
什么东西来做的

984
00:34:29,700 --> 00:34:30,466
然后你可以看到

985
00:34:30,466 --> 00:34:34,133
这个是跟是跟设备通讯的MQTT协议

986
00:34:35,200 --> 00:34:37,766
然后还有还有一些协议

987
00:34:38,766 --> 00:34:40,333
所以这个东西主要的目的

988
00:34:40,333 --> 00:34:42,699
其实就是放在中间

989
00:34:42,900 --> 00:34:44,733
然后跟设备去做通讯

990
00:34:44,733 --> 00:34:46,099
设备通过网络协议

991
00:34:46,200 --> 00:34:48,566
把数据送到这个设备

992
00:34:48,566 --> 00:34:49,933
这个服务器来

993
00:34:49,933 --> 00:34:51,366
然后再把数据存下来

994
00:34:51,766 --> 00:34:54,999
然后如果说业务系统通过RPC

995
00:34:55,000 --> 00:34:56,133
或者通过进的

996
00:34:56,666 --> 00:34:57,299
发布设备时

997
00:34:57,300 --> 00:34:58,600
往这边发指令的话

998
00:34:58,600 --> 00:35:00,100
就是调动的API的话

999
00:35:00,200 --> 00:35:02,333
让他把这个命名的送给设备

1000
00:35:02,366 --> 00:35:03,566
就是干这么一个事情

1001
00:35:03,566 --> 00:35:04,366
没有界面

1002
00:35:04,900 --> 00:35:06,100
这系统好处在于没有界面

1003
00:35:06,100 --> 00:35:07,100
我也不会写界面

1004
00:35:07,333 --> 00:35:08,733
你们有你们会写界面吗

1005
00:35:08,933 --> 00:35:09,466
不会对

1006
00:35:09,466 --> 00:35:10,733
所以我们都不会写界面

1007
00:35:10,733 --> 00:35:11,533
挺好

1008
00:35:11,700 --> 00:35:13,566
这纯粹就是一个没有界面的东西

1009
00:35:16,266 --> 00:35:17,566
然后他现在的要求是

1010
00:35:17,566 --> 00:35:19,299
一个是控制整个厦门市的

1011
00:35:19,300 --> 00:35:20,766
所有的大楼的LED

1012
00:35:21,166 --> 00:35:24,666
还有一个是他是他这个系统是建发的

1013
00:35:25,066 --> 00:35:26,533
建发不是有好多物业吗

1014
00:35:26,866 --> 00:35:28,599
他那些物业的门禁也要控制

1015
00:35:29,366 --> 00:35:30,699
所以它虽然是两套系统

1016
00:35:30,700 --> 00:35:30,966
但是

1017
00:35:30,966 --> 00:35:32,866
其实应该是可以做到一套里头来的

1018
00:35:32,933 --> 00:35:34,599
但是它现在是分开两套了

1019
00:35:34,666 --> 00:35:35,899
那我们的任务呢

1020
00:35:36,166 --> 00:35:39,733
第一是把它这一套系统把它接下来

1021
00:35:40,100 --> 00:35:41,133
就是他其实已经做好了

1022
00:35:41,133 --> 00:35:41,799
这里头有bug

1023
00:35:41,800 --> 00:35:42,900
然后有新的设备没有

1024
00:35:42,900 --> 00:35:43,933
没有接进去

1025
00:35:43,966 --> 00:35:44,566
所以我们要了解

1026
00:35:44,566 --> 00:35:46,699
说他有什么新的设备要接进来

1027
00:35:46,800 --> 00:35:49,666
第二这里头的bug把它改掉

1028
00:35:49,700 --> 00:35:51,900
所以首先要首先我们可能要花

1029
00:35:52,166 --> 00:35:53,799
可能今年的主要的任务不是

1030
00:35:53,800 --> 00:35:54,900
在做新的东西

1031
00:35:54,900 --> 00:35:57,200
而是要把它现有的这个系统给它吃透

1032
00:35:57,733 --> 00:35:59,533
知道它里头的逻辑是什么

1033
00:35:59,700 --> 00:36:02,966
它的这个跑起来是个什么样

1034
00:36:02,966 --> 00:36:06,099
然后慢慢的把新设备把它引进来

1035
00:36:06,100 --> 00:36:07,666
就这样但我其实看了以后

1036
00:36:07,666 --> 00:36:08,699
我觉得它做的挺烂的

1037
00:36:08,700 --> 00:36:11,000
我想是把它整个完成重构一下

1038
00:36:11,300 --> 00:36:15,000
但是先满足他现有的要求吧

1039
00:36:15,000 --> 00:36:15,733
然后再看书

1040
00:36:15,733 --> 00:36:18,266
要不要把他整个去完成成功一下

1041
00:36:20,300 --> 00:36:21,900
然后这个里头是有一个文档

1042
00:36:21,900 --> 00:36:23,900
这个文档看到的是什么呢

1043
00:36:24,300 --> 00:36:27,533
看到的是我放到那个bridge上的

1044
00:36:27,533 --> 00:36:28,333
华为

1045
00:36:34,766 --> 00:36:36,366
这个是他业务系统的问题

1046
00:36:39,366 --> 00:36:40,366
阿华那个文档放进

1047
00:36:40,366 --> 00:36:41,599
那我把文档放进来

1048
00:36:42,533 --> 00:36:44,099
然后他有这个用户吧

1049
00:36:44,100 --> 00:36:45,666
你应该能看到这个代码了是吧

1050
00:36:46,066 --> 00:36:46,566
可以看到

1051
00:36:46,566 --> 00:36:48,199
那我把你也加进了

1052
00:37:00,966 --> 00:37:01,866
1211

1053
00:37:15,800 --> 00:37:18,466
然后他刚刚又发了我一些这个资料

1054
00:37:18,533 --> 00:37:19,533
我还没来得及看

1055
00:37:19,533 --> 00:37:20,599
今天一直在上课

1056
00:37:23,566 --> 00:37:24,966
他在讲说他的

1057
00:37:27,100 --> 00:37:29,066
整个的设备是怎么接进来的

1058
00:37:30,000 --> 00:37:31,333
我到发给你们吧

1059
00:37:33,666 --> 00:37:35,266
然后他的这是他的

1060
00:37:36,566 --> 00:37:39,999
夜景的这个连接的细节

1061
00:37:40,066 --> 00:37:40,999
我发到群里

1062
00:37:43,533 --> 00:37:44,099
你们必胜

1063
00:37:44,100 --> 00:37:45,733
现在已经开始选完了是吧

1064
00:37:46,000 --> 00:37:47,600
那估计是因为我这个题目

1065
00:37:47,666 --> 00:37:49,066
大家觉得太小众了

1066
00:37:49,066 --> 00:37:49,866
没人敢选

1067
00:37:51,200 --> 00:37:52,166
是选完了吧

1068
00:37:53,200 --> 00:37:54,200
对已经结束了

1069
00:37:54,200 --> 00:37:55,000
嗯

1070
00:37:55,000 --> 00:37:56,400
那就你们两个人处吧

1071
00:37:56,900 --> 00:37:59,733
找不到拼音吧学号

1072
00:37:59,933 --> 00:38:00,699
拼音

1073
00:38:00,700 --> 00:38:01,866
你的账号是什么

1074
00:38:04,133 --> 00:38:05,799
你们两个原来是在哪实习啊你

1075
00:38:05,800 --> 00:38:07,666
好像你是在拼多多是吧

1076
00:38:07,666 --> 00:38:08,533
我在拼多多

1077
00:38:08,533 --> 00:38:09,299
你在哪实习的

1078
00:38:09,300 --> 00:38:10,100
我在美团

1079
00:38:10,266 --> 00:38:11,799
那你们在实习的时候

1080
00:38:11,800 --> 00:38:12,966
都是做的加瓦是吧

1081
00:38:12,966 --> 00:38:13,766
对

1082
00:38:13,966 --> 00:38:16,099
现在拼多多和美团也在做购吗

1083
00:38:16,600 --> 00:38:17,266
美团啊

1084
00:38:17,266 --> 00:38:19,066
你看你们都不是一共有没有在做购

1085
00:38:19,066 --> 00:38:19,666
美团拼多多

1086
00:38:19,666 --> 00:38:21,966
好像他的价格部门也没有在做购吗

1087
00:38:22,800 --> 00:38:25,533
基础架构那一块我不太清楚

1088
00:38:25,566 --> 00:38:26,733
就是你们都做的是应用部

1089
00:38:26,733 --> 00:38:28,933
没有在去基础架构部实习是吧

1090
00:38:28,933 --> 00:38:30,899
对我我是搞业务的啊

1091
00:38:31,533 --> 00:38:31,933
奇怪

1092
00:38:31,933 --> 00:38:33,599
因为高语言他其实主要是在做

1093
00:38:33,600 --> 00:38:34,666
他的基础架构

1094
00:38:34,933 --> 00:38:36,299
就是做底层的东西

1095
00:38:36,300 --> 00:38:37,166
就是这个

1096
00:38:37,166 --> 00:38:38,666
像这个系统他也是

1097
00:38:41,200 --> 00:38:42,500
你忘了你的这个密

1098
00:38:42,500 --> 00:38:43,333
忘了你的用户名了

1099
00:38:43,333 --> 00:38:44,933
是吧不是学号吧

1100
00:38:44,933 --> 00:38:45,899
应该是你的姓名

1101
00:38:46,533 --> 00:38:47,333
邮箱

1102
00:38:47,966 --> 00:38:49,266
邮箱哦

1103
00:38:52,500 --> 00:38:52,933
你们现在

1104
00:38:52,933 --> 00:38:54,799
今年能去大厂实习的比例有多少

1105
00:38:54,800 --> 00:38:56,800
大概百分

1106
00:38:57,566 --> 00:38:58,966
因为今年都在考研

1107
00:38:58,966 --> 00:39:00,133
没有几个做实习的

1108
00:39:00,133 --> 00:39:02,199
所以说大厂实习还好找一些

1109
00:39:02,400 --> 00:39:03,600
难道是十几个

1110
00:39:03,766 --> 00:39:04,699
那还挺好的

1111
00:39:05,600 --> 00:39:07,066
多大多都是华为

1112
00:39:07,666 --> 00:39:08,899
大多数是华为是吧

1113
00:39:09,200 --> 00:39:10,700
阿里有两个吧

1114
00:39:11,600 --> 00:39:12,466
什么我忘记了

1115
00:39:12,466 --> 00:39:13,166
那你那你

1116
00:39:13,166 --> 00:39:14,666
那你找到你发的邮箱

1117
00:39:14,733 --> 00:39:15,733
发发微信

1118
00:39:15,733 --> 00:39:16,799
好我加进去

1119
00:39:17,500 --> 00:39:18,266
所以任务是

1120
00:39:18,266 --> 00:39:19,266
这么大个任务

1121
00:39:19,466 --> 00:39:21,566
那我现在对你们迫切的需求呢

1122
00:39:21,566 --> 00:39:22,099
就是这个

1123
00:39:22,100 --> 00:39:24,466
这段时间给你们一个多月的时间

1124
00:39:24,466 --> 00:39:27,366
把够语言能够学会

1125
00:39:28,166 --> 00:39:31,399
然后能够把他现有的系统能够跑起来

1126
00:39:32,400 --> 00:39:33,100
嗯

1127
00:39:33,100 --> 00:39:35,500
然后慢慢的去理解消化他这个代码

1128
00:39:35,500 --> 00:39:36,800
其实他也没做测试

1129
00:39:36,800 --> 00:39:38,800
其实我想我们的入手方式呢

1130
00:39:38,933 --> 00:39:40,333
就是先把他的所有代码测试

1131
00:39:40,333 --> 00:39:41,533
用力全部写起来

1132
00:39:41,533 --> 00:39:42,966
然后把他的代码

1133
00:39:43,466 --> 00:39:45,733
把他的覆盖率给他测测上去

1134
00:39:47,700 --> 00:39:49,000
这样的话来来

1135
00:39:49,000 --> 00:39:49,700
慢慢的入手

1136
00:39:49,700 --> 00:39:51,400
因为你学习这个购源

1137
00:39:51,400 --> 00:39:52,366
有有一个过程

1138
00:39:52,366 --> 00:39:54,333
这个过程的话你去忙学的话

1139
00:39:54,333 --> 00:39:55,866
还不如你带一个任务去学

1140
00:39:56,566 --> 00:39:59,099
就是你带着任务去看懂他现有的代码

1141
00:39:59,100 --> 00:40:02,133
然后因为我不知道你现在看过

1142
00:40:02,133 --> 00:40:04,199
看现在购源代码看到一个什么程度

1143
00:40:05,600 --> 00:40:07,066
你们现在打算怎么学法

1144
00:40:07,900 --> 00:40:11,100
感觉最基础的语法是吧

1145
00:40:11,133 --> 00:40:11,866
我跟你说

1146
00:40:11,866 --> 00:40:13,733
你把自己定一个极限

1147
00:40:13,733 --> 00:40:14,766
比如说5天

1148
00:40:14,766 --> 00:40:15,799
你现在好像没课吗

1149
00:40:15,933 --> 00:40:16,766
5天时间

1150
00:40:16,766 --> 00:40:18,499
把所有的语言的语法全部看完

1151
00:40:19,200 --> 00:40:20,166
然后你重点去看

1152
00:40:20,166 --> 00:40:21,466
说他跟这个

1153
00:40:21,533 --> 00:40:22,666
跟你们熟悉的这个夹板

1154
00:40:22,666 --> 00:40:23,799
有不同的地方在哪

1155
00:40:23,933 --> 00:40:26,099
他可能重点的就是他滴他没有泪

1156
00:40:26,100 --> 00:40:28,933
他就用那个刷球来做的

1157
00:40:28,933 --> 00:40:30,266
然后他的泪怎么写的

1158
00:40:30,400 --> 00:40:31,733
他的接口怎么写的

1159
00:40:31,966 --> 00:40:32,666
然后这里头

1160
00:40:32,666 --> 00:40:34,666
其实我们如果说有用到携程

1161
00:40:34,666 --> 00:40:36,199
用到那个通道的话

1162
00:40:36,500 --> 00:40:38,466
然后他的通道和携程是怎么写的

1163
00:40:39,666 --> 00:40:41,566
其实就是就是这这些东西

1164
00:40:41,566 --> 00:40:43,499
然后你再去看这在线这个弹板中间

1165
00:40:43,500 --> 00:40:44,300
它用到了什么

1166
00:40:44,500 --> 00:40:46,000
如果再看线的弹板中间

1167
00:40:46,000 --> 00:40:48,533
发现说有你不知道的点

1168
00:40:49,133 --> 00:40:50,733
再去看东西

1169
00:40:50,733 --> 00:40:51,533
再去细看

1170
00:40:51,700 --> 00:40:53,066
如果能知道的能够

1171
00:40:53,066 --> 00:40:54,333
如果能够看懂现代码

1172
00:40:54,333 --> 00:40:55,366
你慢慢的就会

1173
00:40:55,566 --> 00:40:57,899
对于说他那个基本的知识

1174
00:40:57,900 --> 00:40:59,200
就慢慢就掌握了

1175
00:40:59,933 --> 00:41:02,766
所以先花个其实你花个4天到5天

1176
00:41:02,766 --> 00:41:05,866
把购物员的语法和它的特性先不管

1177
00:41:05,866 --> 00:41:08,199
代码先全部看一遍

1178
00:41:08,300 --> 00:41:10,000
看一遍以后再直接来读代码

1179
00:41:10,166 --> 00:41:11,366
这样会比较快一些

1180
00:41:12,166 --> 00:41:14,166
然后这里头除了构员的基础的以外

1181
00:41:14,166 --> 00:41:15,199
他用到了一些框架

1182
00:41:15,200 --> 00:41:16,500
他有些东西我们很熟悉的

1183
00:41:16,500 --> 00:41:18,200
比如说像Radis啊

1184
00:41:18,200 --> 00:41:19,533
像这些东西都很熟悉

1185
00:41:20,066 --> 00:41:21,566
然后他的c口好像都还没有

1186
00:41:21,566 --> 00:41:22,766
用那个r m方架

1187
00:41:22,766 --> 00:41:24,599
我他妈直接在里面写个c口语句

1188
00:41:25,066 --> 00:41:25,933
有点土的

1189
00:41:26,800 --> 00:41:29,133
那个也不太也不太难

1190
00:41:29,400 --> 00:41:32,666
应该现在基本上都是直接写c口的

1191
00:41:32,700 --> 00:41:34,366
都直接写c口容易出错啊

1192
00:41:35,066 --> 00:41:36,366
因为c口

1193
00:41:37,766 --> 00:41:40,566
我去企业里面也都是全部都写CQ的

1194
00:41:40,566 --> 00:41:41,333
你用什么框架

1195
00:41:41,333 --> 00:41:42,266
直接去用用

1196
00:41:42,266 --> 00:41:43,466
用JDBC啊

1197
00:41:43,600 --> 00:41:44,466
用my betes啊

1198
00:41:44,533 --> 00:41:45,599
对一个

1199
00:41:45,600 --> 00:41:46,133
他如果用my

1200
00:41:46,133 --> 00:41:48,066
betes它就它就要去直接写c库

1201
00:41:48,666 --> 00:41:50,199
就它这里是直接写c库的

1202
00:41:51,100 --> 00:41:52,266
就是直接在里头

1203
00:41:52,300 --> 00:41:53,933
那什么Meta这种方向都没有

1204
00:41:53,933 --> 00:41:55,599
直接去组那个c口语句

1205
00:41:55,766 --> 00:41:57,999
这样其实我是担心说

1206
00:41:58,000 --> 00:41:59,466
是不是有c口注入的问题

1207
00:41:59,466 --> 00:42:00,666
因为这样不太安全

1208
00:42:01,466 --> 00:42:02,266
对吧

1209
00:42:03,000 --> 00:42:03,666
这个再说吧

1210
00:42:03,666 --> 00:42:05,166
反正我们的优第一目的就是

1211
00:42:05,166 --> 00:42:07,766
大家可能在现在是11月底了

1212
00:42:07,766 --> 00:42:09,133
在11月1号之前

1213
00:42:09,133 --> 00:42:10,766
至少把购物员全部能掌握住

1214
00:42:10,766 --> 00:42:12,099
把这个代码能够看懂

1215
00:42:13,066 --> 00:42:14,066
好吧然后这段时间呢

1216
00:42:14,066 --> 00:42:14,599
我们会见

1217
00:42:14,600 --> 00:42:17,866
或者去公司去了解下他们的需求

1218
00:42:17,866 --> 00:42:18,866
他们到底想要干嘛

1219
00:42:18,866 --> 00:42:21,533
他们新的设备的这个技术细节是什么

1220
00:42:21,933 --> 00:42:22,999
就顺带去做这个事情

1221
00:42:23,000 --> 00:42:25,066
这个不是不会太频繁

1222
00:42:25,866 --> 00:42:29,133
那周五上午9点半我会开车过来

1223
00:42:29,133 --> 00:42:31,133
然后接你们过去

1224
00:42:31,266 --> 00:42:33,666
那我们约到8点半

1225
00:42:34,166 --> 00:42:35,066
因为这里他在

1226
00:42:35,066 --> 00:42:35,799
他在岛内

1227
00:42:35,800 --> 00:42:37,933
在那个在那个

1228
00:42:38,333 --> 00:42:39,933
我不知道你们看过开端没有

1229
00:42:39,933 --> 00:42:41,799
在那个开端那个片子

1230
00:42:42,266 --> 00:42:44,533
就是那个蝴蝶那个那栋楼

1231
00:42:45,300 --> 00:42:46,333
看过那个电视剧没有

1232
00:42:47,100 --> 00:42:49,366
就厦门倒了一个很网红的地方

1233
00:42:52,700 --> 00:42:53,800
周五8点半

1234
00:42:54,000 --> 00:42:54,866
对周五8点半

1235
00:42:54,866 --> 00:42:58,466
然后在在你们离这个地方比较近吗

1236
00:42:58,466 --> 00:42:59,533
离这个项目比较近吗

1237
00:42:59,533 --> 00:43:01,066
还是离你那边比较近

1238
00:43:01,400 --> 00:43:02,333
我们约个地方

1239
00:43:02,566 --> 00:43:03,333
都不近

1240
00:43:03,333 --> 00:43:04,166
就差不多吧

1241
00:43:04,166 --> 00:43:05,533
我住到武器了

1242
00:43:06,466 --> 00:43:07,166
那你们说一个地方

1243
00:43:07,166 --> 00:43:08,799
你们住的地方比较近的地方

1244
00:43:10,700 --> 00:43:12,500
食堂离食堂比较近吗

1245
00:43:12,933 --> 00:43:14,466
就哪个食堂

1246
00:43:14,733 --> 00:43:15,566
就是这上面这个

1247
00:43:15,566 --> 00:43:16,533
食堂二期吗

1248
00:43:16,533 --> 00:43:17,099
对啊对啊

1249
00:43:17,100 --> 00:43:17,933
离二期对

1250
00:43:18,133 --> 00:43:19,799
那就食堂门口吧啊

1251
00:43:19,800 --> 00:43:20,966
把车开到食堂门口

1252
00:43:20,966 --> 00:43:21,766
好吧

1253
00:43:21,766 --> 00:43:22,699
然后我们开过去

1254
00:43:22,700 --> 00:43:24,866
大概快的话40分钟

1255
00:43:24,866 --> 00:43:25,666
应该能到

1256
00:43:27,566 --> 00:43:28,499
8点半好吧

1257
00:43:28,500 --> 00:43:29,300
好

1258
00:43:29,800 --> 00:43:31,466
然后我把资料发给你们

1259
00:43:31,700 --> 00:43:33,866
但购物员抓紧去看

1260
00:43:34,000 --> 00:43:36,166
然后争取一

1261
00:43:36,166 --> 00:43:37,666
个一个月能够上手

1262
00:43:38,933 --> 00:43:40,333
你们后面的还有安排吗

1263
00:43:40,333 --> 00:43:41,399
还会出去实习吗

1264
00:43:41,766 --> 00:43:43,899
嗯我现在准备国考

1265
00:43:45,166 --> 00:43:45,199
你

1266
00:43:45,200 --> 00:43:45,966
你补考干嘛

1267
00:43:45,966 --> 00:43:47,066
你不找工作找的挺好的

1268
00:43:47,066 --> 00:43:47,899
干嘛去补考

1269
00:43:49,800 --> 00:43:52,100
你实习现在有有有确定给你offer吗

1270
00:43:52,100 --> 00:43:52,733
还是没确定

1271
00:43:52,733 --> 00:43:53,899
什么都签完了

1272
00:43:53,900 --> 00:43:55,333
那你还国考个毛线啊

1273
00:43:56,266 --> 00:43:57,066
渣女

1274
00:43:57,200 --> 00:43:57,900
你想想看

1275
00:43:57,900 --> 00:43:58,966
你现在拿到的工资

1276
00:43:58,966 --> 00:44:00,499
和你去国卡拿到的工资

1277
00:44:00,700 --> 00:44:02,400
你直接砍掉2/3

1278
00:44:02,400 --> 00:44:03,333
你会接受吗

1279
00:44:04,266 --> 00:44:05,733
那个生活是一个什么生活

1280
00:44:06,133 --> 00:44:08,733
呵呵那拼多多1111就对

1281
00:44:08,733 --> 00:44:10,799
你的时间是很时间是很长

1282
00:44:10,800 --> 00:44:11,766
但是你想想看

1283
00:44:11,766 --> 00:44:12,899
你现在的这个收入

1284
00:44:12,900 --> 00:44:15,466
是你去滚卡的收入至少三倍以上吧

1285
00:44:16,066 --> 00:44:17,466
三倍都不止是吧

1286
00:44:17,866 --> 00:44:19,066
然后你想说

1287
00:44:19,066 --> 00:44:20,666
你如果说能在这个行业立足

1288
00:44:20,666 --> 00:44:21,799
其实你的工资很快

1289
00:44:21,800 --> 00:44:23,000
因为你现在是耽误吧

1290
00:44:23,600 --> 00:44:24,733
你到两三年之内

1291
00:44:24,733 --> 00:44:26,333
你的工资会翻一倍到两倍

1292
00:44:27,200 --> 00:44:29,066
如果你能做的站稳这个

1293
00:44:29,066 --> 00:44:31,533
比如说你做到一个mentor的这个地步

1294
00:44:31,666 --> 00:44:32,133
你知道

1295
00:44:32,133 --> 00:44:33,799
你的mentor的工资至少是你的两倍

1296
00:44:35,566 --> 00:44:36,166
去云南吧

1297
00:44:36,166 --> 00:44:36,966
也准备了

1298
00:44:36,966 --> 00:44:38,199
差不多准备了三个月

1299
00:44:38,600 --> 00:44:39,400
对啊

1300
00:44:39,800 --> 00:44:41,733
我下个月准备去实习

1301
00:44:41,966 --> 00:44:42,966
你准备去哪实习

1302
00:44:42,966 --> 00:44:44,466
去阿里工作

1303
00:44:44,600 --> 00:44:46,733
你等再再去阿里实习啊

1304
00:44:46,866 --> 00:44:47,666
再去美团

1305
00:44:47,666 --> 00:44:48,766
现在签三方

1306
00:44:49,066 --> 00:44:50,099
再签到阿里

1307
00:44:50,266 --> 00:44:51,499
你最后签的是阿里是吧

1308
00:44:51,500 --> 00:44:52,300
对

1309
00:44:53,000 --> 00:44:53,800
提前去

1310
00:44:54,333 --> 00:44:55,466
那你会实习多久啊

1311
00:44:55,733 --> 00:44:57,966
实习边先实习边做吧

1312
00:44:57,966 --> 00:44:59,066
这可以线上的

1313
00:44:59,366 --> 00:45:00,699
是可以是可以做

1314
00:45:00,733 --> 00:45:03,566
但是就是你会这个

1315
00:45:03,566 --> 00:45:04,999
你要让实习

1316
00:45:05,000 --> 00:45:07,300
你也知道那个不是一个很轻松的事情

1317
00:45:07,666 --> 00:45:08,899
你不是没实习过

1318
00:45:10,166 --> 00:45:11,266
你去阿里实习的话

1319
00:45:11,266 --> 00:45:12,333
你也被业绩的

1320
00:45:12,333 --> 00:45:13,866
你也希望是你能转正的

1321
00:45:15,066 --> 00:45:16,399
他是应该签完签完沙发

1322
00:45:16,400 --> 00:45:18,500
然后提前去而已

1323
00:45:18,500 --> 00:45:20,000
这已经签完沙发了是吧

1324
00:45:20,066 --> 00:45:21,066
那你准备是实习到什

1325
00:45:21,066 --> 00:45:22,133
么时候实习

1326
00:45:22,133 --> 00:45:22,666
3个月吧

1327
00:45:22,666 --> 00:45:24,933
实习到这个学期

1328
00:45:26,066 --> 00:45:27,566
学习到实习到年底吧

1329
00:45:28,466 --> 00:45:29,666
那行吧那就那就

1330
00:45:29,666 --> 00:45:31,399
那就等你明年回来再来做

1331
00:45:31,400 --> 00:45:33,266
但是你这个学期的主要任务

1332
00:45:33,266 --> 00:45:35,599
还是把高原给给给搞清楚

1333
00:45:36,100 --> 00:45:36,900
好吧

1334
00:45:38,100 --> 00:45:38,900
嗯

1335
00:45:40,133 --> 00:45:40,999
还有什么问题

1336
00:45:43,666 --> 00:45:44,933
这因为这是个实际的项目

1337
00:45:44,933 --> 00:45:47,066
所以说这个锻炼会稍微比较大一点

1338
00:45:47,066 --> 00:45:47,766
非常短时间

1339
00:45:47,766 --> 00:45:48,666
学会勾语言

1340
00:45:49,066 --> 00:45:50,766
就是在拿实际的东西去练手

1341
00:45:50,766 --> 00:45:51,899
因为你有一个目标

1342
00:45:52,700 --> 00:45:55,533
而且如果说目前来说

1343
00:45:55,533 --> 00:45:58,899
勾语言在这个基础架构部就是他作用

1344
00:45:58,900 --> 00:45:59,700
他就是

1345
00:45:59,933 --> 00:46:01,533
可能现在大家把他过来做业务

1346
00:46:01,533 --> 00:46:02,699
还不是那么放心

1347
00:46:02,800 --> 00:46:04,400
但是因为大家可以看到

1348
00:46:04,400 --> 00:46:05,300
现在上面这么多东西

1349
00:46:05,300 --> 00:46:06,333
都是用勾语言做的

1350
00:46:06,333 --> 00:46:07,599
基础的基础的部分

1351
00:46:07,600 --> 00:46:08,733
比如a 8 s啊

1352
00:46:08,866 --> 00:46:10,499
doc啊全是用勾语言做的

1353
00:46:11,100 --> 00:46:14,533
所以基本上大公司都会用它去做这个

1354
00:46:14,900 --> 00:46:16,466
至少会用它做它一些自己类

1355
00:46:16,466 --> 00:46:18,366
因为大部分都有自己的基础的

1356
00:46:18,366 --> 00:46:19,766
那些那些架构嘛

1357
00:46:20,000 --> 00:46:20,900
不去用购源

1358
00:46:20,900 --> 00:46:21,766
去做这个

1359
00:46:22,100 --> 00:46:24,400
当然现在国内应该用的最多的是自洁

1360
00:46:24,566 --> 00:46:26,133
自洁是全线都用购源

1361
00:46:26,733 --> 00:46:28,733
其他公司可能没有自洁那么激进

1362
00:46:30,300 --> 00:46:31,700
但自己工资也挺高的

1363
00:46:31,733 --> 00:46:33,199
自己工资应该是这几个公司中间

1364
00:46:33,200 --> 00:46:34,100
工资最高的

1365
00:46:34,533 --> 00:46:37,099
自己的简历直接挂了

1366
00:46:37,366 --> 00:46:38,366
这个工资最高的

1367
00:46:39,133 --> 00:46:39,299
拼多多

1368
00:46:39,300 --> 00:46:41,133
是拼多多是工作压力太大

1369
00:46:41,466 --> 00:46:41,866
对

1370
00:46:41,866 --> 00:46:42,733
拼多多的

1371
00:46:42,933 --> 00:46:45,566
拼多多的人哪里是19

1372
00:46:46,500 --> 00:46:49,600
不知道反正反正也没有六四五天

1373
00:46:49,600 --> 00:46:50,400
都是双休

1374
00:46:52,866 --> 00:46:54,299
好那大家回去看资料

1375
00:46:54,300 --> 00:46:55,466
然后你把那个给我

1376
00:46:55,466 --> 00:46:56,966
我再把代码都开放给你

1377
00:46:56,966 --> 00:46:57,899
我回去查一下

1378
00:47:35,200 --> 00:47:36,000
哈哈

1379
00:47:39,933 --> 00:47:42,299
啊对那个是

1380
00:47:42,600 --> 00:47:44,333
那个是

1381
00:47:57,066 --> 00:47:58,533
不用了你写在吗

1382
00:47:58,533 --> 00:47:59,299
在这写的话

1383
00:47:59,300 --> 00:48:01,100
但是你的福气要

1384
00:48:01,100 --> 00:48:01,900
装

1385
00:48:02,066 --> 00:48:02,733
这些服务器

1386
00:48:02,733 --> 00:48:05,099
要装你你像你现在目前来说

1387
00:48:05,533 --> 00:48:06,566
看你做哪个模块

1388
00:48:06,566 --> 00:48:08,133
如果说你做那个支付模板的话

1389
00:48:08,133 --> 00:48:09,466
只要装满4个就好

1390
00:48:09,900 --> 00:48:11,966
如果做到现在这个支付模的话

1391
00:48:11,966 --> 00:48:13,266
就是满4个加上

1392
00:48:15,933 --> 00:48:17,499
都要装这个Mac是Mac

1393
00:48:17,500 --> 00:48:20,133
都要装然后呃

1394
00:48:20,133 --> 00:48:22,799
支付模块是只需要Mac

1395
00:48:23,700 --> 00:48:27,500
然后这个商铺模块是Mac Mac

1396
00:48:30,333 --> 00:48:31,466
所以这些都会给他

1397
00:48:31,766 --> 00:48:33,666
你的本地专业这个

1398
00:48:35,200 --> 00:48:36,533
所以你得把这个

1399
00:48:36,533 --> 00:48:38,466
所以还是要装个服务器

1400
00:48:38,600 --> 00:48:39,400
对

1401
00:48:39,500 --> 00:48:40,966
然后我携带嘛

1402
00:48:40,966 --> 00:48:42,566
呃你这就正常来携带嘛

1403
00:48:42,566 --> 00:48:43,999
然后所有的数据库啊

1404
00:48:44,000 --> 00:48:45,100
什么东西后台

1405
00:48:46,666 --> 00:48:47,499
这样的这个

1406
00:48:49,133 --> 00:48:52,066
后台的颜色连服务器对

1407
00:48:52,066 --> 00:48:53,599
就连那个服务器嘛

1408
00:48:54,133 --> 00:48:55,899
然后然后写出来

1409
00:48:55,900 --> 00:48:57,100
然后进行测试

1410
00:48:57,600 --> 00:48:59,066
对你可以暂稳地测试

1411
00:48:59,066 --> 00:48:59,999
无线测试

1412
00:49:04,766 --> 00:49:05,966
我还有点

1413
00:49:10,000 --> 00:49:10,666
这个任何一个

1414
00:49:10,666 --> 00:49:11,066
比如这个

1415
00:49:11,066 --> 00:49:12,066
就是他本地车啊

1416
00:49:12,933 --> 00:49:13,733
这个就是

1417
00:49:15,166 --> 00:49:16,499
对吧你现在测试方式

1418
00:49:16,500 --> 00:49:17,666
我们不是用手动测试

1419
00:49:17,666 --> 00:49:18,366
是用硬币显示

1420
00:49:18,366 --> 00:49:20,499
是用e哦油称e

1421
00:49:20,733 --> 00:49:21,533
对啊

1422
00:49:22,300 --> 00:49:23,900
是用代码显示的这种破例

1423
00:49:27,866 --> 00:49:28,799
这是这是

1424
00:49:28,866 --> 00:49:30,333
比如说我刚才说的这个效果

1425
00:49:30,333 --> 00:49:32,299
这是我把它很多都删了

1426
00:49:32,300 --> 00:49:33,366
但是算法的

1427
00:49:41,700 --> 00:49:42,700
这个还没有刷

1428
00:49:51,900 --> 00:49:52,966
oh what get

1429
00:49:57,166 --> 00:49:57,966
开一下那个

1430
00:49:58,000 --> 00:50:00,200
我把那个c改了

1431
00:50:00,666 --> 00:50:01,666
你改不到什么

1432
00:50:01,700 --> 00:50:03,000
因因为他有的

1433
00:50:03,000 --> 00:50:05,366
给他就是给他不上东西他

1434
00:50:06,133 --> 00:50:08,533
经常你要弄弄一个内部的

1435
00:50:08,533 --> 00:50:09,299
但是是吧

1436
00:50:09,300 --> 00:50:10,100
嗯

1437
00:50:31,666 --> 00:50:32,799
组织不是一个类

1438
00:50:33,066 --> 00:50:35,399
每个类都是8级排行

1439
00:50:37,800 --> 00:50:39,733
所以最后输入这个代码来测

1440
00:50:39,733 --> 00:50:41,399
并不是说手工内部测试

1441
00:50:43,066 --> 00:50:46,533
我看好像最后讲的作业交点是自己

1442
00:50:46,766 --> 00:50:47,866
对自己这样写

1443
00:50:48,133 --> 00:50:49,866
自己要写自己要写的

1444
00:50:49,866 --> 00:50:51,599
对因为程序员都是写这种

1445
00:50:51,600 --> 00:50:53,133
不是说手工册

1446
00:50:53,133 --> 00:50:54,599
那手工册谁修复的

1447
00:51:03,666 --> 00:51:03,966
这个

1448
00:51:03,966 --> 00:51:05,766
知道这是写测试用力

1449
00:51:05,766 --> 00:51:08,333
然后用测试用力去测我们的这个代码

1450
00:51:08,333 --> 00:51:10,133
然后我们这就是你所有选择代码

1451
00:51:10,133 --> 00:51:12,099
分开率尽量不高

1452
00:51:12,100 --> 00:51:14,066
然后所有的输出结果

1453
00:51:14,066 --> 00:51:15,299
我们的影响力都是一致的

1454
00:51:16,500 --> 00:51:17,066
这你这个车

1455
00:51:17,066 --> 00:51:18,766
其实是在比亚人的输出结构

1456
00:51:19,533 --> 00:51:22,099
这是这是在比较他的输出结构

1457
00:51:22,900 --> 00:51:23,933
这是在调研

1458
00:51:24,766 --> 00:51:25,866
调研的方法

1459
00:51:27,466 --> 00:51:28,566
这只是第二点

1460
00:51:28,566 --> 00:51:30,966
这是因为这个算法可以当先用

1461
00:51:31,500 --> 00:51:34,133
先用这个简单的算法去做的一个结果

1462
00:51:34,466 --> 00:51:37,733
然后用他的这个算法做的一个结果

1463
00:51:38,600 --> 00:51:39,900
背包刷卡做的一个结果

1464
00:51:40,200 --> 00:51:42,766
然后去比较这两个结果到底是什么

1465
00:51:42,766 --> 00:51:43,366
就更好

1466
00:51:43,366 --> 00:51:45,399
那他的预期就是不管任何情况

1467
00:51:46,000 --> 00:51:48,900
他的背包刷卡的结果都要不差于这个

1468
00:51:49,566 --> 00:51:50,499
这是什么呢

1469
00:51:51,100 --> 00:51:52,366
哦就是那个

1470
00:51:52,800 --> 00:51:55,333
你在选那个对的

1471
00:52:04,133 --> 00:52:04,933
我

1472
00:52:05,000 --> 00:52:05,666
嗯

1473
00:52:05,666 --> 00:52:07,199
那我先注意一下这个

1474
00:52:07,200 --> 00:52:07,800
我要做这

1475
00:52:07,800 --> 00:52:13,200
估计我要先把那个Nike OS model scope

1476
00:52:13,366 --> 00:52:14,899
装到华为云服务器

1477
00:52:14,900 --> 00:52:16,966
装到华为云服务器

1478
00:52:17,000 --> 00:52:18,133
然后把这台机器

1479
00:52:18,133 --> 00:52:19,699
通过这台机器

1480
00:52:19,700 --> 00:52:21,600
其实我们的对比器的这些配置

1481
00:52:21,600 --> 00:52:22,733
都是不明智确的

1482
00:52:25,700 --> 00:52:27,800
是服务还是部署在笔记本上

1483
00:52:28,300 --> 00:52:30,900
服务部署的那个有什么好

1484
00:52:30,900 --> 00:52:33,066
服务就是这个意义嘛

1485
00:52:33,600 --> 00:52:34,333
这个应用

1486
00:52:34,333 --> 00:52:36,333
你现在是在这个测试

1487
00:52:36,400 --> 00:52:39,066
测试的时候是在这个计算机上面

1488
00:52:39,066 --> 00:52:41,899
你要直接方便看到这个测试结果

1489
00:52:42,533 --> 00:52:44,899
就是说那个怎么连连接

1490
00:52:46,100 --> 00:52:46,366
连接

1491
00:52:46,366 --> 00:52:47,899
你可以看到我们都写了这个文件

1492
00:52:48,100 --> 00:52:49,466
网页上都显示文字

1493
00:52:49,500 --> 00:52:51,966
比如说Mac主体显示这个文案

1494
00:52:52,666 --> 00:52:55,333
然后apple主体显示

1495
00:52:55,533 --> 00:52:57,099
这是Mac主体显示4个文字

1496
00:52:57,466 --> 00:53:00,299
你要改成MacBook主体显示

1497
00:53:00,666 --> 00:53:03,133
所以说你就把本期的那个house的话

1498
00:53:03,700 --> 00:53:04,966
这些名字全部写到你

1499
00:53:04,966 --> 00:53:08,399
华为复习那个地址大家不用弄

1500
00:53:08,733 --> 00:53:10,799
你就把把那个house改成那个

1501
00:53:10,800 --> 00:53:11,700
对就是house

1502
00:53:11,700 --> 00:53:12,800
把管理接的地址

1503
00:53:13,466 --> 00:53:15,299
不是关于华为与那个数万行业

1504
00:53:15,300 --> 00:53:16,866
任何一台都都可以

1505
00:53:17,100 --> 00:53:18,133
你只要在数万行业

1506
00:53:18,133 --> 00:53:19,599
把那个景点报

1507
00:53:19,600 --> 00:53:20,866
把那个标志报出来

1508
00:53:21,333 --> 00:53:23,399
那你的所有景点都是可以用的

1509
00:53:24,066 --> 00:53:25,299
然后你就是不要看

1510
00:53:25,300 --> 00:53:26,966
因为你每天有300G

1511
00:53:27,300 --> 00:53:27,800
嗯

1512
00:53:27,800 --> 00:53:28,866
你用那个数据库

1513
00:53:28,866 --> 00:53:29,499
芒果数据库

1514
00:53:29,500 --> 00:53:30,166
这测试的话

1515
00:53:30,166 --> 00:53:32,499
这可能是你手中抓到数量很大的

1516
00:53:32,933 --> 00:53:34,966
所以你看着哪台服务器的这个IP

1517
00:53:35,933 --> 00:53:39,333
呃那个流量网换一台IP嘛

1518
00:53:56,900 --> 00:53:58,300
要去关注一下到头

1519
00:53:58,300 --> 00:53:59,533
要不就换一款皮

1520
00:53:59,766 --> 00:54:02,599
然后我反正我测试买的就就在

1521
00:54:03,666 --> 00:54:05,466
就比如我要测试这个

1522
00:54:05,600 --> 00:54:07,900
第一年首先要要写测试问题

1523
00:54:07,900 --> 00:54:08,866
写完测试问题以后呢

1524
00:54:08,866 --> 00:54:10,966
然后按照原规定来说吧

1525
00:54:11,466 --> 00:54:13,499
就是二维定规则个测试规律

1526
00:54:13,500 --> 00:54:15,466
用处也就是大家做完了

1527
00:54:15,466 --> 00:54:17,699
说他的这个大脑的测试过程

1528
00:54:20,200 --> 00:54:20,700
那我

1529
00:54:20,700 --> 00:54:21,966
我其实我在测试的时候

1530
00:54:21,966 --> 00:54:23,366
我都是用这个自助力压测的

1531
00:54:23,366 --> 00:54:24,933
那我现在因为这个方法比较简单

1532
00:54:24,933 --> 00:54:25,799
我就直接从

1533
00:54:27,266 --> 00:54:28,566
所以所有的收费员都选择

1534
00:54:28,566 --> 00:54:30,299
然后他的这个法规值

1535
00:54:30,300 --> 00:54:32,466
和预想值的判断都选择

1536
00:54:32,600 --> 00:54:34,566
所以我跑的时候就直接跑发票

1537
00:54:34,733 --> 00:54:38,566
那这个是对你需要一定的帮助啊需

1538
00:54:40,500 --> 00:54:41,300
要

1539
00:54:43,100 --> 00:54:43,900
一

1540
00:54:46,000 --> 00:54:47,000
点吗

1541
00:55:03,200 --> 00:55:05,166
这几个是编译打包

1542
00:55:06,700 --> 00:55:10,000
就在这部分是编译测试

1543
00:55:10,000 --> 00:55:11,866
哪个出口是打包好

1544
00:55:11,866 --> 00:55:13,599
现在请问题目要大家做

1545
00:55:13,600 --> 00:55:15,300
这个数据的连接出错

1546
00:55:18,400 --> 00:55:19,800
本期视频跟你说说

1547
00:55:23,700 --> 00:55:25,600
这就是因为你后面那个

1548
00:55:25,600 --> 00:55:27,533
那个容器没有后面升的容器

1549
00:55:28,066 --> 00:55:31,499
有了升的容器以后或者㑚搿副机会

1550
00:55:31,566 --> 00:55:32,599
㑚搿副机会影响

1551
00:55:32,600 --> 00:55:34,700
所以㑚搿款机要多少啊这

1552
00:55:34,700 --> 00:55:36,733
㑚搿款机现在是需要多少个配置

1553
00:55:36,733 --> 00:55:39,099
因为有种配置个话就用本地个这个

1554
00:55:39,500 --> 00:55:40,500
本地个这个回购

1555
00:55:40,500 --> 00:55:41,266
一样个问题

1556
00:55:41,266 --> 00:55:42,066
因为这个

1557
00:55:48,266 --> 00:55:49,499
如果要做配置的话

1558
00:55:51,866 --> 00:55:54,666
然后第二个是这样输出是这个

1559
00:55:56,366 --> 00:55:57,466
my simple的

1560
00:55:57,666 --> 00:55:59,133
这个应该是奇葩

1561
00:55:59,700 --> 00:56:01,200
他应该是高档的一个

1562
00:56:02,266 --> 00:56:03,399
高档的一个中对象

1563
00:56:09,900 --> 00:56:10,700
额不要

1564
00:56:30,200 --> 00:56:31,133
拉克斯的文件

1565
00:56:31,133 --> 00:56:31,933
他自己写

1566
00:56:32,666 --> 00:56:33,566
拉克斯没有文件

1567
00:56:33,566 --> 00:56:34,599
拉克斯有个装甲

1568
00:56:34,600 --> 00:56:35,866
现在现在我们这里

1569
00:56:35,866 --> 00:56:37,666
拉克斯不需要你做任何配置

1570
00:56:38,166 --> 00:56:38,999
你要准备做配置

1571
00:56:39,000 --> 00:56:40,066
那就是有本地的

1572
00:56:40,100 --> 00:56:41,533
因为你现在是在考试嘛

1573
00:56:41,533 --> 00:56:43,799
没必要去做统一配置

1574
00:56:44,000 --> 00:56:46,866
哎那我们就是我们加班一一的这个

1575
00:56:47,466 --> 00:56:47,733
呃

1576
00:56:47,733 --> 00:56:51,666
那个是上上次实验是用了三台服务器

1577
00:56:52,700 --> 00:56:53,500
对

1578
00:56:53,766 --> 00:56:55,966
就是买系统的时候用三台服务器

1579
00:56:56,133 --> 00:56:59,966
嗯一个测试的对象就是专用

1580
00:56:59,966 --> 00:57:00,899
一个买系统

1581
00:57:01,100 --> 00:57:02,200
一个发测试

1582
00:57:03,100 --> 00:57:04,466
下一轮实验用他

1583
00:57:04,466 --> 00:57:05,266
服务器

1584
00:57:07,500 --> 00:57:09,000
就是三台装的芒果

1585
00:57:09,000 --> 00:57:10,000
一个正式对象

1586
00:57:10,000 --> 00:57:10,933
一个发正式

1587
00:57:15,900 --> 00:57:18,866
所以你把这个先把英文的实验做

1588
00:57:18,866 --> 00:57:19,799
到第二个的话

1589
00:57:19,800 --> 00:57:23,933
你把那个服务器的服务器都都装好

1590
00:57:23,933 --> 00:57:26,866
一个Mac三个Mac再组装一个Mac

1591
00:57:27,500 --> 00:57:28,100
就装好了

1592
00:57:28,100 --> 00:57:29,566
然后这个就对

1593
00:57:29,566 --> 00:57:30,899
然后把数据呢就可以

1594
00:57:31,500 --> 00:57:32,300
好

1595
00:57:39,866 --> 00:57:41,366
可能是那个叫马丽

1596
00:57:41,366 --> 00:57:42,366
第二次企业

1597
00:57:43,800 --> 00:57:45,733
我们的代码是应该也是用最好的代码

1598
00:57:45,733 --> 00:57:46,999
因为看视频

1599
00:57:47,000 --> 00:57:49,133
他那个装的好像是装在了那个

1600
00:57:50,500 --> 00:57:51,533
这个服务不行了

1601
00:57:52,000 --> 00:57:55,366
没有我从明天再讲这个实验讲

1602
00:57:55,400 --> 00:57:58,900
你是想这是在讲那个Mongo怎么装

1603
00:57:58,900 --> 00:57:59,566
怎么装

1604
00:57:59,566 --> 00:58:01,599
对啊

1605
00:58:03,866 --> 00:58:05,299
你像Mono装装起来

1606
00:58:05,333 --> 00:58:06,499
我不是装不起来

1607
00:58:07,700 --> 00:58:08,066
先问我

1608
00:58:08,066 --> 00:58:09,066
赢过钱是吧

1609
00:58:09,333 --> 00:58:10,099
哦那就是没有

1610
00:58:10,100 --> 00:58:12,300
那个包括设备是可以存那个

1611
00:58:12,300 --> 00:58:13,266
因为我看那个视频

1612
00:58:13,266 --> 00:58:14,399
你上次是后

1613
00:58:14,400 --> 00:58:16,066
面是在杠5路上

1614
00:58:16,066 --> 00:58:18,599
杠5路下面做那个创面的这个

1615
00:58:19,566 --> 00:58:19,766
啊对

1616
00:58:19,766 --> 00:58:21,599
那是因为在打那个OMO的

1617
00:58:22,466 --> 00:58:23,999
就是那个把他打的那个

1618
00:58:25,700 --> 00:58:26,866
OMO

1619
00:58:27,166 --> 00:58:29,299
那时候我们那得是我们叫阿姨

1620
00:58:29,300 --> 00:58:32,000
然后我们这个OMO不用

1621
00:58:32,000 --> 00:58:33,300
你就弄一套服务器嘛

1622
00:58:33,300 --> 00:58:34,566
然后它是建设是不同的

1623
00:58:34,566 --> 00:58:37,533
那个盘尺放到不同的机壳里头分开的

1624
00:58:37,900 --> 00:58:38,700
它不会打架

1625
00:58:38,933 --> 00:58:39,733
嗯

1626
00:58:40,200 --> 00:58:41,300
熟悉的这一块

1627
00:58:41,300 --> 00:58:42,900
就相当于这种数据表

1628
00:58:42,933 --> 00:58:43,299
主持人

1629
00:58:43,300 --> 00:58:45,933
用数据表和网络的数据表是不一样的

1630
00:58:45,933 --> 00:58:46,733
数据表

1631
00:58:46,766 --> 00:58:49,366
哦然后好像配这个

1632
00:58:49,366 --> 00:58:50,699
那你是抱抱出口

1633
00:58:50,700 --> 00:58:51,566
就是这个题

1634
00:58:51,866 --> 00:58:52,666
配色问题

1635
00:58:52,966 --> 00:58:54,133
大口是分地

1636
00:58:54,533 --> 00:58:55,399
不要给他数据表

1637
00:58:55,400 --> 00:58:56,966
数据表啊

1638
00:58:57,500 --> 00:58:58,666
这数据上不一样

1639
00:58:59,366 --> 00:59:01,266
那我本地自己

1640
00:59:01,266 --> 00:59:03,266
如果我要做地图任务的话

1641
00:59:03,366 --> 00:59:04,533
他只做服务器上

1642
00:59:05,000 --> 00:59:06,400
只要能够迅速通就可以

1643
00:59:07,533 --> 00:59:11,366
就整个组在服务器上去布一套拉克斯

1644
00:59:11,366 --> 00:59:12,699
包括和马斯克

1645
00:59:13,366 --> 00:59:14,899
大家都去用这一套

1646
00:59:15,800 --> 00:59:18,100
哦那就是你是把那POS改成乃个

1647
00:59:18,166 --> 00:59:19,399
对 1,000多亿就好

1648
00:59:19,400 --> 00:59:20,500
比较高

1649
00:59:20,500 --> 00:59:21,966
大多米就因为那

1650
00:59:21,966 --> 00:59:23,133
可是咱们都是差不多

1651
00:59:23,133 --> 00:59:26,199
不差啊传媒效果都都是在乃个扶贫

1652
00:59:26,766 --> 00:59:27,899
乃扶贫状态滴话

1653
00:59:28,000 --> 00:59:29,166
然后乃个b族任务

1654
00:59:29,166 --> 00:59:33,066
如果要乃个做那个模拟微信

1655
00:59:33,866 --> 00:59:34,666
支付宝的话

1656
00:59:34,700 --> 00:59:36,966
那那那个东西具体要怎么支付

1657
00:59:38,066 --> 00:59:39,466
我在支付宝管理过去

1658
00:59:39,466 --> 00:59:42,099
可以看到说他已经定义了

1659
00:59:42,533 --> 00:59:44,499
他该怎么调微信和支付宝

1660
00:59:44,566 --> 00:59:45,533
在这个mark里

1661
00:59:48,000 --> 00:59:49,166
比如说一直把他做完

1662
00:59:49,400 --> 00:59:51,700
这就是模拟支付宝要做的

1663
00:59:51,700 --> 00:59:52,533
所有的借口

1664
00:59:53,200 --> 00:59:53,800
嗯

1665
00:59:53,800 --> 00:59:54,500
其实也不多

1666
00:59:54,500 --> 00:59:55,766
就是这4

1667
00:59:55,866 --> 00:59:56,799
这4个借口

1668
00:59:57,766 --> 00:59:58,799
要做这几个接口

1669
00:59:58,800 --> 00:59:59,733
做这几个接口

1670
00:59:59,866 --> 01:00:02,299
那我们现在在这个

1671
01:00:02,500 --> 01:00:03,066
这个里头

1672
01:00:03,066 --> 01:00:04,366
他最后要去调的时候

1673
01:00:04,366 --> 01:00:06,333
他我们现在把这个

1674
01:00:06,966 --> 01:00:07,566
你的这个

1675
01:00:07,566 --> 01:00:08,599
若有形成的一个

1676
01:00:08,600 --> 01:00:10,166
这个辅助图片之前

1677
01:00:17,200 --> 01:00:18,566
但是去年接口的时候

1678
01:00:19,100 --> 01:00:21,166
就是这个阿里开始设为师

1679
01:00:22,266 --> 01:00:24,366
所以他发展的叫做阿里开始设备师

1680
01:00:24,366 --> 01:00:26,399
然后呢登记到lucky

1681
01:00:26,700 --> 01:00:29,700
那我们在这边来调查的时候

1682
01:00:30,533 --> 01:00:31,399
在这里来讲的时候

1683
01:00:31,400 --> 01:00:32,666
其实我们就会往这一块

1684
01:00:32,666 --> 01:00:34,166
这个阿里特搜索这个

1685
01:00:34,200 --> 01:00:37,366
去发这个internal丽莎

1686
01:00:37,366 --> 01:00:39,666
阿里推去order seven

1687
01:00:40,000 --> 01:00:41,700
然后这个是里头的话题呢

1688
01:00:41,700 --> 01:00:42,366
发一个请求

1689
01:00:42,366 --> 01:00:44,666
取消的话会直接会变成新的版本

1690
01:00:44,966 --> 01:00:47,799
所以你就是要做接收这个请求的

1691
01:00:48,400 --> 01:00:49,200
这个

1692
01:00:50,466 --> 01:00:53,366
就只要就你这样重新开始的项目一样

1693
01:00:53,466 --> 01:00:54,533
对就就跟他一样的

1694
01:00:54,533 --> 01:00:56,266
他从上面是那个重写的项目

1695
01:00:56,266 --> 01:00:57,499
是在接这个情况

1696
01:00:58,366 --> 01:00:58,533
哦

1697
01:00:58,533 --> 01:01:01,333
那其实就是这个跟去年旁边写的时间

1698
01:01:01,466 --> 01:01:01,766
对

1699
01:01:01,766 --> 01:01:02,933
但是因为现在的接口

1700
01:01:02,933 --> 01:01:05,499
我们把变化版本和第三版本

1701
01:01:05,600 --> 01:01:06,566
所有接口都不一样

1702
01:01:06,566 --> 01:01:08,099
那微信有什么变化呢

1703
01:01:08,533 --> 01:01:09,766
微信微信滴电话

1704
01:01:09,766 --> 01:01:10,966
额让额发在这个地方

1705
01:01:10,966 --> 01:01:13,899
但是微信去年他没发过哦这样对

1706
01:01:13,900 --> 01:01:15,566
最后给他发到底是对还是对

1707
01:01:15,566 --> 01:01:16,933
这个这个对

1708
01:01:17,000 --> 01:01:18,000
所以大码发发

1709
01:01:18,066 --> 01:01:19,499
他去年之前还没发

1710
01:01:19,500 --> 01:01:20,300
我没检查

1711
01:01:20,900 --> 01:01:21,766
哦这样

1712
01:01:22,533 --> 01:01:23,333
嗯

1713
01:01:27,933 --> 01:01:31,699
而且他这个逻辑是是是有一点差别

1714
01:01:31,700 --> 01:01:32,100
那么我们这里

1715
01:01:32,100 --> 01:01:35,166
会有一些这个细微的测试的需要

1716
01:01:35,166 --> 01:01:38,066
比如说我在这里说这个付款的时候

1717
01:01:38,733 --> 01:01:38,799
啊

1718
01:01:38,800 --> 01:01:41,466
正常的微信付款是有付出返回值的

1719
01:01:41,800 --> 01:01:43,466
那我这边会约定说没错

1720
01:01:43,466 --> 01:01:45,533
付款是我的金额是101块

1721
01:01:45,666 --> 01:01:49,166
101块付款之后不用说其他的都是错的

1722
01:01:49,333 --> 01:01:50,499
然后我在做测试那种

1723
01:01:50,500 --> 01:01:52,766
就弄个付个101块的过来

1724
01:01:56,000 --> 01:01:57,066
做一个这样的目的

1725
01:01:57,200 --> 01:01:59,466
我不显露出你哪些东西

1726
01:01:59,900 --> 01:02:02,366
是就是我跨出你的钱的金额

1727
01:02:02,600 --> 01:02:04,900
来决定出你做的是什么

1728
01:02:07,400 --> 01:02:08,533
然后也是就代码

1729
01:02:08,533 --> 01:02:09,166
就在本地

1730
01:02:09,166 --> 01:02:10,533
然后自己开一个分支器

1731
01:02:10,966 --> 01:02:12,599
对代码都是在本地开的

1732
01:02:12,600 --> 01:02:13,200
分支器

1733
01:02:13,200 --> 01:02:14,600
你所有的代码都是这样

1734
01:02:14,600 --> 01:02:15,400
你又没

1735
01:02:15,500 --> 01:02:17,866
因为你不能直接往那个moscule去

1736
01:02:18,266 --> 01:02:19,099
去push单

1737
01:02:19,366 --> 01:02:21,166
你只能push到1/5

1738
01:02:21,166 --> 01:02:22,766
然后再提那个a码

1739
01:02:23,133 --> 01:02:24,199
那就是fashion

1740
01:02:24,333 --> 01:02:25,266
然后把它合并

1741
01:03:01,366 --> 01:03:02,166
走

1742
01:03:10,166 --> 01:03:11,866
你拿的是对比的就

1743
01:03:13,600 --> 01:03:14,400
是

1744
01:03:23,333 --> 01:03:25,899
不是一般的那个

1745
01:03:25,900 --> 01:03:26,866
不是他自己

1746
01:03:26,866 --> 01:03:27,966
里面是有文件的

1747
01:03:29,266 --> 01:03:30,566
那个是作用

1748
01:03:30,566 --> 01:03:31,733
其实是两个作用

1749
01:03:31,733 --> 01:03:33,266
一个作用是用来做产品

1750
01:03:33,266 --> 01:03:36,166
一个作用是用来做集中配置对啊

1751
01:03:36,300 --> 01:03:37,966
那我们现在因为在调试阶段

1752
01:03:37,966 --> 01:03:39,599
我们是没必要去做集中配置的

1753
01:03:39,600 --> 01:03:40,900
因为做集中配置有个什么问题呢

1754
01:03:40,900 --> 01:03:42,666
就是里面你的条件呢

1755
01:03:42,666 --> 01:03:43,899
你要不停的改一个配置

1756
01:03:43,933 --> 01:03:45,666
然后你就必须到那个手服上去改

1757
01:03:46,100 --> 01:03:47,133
那我们现在的做法就是

1758
01:03:47,133 --> 01:03:49,866
我们没有把这个集中配置的那个内容

1759
01:03:50,333 --> 01:03:51,466
放到Max里头去

1760
01:03:51,466 --> 01:03:54,199
就在Max里可以把我们的一样放进去

1761
01:03:54,200 --> 01:03:55,100
但我们没有放

1762
01:03:55,466 --> 01:03:56,166
嗯

1763
01:03:56,166 --> 01:03:56,733
没有放的话

1764
01:03:56,733 --> 01:03:57,599
他其实机动配置的话

1765
01:03:57,600 --> 01:03:58,800
就在Luxury查不到配置

1766
01:03:58,800 --> 01:03:59,866
就会用本地配置

1767
01:04:00,100 --> 01:04:01,133
所以这样在调试呢

1768
01:04:01,133 --> 01:04:02,366
本地配置是起效果

1769
01:04:03,000 --> 01:04:04,533
那最后在生产的环境下

1770
01:04:04,533 --> 01:04:05,799
头他是需要启动配置的

1771
01:04:05,800 --> 01:04:06,700
因为生产的环境下

1772
01:04:06,700 --> 01:04:08,466
头也不会去改改动那个配置

1773
01:04:08,800 --> 01:04:10,600
所以就会用lucky去做启动配置

1774
01:04:11,800 --> 01:04:13,066
好知道

