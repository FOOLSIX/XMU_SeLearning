1
00:00:19,366 --> 00:00:21,299
我们看一下我们的reading这个目录啊

2
00:00:21,300 --> 00:00:23,766
先把这个删干净

3
00:00:24,866 --> 00:00:25,666
先把它

4
00:00:27,133 --> 00:00:29,333
我们用这个maven的cling

5
00:00:29,333 --> 00:00:30,499
其实就把它的底

6
00:00:30,500 --> 00:00:32,533
之前的编译的结果给它删了

7
00:00:32,533 --> 00:00:35,699
所以这个touch的目录就不见了啊

8
00:00:36,600 --> 00:00:37,766
删掉它以后

9
00:00:37,766 --> 00:00:39,499
这就是一个很干净的

10
00:00:39,766 --> 00:00:40,866
这个region

11
00:00:41,533 --> 00:00:42,699
region里头的

12
00:00:43,166 --> 00:00:45,699
关于服务器里头的配置在哪呢

13
00:00:45,900 --> 00:00:48,933
其实在于我们的

14
00:00:50,366 --> 00:00:51,399
resource底下

15
00:01:03,066 --> 00:01:03,866
在这里头

16
00:01:11,366 --> 00:01:13,399
大家那个直播应该能看得见

17
00:01:13,400 --> 00:01:15,533
这上头可能坐远也看不清楚啊

18
00:01:16,600 --> 00:01:20,666
这个里头我们写了一个bootstrat插秒

19
00:01:21,133 --> 00:01:23,133
这个里头记录了

20
00:01:23,133 --> 00:01:25,899
说它的locks服务器是哪一个

21
00:01:25,900 --> 00:01:26,266
locks

22
00:01:26,266 --> 00:01:28,766
其实是我们在最后倒数第二个视频中

23
00:01:28,766 --> 00:01:30,366
它讲的微服务体系结构

24
00:01:30,466 --> 00:01:31,566
我们用locks服务器

25
00:01:31,566 --> 00:01:31,966
去完成

26
00:01:31,966 --> 00:01:34,266
我们所有服务器之间的相互调用

27
00:01:34,733 --> 00:01:35,966
因为微景这个模块

28
00:01:35,966 --> 00:01:38,099
只是若干个模块中间的一个

29
00:01:38,300 --> 00:01:40,100
他会被其他的模块去调用的

30
00:01:40,100 --> 00:01:40,900
他那不会被

31
00:01:40,900 --> 00:01:42,300
不会去调其他的模块

32
00:01:42,566 --> 00:01:42,799
所以

33
00:01:42,800 --> 00:01:44,800
其他的模块为什么能调到这个微景

34
00:01:44,800 --> 00:01:47,666
靠的就是这个locks服务器的查明服务

35
00:01:47,900 --> 00:01:48,800
当然它还有另外一个作用

36
00:01:48,800 --> 00:01:49,966
就是配置服务

37
00:01:50,333 --> 00:01:51,766
在目前这个阶段呢

38
00:01:52,466 --> 00:01:53,799
因为没讲后面那个东西

39
00:01:53,800 --> 00:01:54,700
所以我们并不需要

40
00:01:54,700 --> 00:01:56,400
大家了解locks怎么去做

41
00:01:56,733 --> 00:01:57,799
主要做的事情就是第一

42
00:01:57,800 --> 00:01:59,300
要在服务器上抓个locks

43
00:01:59,300 --> 00:02:01,800
因为我们不想把它截掉

44
00:02:02,100 --> 00:02:04,000
就是你要有一个locks什么都不配

45
00:02:04,400 --> 00:02:07,333
它就会用你本地的这个配置

46
00:02:07,333 --> 00:02:08,166
本地配置在哪呢

47
00:02:08,166 --> 00:02:09,799
其实就是我们说的这个apictiam

48
00:02:09,800 --> 00:02:11,533
里头会用这里头的配置

49
00:02:11,533 --> 00:02:13,199
这里头同样也会用到locks

50
00:02:13,266 --> 00:02:15,199
可以看到它用locks去做了产

51
00:02:15,200 --> 00:02:18,266
品服务它要用到MYCO

52
00:02:19,366 --> 00:02:20,299
然后就没了

53
00:02:21,066 --> 00:02:22,366
所以在这个配置文件中间

54
00:02:22,366 --> 00:02:24,399
你知道如果要把reading刨起来

55
00:02:24,500 --> 00:02:26,700
需要在服务器上呢

56
00:02:26,700 --> 00:02:27,733
装两个东西

57
00:02:27,733 --> 00:02:29,533
一个是MYCO

58
00:02:29,900 --> 00:02:31,500
一个是locks

59
00:02:31,500 --> 00:02:32,533
把这两个装好

60
00:02:32,600 --> 00:02:35,300
然后让你的这个前端的这个代码

61
00:02:35,300 --> 00:02:36,666
就是我在这边的这个

62
00:02:36,666 --> 00:02:37,366
基本上这个代码

63
00:02:37,366 --> 00:02:39,733
能连到locks服务器和MYCO服务器

64
00:02:39,766 --> 00:02:43,066
我就能在我这里去调试和跑这个代码

65
00:02:43,300 --> 00:02:46,133
啊那怎么装服务器上的这个locks

66
00:02:48,733 --> 00:02:51,866
我们在这里头有一个Redmi文件

67
00:02:53,533 --> 00:02:56,533
wadem文件的这个后面的部分啊

68
00:02:56,533 --> 00:02:57,666
有专门有一个章节

69
00:02:57,666 --> 00:02:59,933
叫做如何去安装locks

70
00:02:59,966 --> 00:03:01,566
那这时我们在最后的情况下呢

71
00:03:01,566 --> 00:03:02,933
我们会把locks固定在

72
00:03:02,933 --> 00:03:04,533
某一个特定的节点上

73
00:03:04,900 --> 00:03:05,933
但是如果说

74
00:03:05,933 --> 00:03:07,899
我们只是为了自己调色代码的话

75
00:03:07,966 --> 00:03:09,666
这个locks其实是没有

76
00:03:10,200 --> 00:03:11,466
没有什么特别大的意义

77
00:03:11,466 --> 00:03:12,699
就是我们没有在用它

78
00:03:12,700 --> 00:03:14,366
只是需要有它

79
00:03:14,366 --> 00:03:16,666
没有它前端代码是跑不起来

80
00:03:16,666 --> 00:03:18,766
就是我们在这个这个调试机上

81
00:03:18,766 --> 00:03:19,699
代码是跑不起来的

82
00:03:19,700 --> 00:03:21,000
因为连那个时候连不到

83
00:03:21,533 --> 00:03:23,466
所以我们可以看一下

84
00:03:23,466 --> 00:03:25,899
目前我们在服务器上都是怎么配的

85
00:03:27,600 --> 00:03:28,466
华为云服务器

86
00:03:28,466 --> 00:03:29,933
我这边就直接连上去了啊

87
00:03:29,933 --> 00:03:32,099
所以IP啊

88
00:03:32,100 --> 00:03:33,600
大家就从你自己租的那个

89
00:03:33,600 --> 00:03:34,666
华为云服务器上

90
00:03:34,666 --> 00:03:36,366
去找啊

91
00:03:36,366 --> 00:03:37,666
我们还是把这一套东西

92
00:03:37,666 --> 00:03:41,866
安装在我们的这个swarm机群里头

93
00:03:42,000 --> 00:03:43,000
而不是

94
00:03:44,666 --> 00:03:45,933
那个华为服务器的

95
00:03:45,933 --> 00:03:47,199
优惠券应该有发现了吧

96
00:03:47,200 --> 00:03:48,533
没有还没有吗

97
00:03:48,600 --> 00:03:49,866
那同一班老师

98
00:03:49,866 --> 00:03:51,533
同学上课时候催一下王美峰老师

99
00:03:51,533 --> 00:03:52,533
是他发的

100
00:03:52,900 --> 00:03:54,600
应该是已经到他手上了

101
00:03:54,600 --> 00:03:56,100
但是他应该还没有

102
00:03:56,366 --> 00:03:57,566
最近可能比较忙吧

103
00:03:57,700 --> 00:03:59,100
所以你们上课时候催一下

104
00:03:59,100 --> 00:03:59,900
王美峰老师啊

105
00:03:59,900 --> 00:04:03,300
那尽快把券发到每个小组

106
00:04:03,933 --> 00:04:04,866
发下去以后啊

107
00:04:04,866 --> 00:04:07,533
你们就可以租这个服务器

108
00:04:07,533 --> 00:04:08,933
租到服务器以后

109
00:04:09,200 --> 00:04:11,133
然后我现在是直接用SSP

110
00:04:11,133 --> 00:04:12,699
连到了这些服务器上

111
00:04:13,100 --> 00:04:14,166
这个服务器上的呢

112
00:04:14,166 --> 00:04:16,699
我先把先把这个卸掉啊

113
00:04:17,966 --> 00:04:20,266
我可以看到我现在其实是已经有了

114
00:04:24,266 --> 00:04:25,466
好像还没连上去

115
00:04:43,400 --> 00:04:44,733
这是管理机

116
00:04:44,900 --> 00:04:46,766
因为只有在管理机上头才能看到

117
00:04:46,766 --> 00:04:47,566
这些东西

118
00:04:47,766 --> 00:04:50,066
在那个节点工作

119
00:04:50,066 --> 00:04:51,999
节点集上头其实是什么都不能做的

120
00:04:52,100 --> 00:04:53,566
那我们在管理上已经能看到

121
00:04:53,566 --> 00:04:55,466
说我这里已经装好了Masico

122
00:04:55,466 --> 00:04:56,999
和装好了拉库斯主体

123
00:04:57,400 --> 00:04:58,100
买c口的服务器的

124
00:04:58,100 --> 00:05:00,700
安装的话跟在集群中间去装

125
00:05:00,700 --> 00:05:02,600
买c口服务器的话跟之前是一样的

126
00:05:02,733 --> 00:05:05,166
但这个我发现我装好了有点小问题

127
00:05:05,166 --> 00:05:07,766
他老在在整个集群中间跑来跑去

128
00:05:07,966 --> 00:05:09,699
每跑一次就把我们的数据清掉

129
00:05:09,700 --> 00:05:11,366
所以这个我在之后再去想办法

130
00:05:11,600 --> 00:05:12,533
想办法把它的数据

131
00:05:12,533 --> 00:05:15,166
固定在外面的这个文件系统中间啊

132
00:05:15,166 --> 00:05:16,266
这样避免他们

133
00:05:17,066 --> 00:05:18,399
因为我们现在集群中间

134
00:05:18,400 --> 00:05:21,366
他经常会把那个服务开关开关开关的

135
00:05:21,366 --> 00:05:23,199
所以Mac口那个服务器

136
00:05:23,200 --> 00:05:24,566
需要固定在一台服务器上

137
00:05:24,566 --> 00:05:25,799
而且要把它的数据文件

138
00:05:25,800 --> 00:05:27,600
写出到我们的操作系统文件

139
00:05:27,866 --> 00:05:28,866
像头这样

140
00:05:28,866 --> 00:05:31,866
避免它的刀口被重启以后

141
00:05:32,300 --> 00:05:33,100
整个数据丢了

142
00:05:33,100 --> 00:05:34,300
现在我们还没有做这个

143
00:05:34,300 --> 00:05:35,766
但是做实验是够了啊

144
00:05:36,100 --> 00:05:38,466
那我先把这个服务给它卸掉

145
00:05:52,666 --> 00:05:54,333
啊我就把locks的服务卸掉了啊

146
00:05:54,333 --> 00:05:55,199
所以大家应该看到

147
00:05:55,200 --> 00:05:56,766
现在这个里头是没有locks的

148
00:05:57,733 --> 00:05:59,266
对吧MYCO我就不卸了啊

149
00:05:59,266 --> 00:06:01,199
MYCO的安装方式跟之前是一

150
00:06:01,200 --> 00:06:02,700
样的那我就不卸了

151
00:06:02,800 --> 00:06:04,600
没有locks的这个东西

152
00:06:04,600 --> 00:06:05,700
在前端跑代码时候

153
00:06:05,700 --> 00:06:06,733
它是会报错的

154
00:06:07,766 --> 00:06:08,399
我给你看下

155
00:06:08,400 --> 00:06:09,800
这是没有locks的情况

156
00:06:10,766 --> 00:06:11,899
所以你去做测试之后

157
00:06:11,900 --> 00:06:12,700
立马跑不起来

158
00:06:12,766 --> 00:06:15,166
他告诉你说没有locks服务器

159
00:06:23,200 --> 00:06:26,900
我们在这儿来装这个locks

160
00:06:27,366 --> 00:06:28,366
怎么装这个

161
00:06:31,333 --> 00:06:32,666
这个为什么跑到这边

162
00:06:38,400 --> 00:06:39,900
那起来之后可以看到不停的报

163
00:06:39,900 --> 00:06:42,166
这个locks服务器有错

164
00:06:42,600 --> 00:06:44,066
找不到locks

165
00:06:44,066 --> 00:06:46,666
我本地叫做LOCKS 8848这个端口啊

166
00:06:46,666 --> 00:06:47,766
他虽然是找不到

167
00:06:47,766 --> 00:06:48,699
所以他就跑不起来

168
00:06:48,700 --> 00:06:49,500
这个东西

169
00:06:50,933 --> 00:06:52,066
你不要再跑了

170
00:06:52,666 --> 00:06:55,366
停掉啊那我把服务器上的locks起来

171
00:06:55,366 --> 00:06:56,566
我现在在里头不配任何东西

172
00:06:56,566 --> 00:06:57,899
只是有一个locks服务器

173
00:06:57,900 --> 00:06:59,200
其实这个就能跑起来

174
00:06:59,200 --> 00:07:00,966
就里头没有配任何东西

175
00:07:01,000 --> 00:07:03,133
但我现在全部会用的本地的配置

176
00:07:03,366 --> 00:07:03,999
我们之后的话

177
00:07:04,000 --> 00:07:04,966
其实是为了Lox服务器上

178
00:07:04,966 --> 00:07:05,899
去配更多的东西

179
00:07:05,900 --> 00:07:08,400
因为它里头所有的配置

180
00:07:08,400 --> 00:07:09,366
就是我们的Uppercare

181
00:07:09,400 --> 00:07:11,733
全部会集中在这台Lox服务器上

182
00:07:12,133 --> 00:07:13,933
本地的配置是完全没有意义的

183
00:07:13,966 --> 00:07:15,166
这样服务器才好管理

184
00:07:15,166 --> 00:07:16,266
你想去改配置的话

185
00:07:16,266 --> 00:07:17,699
就不用去改本地那个文件

186
00:07:17,700 --> 00:07:19,300
重新部署工程

187
00:07:19,466 --> 00:07:20,899
直接到locks服务器去改

188
00:07:20,933 --> 00:07:23,466
所有服务器配置都会同步去刷新

189
00:07:23,466 --> 00:07:25,666
调啊那现在我们只是为了做调试

190
00:07:25,666 --> 00:07:27,466
其实没有必要做这个事情

191
00:07:27,733 --> 00:07:30,799
那怎么去把locks服务器建起来呢

192
00:07:31,933 --> 00:07:33,666
第一本地要有一个locks

193
00:07:33,666 --> 00:07:35,899
你当你这样我们可以不用破

194
00:07:35,900 --> 00:07:36,800
直接去create

195
00:07:36,800 --> 00:07:37,600
其实也行

196
00:07:37,666 --> 00:07:39,333
把这一行代码考过来啊

197
00:07:40,500 --> 00:07:41,800
这一行命令考过来

198
00:07:41,900 --> 00:07:43,200
就是如何建locks的

199
00:07:43,200 --> 00:07:44,300
这个命令考过来

200
00:07:44,400 --> 00:07:45,933
然后在管理机上头注意

201
00:07:45,933 --> 00:07:48,733
要在管理机上头把这个命令考过来

202
00:07:49,000 --> 00:07:50,466
考过来以后我们做一些修改

203
00:07:50,466 --> 00:07:51,266
哎

204
00:07:51,466 --> 00:07:52,266
没考

205
00:08:05,066 --> 00:08:05,999
很长是吧

206
00:08:06,300 --> 00:08:07,133
我们现在呢

207
00:08:07,133 --> 00:08:09,299
其实不需要像最后的那个环境里头

208
00:08:09,300 --> 00:08:10,766
做的那么的详细

209
00:08:10,866 --> 00:08:11,966
要改几个地方

210
00:08:12,766 --> 00:08:14,499
第一个我们不把这台服务器

211
00:08:14,500 --> 00:08:16,200
固定在某一个特定的位置

212
00:08:16,300 --> 00:08:18,200
让它随便在集体中间到处乱跑

213
00:08:18,466 --> 00:08:19,133
这些没关系

214
00:08:19,133 --> 00:08:19,966
反正我们不用它

215
00:08:19,966 --> 00:08:21,466
是吧让它随便乱跑就好了

216
00:08:21,600 --> 00:08:22,700
那怎么不固定呢

217
00:08:22,700 --> 00:08:24,166
就把它这个cos圈给它去掉

218
00:08:24,266 --> 00:08:25,899
随它到处乱跑去

219
00:08:29,200 --> 00:08:30,266
这是第一个啊

220
00:08:30,566 --> 00:08:31,366
第二个呢

221
00:08:31,500 --> 00:08:32,266
我们可以看到

222
00:08:32,266 --> 00:08:32,866
在这个命中间

223
00:08:32,866 --> 00:08:35,733
我们把8848这个端口给它Papi出来了

224
00:08:36,166 --> 00:08:37,166
这个要把它Poppy出来

225
00:08:37,166 --> 00:08:39,733
因为我们的这台写代码的机器

226
00:08:39,733 --> 00:08:41,499
是不在那个服务器机群里头的

227
00:08:41,566 --> 00:08:44,266
是在我们的手边的那服务器机群里头

228
00:08:44,266 --> 00:08:45,066
你装了一个locks

229
00:08:45,066 --> 00:08:47,466
不把它的端口8848端口popy出来

230
00:08:47,600 --> 00:08:48,966
外面是访问不了的

231
00:08:49,066 --> 00:08:50,666
所以我们需要把它8848的端口

232
00:08:50,666 --> 00:08:51,666
把它popy出来

233
00:08:51,766 --> 00:08:53,699
但是如果我们在最后的工程里头

234
00:08:53,700 --> 00:08:55,533
其实这个服都不poplic

235
00:08:56,066 --> 00:08:56,199
就是

236
00:08:56,200 --> 00:08:59,133
我们为了让整个的系统变得比较安全

237
00:08:59,466 --> 00:09:01,666
其实除了应用的那个8080端口

238
00:09:01,666 --> 00:09:02,866
会暴露出来以外

239
00:09:02,866 --> 00:09:06,133
所有的端口全部藏在索姆机群内部

240
00:09:06,133 --> 00:09:07,266
外面是没办法访问的

241
00:09:07,266 --> 00:09:08,599
但既然是为了调试

242
00:09:08,800 --> 00:09:11,000
所以我们把8848这个端口给它放出来

243
00:09:11,533 --> 00:09:12,533
然后模式上的

244
00:09:12,533 --> 00:09:13,766
我们做的比较简单

245
00:09:13,800 --> 00:09:15,366
是一个standard or low的模式

246
00:09:15,366 --> 00:09:17,966
其实它可以连Micro的数据库

247
00:09:17,966 --> 00:09:20,266
那就还需要装个Micro数据库的配置

248
00:09:20,300 --> 00:09:21,166
那比较麻烦啊

249
00:09:21,166 --> 00:09:22,333
但是我们为了开发

250
00:09:22,466 --> 00:09:23,933
不去搞那么复杂的事情

251
00:09:23,933 --> 00:09:25,699
所以我们就让它做内置的

252
00:09:25,800 --> 00:09:27,100
用standard low的方式

253
00:09:27,266 --> 00:09:29,333
然后它的一个环境参数

254
00:09:29,333 --> 00:09:32,566
它就performance的the name

255
00:09:32,566 --> 00:09:33,366
这个部分

256
00:09:33,533 --> 00:09:36,399
如果是在我们的开运行环境中间

257
00:09:36,400 --> 00:09:39,366
我们会让它用它的服务名来做

258
00:09:39,366 --> 00:09:42,133
所以我们这里头写的是house name

259
00:09:42,200 --> 00:09:44,100
但是我们现在是在开发的情况下头

260
00:09:44,200 --> 00:09:46,700
我们会倾向于用直接用IP

261
00:09:48,466 --> 00:09:49,966
所以把这个改成IP

262
00:09:50,800 --> 00:09:53,366
然后降低后台运行

263
00:09:53,366 --> 00:09:54,799
这个就是我们locks的镜像

264
00:09:54,800 --> 00:09:56,366
这个镜像在本地有没有都没关系

265
00:09:56,366 --> 00:10:00,199
他会直接从那个Dock的Hop上去

266
00:10:00,200 --> 00:10:01,000
把它破下来

267
00:10:01,000 --> 00:10:03,366
我们把locks版本的最新版本

268
00:10:03,366 --> 00:10:04,299
给它破下来

269
00:10:04,666 --> 00:10:05,899
然后刨起来

270
00:10:10,100 --> 00:10:10,900
好

271
00:10:11,366 --> 00:10:12,266
这样你可以看一下

272
00:10:12,266 --> 00:10:15,733
这个服务是不是好了

273
00:10:16,700 --> 00:10:16,966
可以看到

274
00:10:16,966 --> 00:10:19,166
我们现在Lox服务器跑起来了

275
00:10:19,166 --> 00:10:21,499
但我现在不知道他跑到什么位置啊

276
00:10:21,500 --> 00:10:22,500
其实他有可能两

277
00:10:22,500 --> 00:10:23,966
我们现在有两台服务器

278
00:10:24,000 --> 00:10:25,300
所以他有可能是两台服务器的

279
00:10:25,300 --> 00:10:26,100
任何一台

280
00:10:26,133 --> 00:10:27,866
都有可能把这个Lox服务器跑起来

281
00:10:27,866 --> 00:10:29,766
这是由swam机群自己去配的

282
00:10:29,966 --> 00:10:31,933
如果你想知道他在什么位置上的

283
00:10:31,933 --> 00:10:32,766
可以看一下

284
00:10:36,733 --> 00:10:37,799
想知道他在什么位置上的

285
00:10:37,800 --> 00:10:39,766
我们可以看到他跑到了F2 b

286
00:10:39,766 --> 00:10:40,766
c这个位置上的啊

287
00:10:40,766 --> 00:10:41,999
你就是当前这台机器

288
00:10:42,266 --> 00:10:45,266
就跑在了当前这台机器上啊

289
00:10:45,266 --> 00:10:46,333
这个locks就好了

290
00:10:46,966 --> 00:10:49,533
然后我们的测试就可以跑了

291
00:10:51,800 --> 00:10:53,333
其实就这么简单啊

292
00:10:55,966 --> 00:10:57,166
就可以看到locks服务器

293
00:10:57,166 --> 00:10:58,099
它就不会发错了

294
00:10:58,400 --> 00:10:59,366
所以只需要

295
00:10:59,766 --> 00:11:01,166
哦对这还有一个事情

296
00:11:01,300 --> 00:11:02,866
现在8848是放出来了

297
00:11:03,500 --> 00:11:04,700
在华为机上呢

298
00:11:04,700 --> 00:11:06,200
它是有安全策略的

299
00:11:06,466 --> 00:11:08,866
你在这里把8848的端口放出来

300
00:11:09,200 --> 00:11:09,766
安全策

301
00:11:09,766 --> 00:11:11,799
略里头你没有把8848端口放出来

302
00:11:12,000 --> 00:11:12,766
还是不行的

303
00:11:12,766 --> 00:11:14,699
这个大家应该都用过是吧

304
00:11:15,866 --> 00:11:16,766
没用过吗

305
00:11:17,000 --> 00:11:17,933
阿里云没用过吗

306
00:11:17,933 --> 00:11:19,533
就所有的云浮器从来没用过吗

307
00:11:20,466 --> 00:11:20,933
好吧

308
00:11:20,933 --> 00:11:22,566
那那我讲一下吧

309
00:11:23,866 --> 00:11:25,599
其实不止不止华为赢服务器

310
00:11:25,600 --> 00:11:28,366
但是只要用用赢服务器都这样的啊

311
00:11:28,366 --> 00:11:30,533
那我切过来来看一下

312
00:11:36,100 --> 00:11:38,966
啊我刚刚说那个c结尾的这台服务器

313
00:11:39,333 --> 00:11:40,166
这台服务器呢

314
00:11:40,166 --> 00:11:41,733
其实是有安全阻的

315
00:11:41,733 --> 00:11:42,533
看见没有

316
00:11:43,000 --> 00:11:44,800
就是你刚才把8848端口放出来

317
00:11:44,800 --> 00:11:46,266
其实外面的公网IP

318
00:11:46,266 --> 00:11:47,533
是蒙不了这个端口的

319
00:11:47,533 --> 00:11:49,166
你还需要在华为云服务器上

320
00:11:49,166 --> 00:11:50,566
去更改它的安全阻

321
00:11:51,133 --> 00:11:51,933
安全组呢

322
00:11:52,000 --> 00:11:55,733
这里头其实是有多少有多个的啊

323
00:11:56,300 --> 00:11:57,466
我们点进去吧

324
00:12:01,200 --> 00:12:03,666
我其实是有改了他的一个

325
00:12:09,800 --> 00:12:11,400
就目前用的是这个

326
00:12:11,800 --> 00:12:13,533
那这个的话是可以修改的

327
00:12:17,933 --> 00:12:19,366
我又喊了老哥了

328
00:12:24,933 --> 00:12:26,099
啊这个看见没有

329
00:12:26,700 --> 00:12:30,733
我现在是允许8848的端口给它放出来

330
00:12:31,800 --> 00:12:32,600
就是我现在这里

331
00:12:32,600 --> 00:12:33,933
其实我在整个10万米地图中间

332
00:12:33,933 --> 00:12:37,166
我允许3306和8848两个档口放出来

333
00:12:37,333 --> 00:12:39,066
这两个安全组不设的话

334
00:12:39,666 --> 00:12:42,666
他就不不能从IP访问到

335
00:12:42,666 --> 00:12:44,399
我们在SOM集群上头的东西

336
00:12:44,400 --> 00:12:45,866
当然我之后我会把它关掉啊

337
00:12:45,866 --> 00:12:47,199
因为我现在IP大家都知道

338
00:12:47,333 --> 00:12:48,799
其实你们也知道我的这些密码

339
00:12:48,800 --> 00:12:50,700
就能直接连到我这个IP上呢

340
00:12:50,700 --> 00:12:51,966
其实使用我的Max服务器

341
00:12:51,966 --> 00:12:53,666
然后就把我的流量给冲爆了

342
00:12:54,000 --> 00:12:55,700
所以我待会课后

343
00:12:55,700 --> 00:12:56,666
我会把这个

344
00:12:56,666 --> 00:12:58,099
今天今天上课给大家看一下啊

345
00:12:58,100 --> 00:12:58,800
我把它打开

346
00:12:58,800 --> 00:12:59,966
其实我自己看调试

347
00:12:59,966 --> 00:13:01,099
我不会直接去用它

348
00:13:01,533 --> 00:13:03,133
所以你们自己在自己的服务器上头啊

349
00:13:03,133 --> 00:13:05,566
去设你的8848和这个3306

350
00:13:05,566 --> 00:13:07,499
如果所有同学都用我的服务器的话

351
00:13:07,866 --> 00:13:10,266
那我的流量费400G是不够用的

352
00:13:10,266 --> 00:13:11,599
特别是这个数据库的流量费

353
00:13:11,600 --> 00:13:12,700
其实挺贵的啊

354
00:13:12,766 --> 00:13:15,666
因为这个要不停的往前头怼数据

355
00:13:15,733 --> 00:13:16,766
8848还好

356
00:13:17,466 --> 00:13:17,966
呃

357
00:13:17,966 --> 00:13:20,766
那我先把这两个安全端口都放出来

358
00:13:20,766 --> 00:13:21,999
我就一直讲完算了啊

359
00:13:22,000 --> 00:13:23,266
大家上厕所就去上厕所

360
00:13:23,266 --> 00:13:24,366
讲完我们就下课算了

361
00:13:25,933 --> 00:13:26,999
放出来以后啊

362
00:13:27,000 --> 00:13:28,766
这其实就是外面就可以访问了

363
00:13:28,766 --> 00:13:30,766
所以切回来大家可以看到

364
00:13:36,333 --> 00:13:37,666
我们在这个测试的时候

365
00:13:37,666 --> 00:13:39,933
其实就是可以测过去了

366
00:13:40,333 --> 00:13:43,199
然后他这里头就已经到测试的部分

367
00:13:43,200 --> 00:13:45,666
里头他会去报了一个错误

368
00:13:46,266 --> 00:13:47,299
说是什么样错误啊

369
00:13:47,300 --> 00:13:48,400
我们暂时不管他

370
00:13:48,466 --> 00:13:50,533
那这是Marks服务器的问题

371
00:13:50,666 --> 00:13:51,399
那第二个呢

372
00:13:51,400 --> 00:13:54,266
则是我们的买辛苦的服务器

373
00:13:54,500 --> 00:13:55,166
买辛苦的服务器

374
00:13:55,166 --> 00:13:57,133
他自然要把我们的所有的模块刨起来

375
00:13:57,133 --> 00:13:58,599
是需要有他的对应数据表的

376
00:13:58,700 --> 00:14:00,400
我们现在的数据表是这么来做的

377
00:14:00,400 --> 00:14:02,733
就是每一个模块是一个独立的数据库

378
00:14:03,266 --> 00:14:04,566
然后在这个独立数据库上

379
00:14:04,566 --> 00:14:06,599
去建这个模块的所有的表

380
00:14:06,966 --> 00:14:08,533
所以要让这个测试跑起来

381
00:14:08,533 --> 00:14:10,933
还需要把MYCO服务器的数据表

382
00:14:10,933 --> 00:14:11,899
全部建出来

383
00:14:12,200 --> 00:14:13,933
那MYCO的数据库服务器在哪呢

384
00:14:13,933 --> 00:14:16,866
我们之前在上周四的时候

385
00:14:16,866 --> 00:14:17,599
其实已经讲过

386
00:14:17,600 --> 00:14:20,400
MYCO的这个doc怎么搭啊

387
00:14:20,400 --> 00:14:21,566
这里我们可以看一下

388
00:14:21,566 --> 00:14:23,566
说他现在在哪台服务器上

389
00:14:31,600 --> 00:14:32,666
啊大家可以看到他

390
00:14:32,666 --> 00:14:33,866
其实我们现在这个状态

391
00:14:33,866 --> 00:14:35,299
我其实不想看到这个状态

392
00:14:35,400 --> 00:14:36,400
他就每隔6小时

393
00:14:36,400 --> 00:14:38,100
他就给我重新开关一次

394
00:14:38,733 --> 00:14:39,966
每个量子重新开关一次

395
00:14:39,966 --> 00:14:41,166
所以我们现在数据就每个

396
00:14:41,166 --> 00:14:42,333
6小时就被清掉一次

397
00:14:42,333 --> 00:14:45,133
我现在需要把它的这个稍微改一下

398
00:14:45,133 --> 00:14:45,933
配置稍微改一下

399
00:14:45,933 --> 00:14:46,533
把这个数据

400
00:14:46,533 --> 00:14:50,133
把它存到外面的操作系统的录屏上来

401
00:14:50,133 --> 00:14:51,399
啊不要在容器里头

402
00:14:51,400 --> 00:14:52,533
因为它每次开关一次

403
00:14:52,533 --> 00:14:53,799
它就它就完蛋了

404
00:14:53,866 --> 00:14:55,266
大家可以看到基本上是这个

405
00:14:55,400 --> 00:14:56,500
因为这是不是我控制的

406
00:14:56,500 --> 00:14:58,200
这是双母鸡群

407
00:14:58,200 --> 00:15:00,166
自己在不断的动这个服务器

408
00:15:00,933 --> 00:15:02,099
这个我之后再去改

409
00:15:02,166 --> 00:15:03,499
那现在我们先不管他

410
00:15:03,500 --> 00:15:04,100
我们现在可以看到

411
00:15:04,100 --> 00:15:04,900
这台服务器

412
00:15:04,900 --> 00:15:08,300
跑到了这个2D8A这个机器上

413
00:15:08,600 --> 00:15:11,100
那我就需要连到2D8A这台机器上来

414
00:15:12,200 --> 00:15:14,000
因为这个没办法在管理器上去操作

415
00:15:14,000 --> 00:15:15,400
我是往里头去灌数据

416
00:15:15,866 --> 00:15:16,999
这个就是后面这个

417
00:15:17,000 --> 00:15:18,933
就是我们28 D a这台机器啊

418
00:15:21,866 --> 00:15:22,666
扭一下

419
00:15:31,466 --> 00:15:33,099
28 D a啊这台机器

420
00:15:33,300 --> 00:15:34,600
那这个机器里头呢

421
00:15:34,600 --> 00:15:37,566
我们的数据在那个欧莫的工程底下

422
00:15:41,600 --> 00:15:43,766
在他的my c口的目录底下

423
00:15:45,066 --> 00:15:47,533
这个底下有他的配置文件

424
00:15:47,666 --> 00:15:49,166
然后他所有的数据

425
00:15:49,166 --> 00:15:50,733
都在那个c口目录底下

426
00:15:54,566 --> 00:15:55,366
在这个底下

427
00:15:55,733 --> 00:15:58,066
每个模块一个独立的c库语句

428
00:15:58,166 --> 00:15:59,733
然后需要用这些语句

429
00:15:59,733 --> 00:16:01,199
在服务器上把它建起来

430
00:16:01,400 --> 00:16:02,566
大家觉得挺麻烦的是吧

431
00:16:02,566 --> 00:16:04,866
所以我们在网联写了一个脚本

432
00:16:05,000 --> 00:16:06,200
去建立它啊

433
00:16:06,366 --> 00:16:08,066
那当然首先要建数据库

434
00:16:08,066 --> 00:16:10,066
大家知道这里头有一个c库文件

435
00:16:10,066 --> 00:16:11,799
叫做MYC口的

436
00:16:11,800 --> 00:16:13,333
叫做DATABASE的数据库

437
00:16:13,533 --> 00:16:13,766
所以

438
00:16:13,766 --> 00:16:15,699
我们第一要把这个DATABASE的数据库

439
00:16:15,700 --> 00:16:16,133
这个文件

440
00:16:16,133 --> 00:16:19,899
拷到我们的mycecl的doc里头去

441
00:16:20,100 --> 00:16:22,600
那我们看一下mycecle doc现在是什么

442
00:16:22,600 --> 00:16:25,766
在这个题上叫做这个ID啊

443
00:16:25,766 --> 00:16:27,466
这个名字没有什么意义了

444
00:16:27,800 --> 00:16:29,800
因为它是由swam自己来取的

445
00:16:30,000 --> 00:16:34,333
所以我们把它拷进去啊

446
00:16:34,333 --> 00:16:35,133
我们先上去看看

447
00:16:35,133 --> 00:16:37,499
它里头有没有西孔目录

448
00:16:37,533 --> 00:16:39,366
大家先给大家看一下啊

449
00:16:39,866 --> 00:16:41,533
MIX1杠IT

450
00:16:42,200 --> 00:16:45,733
然后连到这个服务器上去

451
00:16:48,966 --> 00:16:50,399
然后用touch

452
00:16:52,866 --> 00:16:54,333
我们应该建一个c口的目录啊

453
00:16:54,333 --> 00:16:55,566
现在是有这个c口的目录

454
00:16:55,766 --> 00:16:56,999
然后这个文件

455
00:16:57,000 --> 00:16:58,666
是我上节课把它考进来的

456
00:16:58,866 --> 00:16:59,099
所以

457
00:16:59,100 --> 00:17:01,333
大家可以在外头把这个文件再考一遍

458
00:17:01,333 --> 00:17:02,133
也可以

459
00:17:05,200 --> 00:17:06,600
用Dock CP啊

460
00:17:06,600 --> 00:17:09,400
把我们的circle目录底下的建库

461
00:17:09,400 --> 00:17:11,866
建detabase的那个文件

462
00:17:13,700 --> 00:17:15,900
建detabase和建用户的这个文件啊

463
00:17:15,900 --> 00:17:16,866
把它拷进来

464
00:17:17,300 --> 00:17:18,966
拷到我们刚才的这个

465
00:17:21,733 --> 00:17:22,366
这个实力

466
00:17:22,366 --> 00:17:26,299
这个容器的实力底下的c口目录底下

467
00:17:28,333 --> 00:17:29,399
好直接把它烤

468
00:17:29,500 --> 00:17:30,300
烤上去了

469
00:17:30,400 --> 00:17:31,166
烤上去以后呢

470
00:17:31,166 --> 00:17:32,999
我们就会在这里头去运行嘛

471
00:17:33,000 --> 00:17:34,600
c口先把用户和

472
00:17:36,700 --> 00:17:40,533
先把用户和表和数据库建起来啊

473
00:17:41,700 --> 00:17:42,933
这个要root用户

474
00:17:47,333 --> 00:17:48,466
然后直接运行

475
00:17:48,466 --> 00:17:51,299
我们卡到SEC底下的DATABASE

476
00:17:55,966 --> 00:17:58,199
看一下这特别是进去了没有

477
00:18:02,333 --> 00:18:05,733
啊我们每一个模块一个独立的top base

478
00:18:05,733 --> 00:18:06,799
现在里头都是空表

479
00:18:07,133 --> 00:18:08,266
然后呢剩下事情

480
00:18:08,266 --> 00:18:09,366
其实你也可以把那些文件

481
00:18:09,366 --> 00:18:10,133
都卡到secret笔上

482
00:18:10,133 --> 00:18:11,466
然后一个个的硕士去做

483
00:18:11,466 --> 00:18:12,466
但这个太麻烦

484
00:18:12,866 --> 00:18:14,333
所以我们在外头做了一个

485
00:18:15,666 --> 00:18:16,799
做了一个initial啊

486
00:18:17,200 --> 00:18:19,533
在这里做了一个initial的data

487
00:18:19,533 --> 00:18:21,399
大家可以看一下这个文件是干嘛的

488
00:18:23,600 --> 00:18:26,400
这个其实是一个在Unix上跑的脚本

489
00:18:26,500 --> 00:18:27,733
脚本的语句

490
00:18:27,900 --> 00:18:28,766
它其实就是

491
00:18:28,766 --> 00:18:31,099
把我现在指定的几个模块的脚本

492
00:18:31,266 --> 00:18:34,066
把它灌到我们那个容器里去

493
00:18:34,166 --> 00:18:35,333
这里有一个问题啊

494
00:18:35,333 --> 00:18:37,199
就是我们首先做之前要看一下

495
00:18:40,000 --> 00:18:41,266
里头有多少个Mac口

496
00:18:41,266 --> 00:18:42,099
因为这个Mac口

497
00:18:42,100 --> 00:18:43,466
现在目前的脑子被开关开关

498
00:18:43,466 --> 00:18:44,599
我们解决这个问题

499
00:18:44,733 --> 00:18:45,666
它每开关一次

500
00:18:45,666 --> 00:18:47,299
它死的都还呆在里头

501
00:18:47,600 --> 00:18:49,100
然后就会好多Mac口啊

502
00:18:49,100 --> 00:18:50,466
这就判断不出来

503
00:18:50,600 --> 00:18:51,400
现在只有一个

504
00:18:51,400 --> 00:18:52,566
一个就没有问题啊

505
00:18:52,566 --> 00:18:53,499
所以怎么跑呢

506
00:18:54,066 --> 00:18:55,333
进行这个脚本就可以了

507
00:18:58,266 --> 00:18:59,933
他就会把所有数据给灌进去

508
00:19:25,400 --> 00:19:26,900
然后把代码刷新一下

509
00:19:27,466 --> 00:19:29,299
为啥还会有个测试错

510
00:19:43,266 --> 00:19:44,399
如果你不放心的话啊

511
00:19:44,400 --> 00:19:45,400
再上去看一下

512
00:19:52,266 --> 00:19:54,733
这时候可以用新的用户去登录了

513
00:20:12,100 --> 00:20:14,333
然后比如说我们的这个region

514
00:20:17,766 --> 00:20:21,399
然后修tables

515
00:20:22,766 --> 00:20:23,933
这就看所有的表

516
00:20:23,933 --> 00:20:25,133
这表已经在了是吧

517
00:20:25,133 --> 00:20:26,799
如果想看里头有没有数据

518
00:20:35,600 --> 00:20:37,866
啊所有数据都在这里头是吧

519
00:20:37,866 --> 00:20:39,499
这里中文没办法正常显示啊

520
00:20:39,500 --> 00:20:40,266
这只是开黑

521
00:20:40,266 --> 00:20:41,066
没有数据

522
00:20:44,366 --> 00:20:48,166
这数据很多的哎掐掉

523
00:20:52,966 --> 00:20:54,966
好那我们前端

524
00:20:54,966 --> 00:20:57,599
就可以开始去跑这个测试了

525
00:20:57,666 --> 00:20:59,766
这个就是3306的端口

526
00:20:59,766 --> 00:21:01,866
同样要在安全座椅头给它放出来

527
00:21:02,366 --> 00:21:05,599
然后去跑这个测试

528
00:21:12,966 --> 00:21:14,933
这手机应该locks也能连得上

529
00:21:15,166 --> 00:21:17,366
3306的MYCO也可以连得上

530
00:21:45,266 --> 00:21:46,599
这个顺便跟大家说一下

531
00:21:46,600 --> 00:21:47,933
怎么调试这个东西啊

532
00:21:47,933 --> 00:21:48,466
大家可以看到

533
00:21:48,466 --> 00:21:50,866
我们这里会输出很多的这些东西

534
00:21:51,000 --> 00:21:51,766
这东西是用什么

535
00:21:51,766 --> 00:21:54,499
就是用Lockback去控制

536
00:21:55,000 --> 00:21:57,666
就是我们其实在做服务器测试的时候

537
00:21:57,700 --> 00:22:00,133
调试的时候很少去单独跟踪

538
00:22:00,666 --> 00:22:02,266
因为单独跟踪的这个环境

539
00:22:02,266 --> 00:22:04,099
和我们在服务器上的运行的环境

540
00:22:04,100 --> 00:22:04,900
是不一样的

541
00:22:05,133 --> 00:22:05,933
我们希望说

542
00:22:05,933 --> 00:22:06,999
我们的调试环境

543
00:22:07,000 --> 00:22:08,400
跟我们的运行环境是一致的

544
00:22:08,400 --> 00:22:11,133
这样避免说你单不跟踪的时候没问题

545
00:22:11,133 --> 00:22:12,666
放到服务器上就有问题

546
00:22:12,800 --> 00:22:14,200
那更难找啊

547
00:22:14,200 --> 00:22:15,400
所以我们实际上在代码中间

548
00:22:15,400 --> 00:22:17,366
写了很多的logo的

549
00:22:17,466 --> 00:22:20,333
debug的那个东西是藏在代码中间的

550
00:22:20,900 --> 00:22:22,000
这些东西的主要目的呢

551
00:22:22,000 --> 00:22:24,166
就是在我们这里看到所有的这些输出

552
00:22:24,466 --> 00:22:25,066
然后这些东西

553
00:22:25,066 --> 00:22:27,866
你可能控制它显示还是不显示

554
00:22:27,866 --> 00:22:28,666
因为你大家可以看到

555
00:22:28,666 --> 00:22:30,299
现在这个不是一大堆

556
00:22:30,300 --> 00:22:31,200
很麻烦吗

557
00:22:31,800 --> 00:22:33,366
那我们可以控制住

558
00:22:33,366 --> 00:22:33,599
说

559
00:22:33,600 --> 00:22:36,866
它的哪些东西是可以显示还是不显示

560
00:22:36,933 --> 00:22:37,999
就是在这来控制

561
00:22:38,766 --> 00:22:40,066
我们现在是全部都写了

562
00:22:40,066 --> 00:22:42,566
比如说我把它改成音符

563
00:22:43,133 --> 00:22:44,133
都把它改成音符

564
00:23:07,000 --> 00:23:08,066
这时候就干净了

565
00:23:08,733 --> 00:23:09,733
就是因为我们的代码这边

566
00:23:09,733 --> 00:23:10,666
全大部分的

567
00:23:10,666 --> 00:23:12,899
都是在debug级别做出来的输出

568
00:23:13,100 --> 00:23:14,400
而现在全部改成info以后

569
00:23:14,400 --> 00:23:17,733
大家可以看到他的输出就少了非常多

570
00:23:27,333 --> 00:23:28,966
然后另外一个就是

571
00:23:28,966 --> 00:23:31,166
刚才看到那些c语句的输出

572
00:23:31,166 --> 00:23:34,499
其实在这就是这个JPI

573
00:23:34,500 --> 00:23:35,600
我们用的是JPI嘛

574
00:23:35,600 --> 00:23:38,466
修c口它那个不是用日字来控制的

575
00:23:38,566 --> 00:23:39,933
把这个改成false

576
00:23:39,966 --> 00:23:41,666
那就连c语句也没有了

577
00:23:44,766 --> 00:23:46,733
但是这个其实你在调试过程中

578
00:23:46,733 --> 00:23:47,599
你经常需要看到

579
00:23:47,600 --> 00:23:49,133
最后产生的系统是什么

580
00:23:49,366 --> 00:23:50,699
那就需要把它打开

581
00:23:51,000 --> 00:23:52,000
这时候还有些规矩

582
00:23:52,000 --> 00:23:53,066
但是其他的都没

583
00:23:58,333 --> 00:23:59,266
我们把它停一下吧

584
00:23:59,266 --> 00:24:00,599
把CKG也清一下吧

585
00:24:00,600 --> 00:24:01,400
我再看看

586
00:24:02,066 --> 00:24:03,066
再来跑一个测试

587
00:24:03,166 --> 00:24:04,499
测试的作用大家可以看到

588
00:24:04,500 --> 00:24:05,400
它其实可以重复跑

589
00:24:05,400 --> 00:24:06,366
重复跑重复跑

590
00:24:06,400 --> 00:24:09,100
因为我们测试里头是做了一个日志的

591
00:24:09,466 --> 00:24:10,799
啊做了一个事务的

592
00:24:10,933 --> 00:24:12,266
所以每一次测试完了以后

593
00:24:12,266 --> 00:24:15,066
他又把数据回滚到测试之前的样子

594
00:24:15,133 --> 00:24:16,266
所以这个测试就可以重复

595
00:24:16,266 --> 00:24:18,766
跑这样其实当我们在里头去改bug

596
00:24:18,766 --> 00:24:20,499
或者去增加新的东西的时候

597
00:24:20,666 --> 00:24:22,099
有这么多的数字代码在里头

598
00:24:22,100 --> 00:24:24,766
就能保证我们原来所预想的那些功能

599
00:24:25,066 --> 00:24:25,999
都是正确的

600
00:24:26,500 --> 00:24:28,666
你才能把保证你新做出去的东西

601
00:24:28,733 --> 00:24:30,499
不会影响原来的东西

602
00:24:30,766 --> 00:24:32,333
选代码一个最基本的原则

603
00:24:32,333 --> 00:24:33,666
不能你越改越错

604
00:24:33,666 --> 00:24:34,766
越改问题越多

605
00:24:35,000 --> 00:24:36,333
而且你自己还不知道

606
00:24:36,800 --> 00:24:39,133
那你是根本没办法写出来人用的代码

607
00:24:39,366 --> 00:24:40,766
所以用这种方式

608
00:24:40,766 --> 00:24:43,666
你才能够保证说我没改的东西

609
00:24:43,666 --> 00:24:45,133
或者我新家军的东西

610
00:24:45,133 --> 00:24:47,399
不会影响我原来所有写的东西

611
00:24:47,766 --> 00:24:49,066
然后你才可能一步一步的

612
00:24:49,066 --> 00:24:52,166
把代码变成成为一个人用的代码啊

613
00:24:55,766 --> 00:24:55,933
所以

614
00:24:55,933 --> 00:24:58,166
现在已经把所有的提示全部改完了

615
00:24:59,300 --> 00:25:00,533
全部弄完了以后呢

616
00:25:00,533 --> 00:25:04,066
这个就只剩下最基本的transaction的

617
00:25:04,066 --> 00:25:05,999
in four in four级别的看见没有

618
00:25:06,000 --> 00:25:06,933
其他的都没有

619
00:25:09,300 --> 00:25:10,333
这个里头怎么找啊

620
00:25:10,333 --> 00:25:12,133
当然里头有很多小的细节

621
00:25:12,133 --> 00:25:15,166
比如说我这里头提出了这么多

622
00:25:15,166 --> 00:25:16,166
那这个东西怎么看呢

623
00:25:16,166 --> 00:25:17,399
其实没有人去看

624
00:25:17,666 --> 00:25:19,699
如果说我哪个错误有出错了

625
00:25:19,800 --> 00:25:22,200
我们的一个简单粗暴的方式啊

626
00:25:22,333 --> 00:25:24,666
比如说我想找到他的某一个东西

627
00:25:24,666 --> 00:25:26,066
比如说我想找到这个测试

628
00:25:26,400 --> 00:25:30,300
他的某一个方法到底是

629
00:25:33,166 --> 00:25:35,499
在吗这个方法叫做

630
00:25:37,700 --> 00:25:40,266
呃这个gate parent reading

631
00:25:41,200 --> 00:25:43,366
我们知道它的方法名在里头

632
00:25:43,366 --> 00:25:44,866
去这么找

633
00:25:45,866 --> 00:25:47,133
这么一点点去去找

634
00:25:47,133 --> 00:25:49,666
去看他输出的那个第八个的日志

635
00:25:49,766 --> 00:25:50,699
然后知道说

636
00:25:50,700 --> 00:25:52,800
他的第八个日志输出来以后是什么

637
00:25:52,966 --> 00:25:53,899
然后去做判断

638
00:25:53,900 --> 00:25:54,400
不够的话

639
00:25:54,400 --> 00:25:55,466
那你再加所有的

640
00:25:55,466 --> 00:25:56,566
再加第八个日志

641
00:25:56,800 --> 00:25:58,100
第八个日志写在代码中间

642
00:25:58,100 --> 00:25:59,200
是不会去删除掉

643
00:25:59,300 --> 00:26:00,100
因为你不

644
00:26:00,100 --> 00:26:01,733
能保证你的代码以后不出错

645
00:26:01,933 --> 00:26:03,366
所以所有放进去的第八个日志

646
00:26:03,366 --> 00:26:04,399
都一直留在里头

647
00:26:04,700 --> 00:26:06,733
它也不会影响我们程序引起的

648
00:26:06,733 --> 00:26:08,299
运行的这个性能

649
00:26:08,600 --> 00:26:09,966
也不像那个c star out

650
00:26:10,133 --> 00:26:11,566
你放进去还去不掉

651
00:26:11,566 --> 00:26:13,366
而且会影响这个系统的性能

652
00:26:13,566 --> 00:26:16,133
这样测试完成了以后啊

653
00:26:16,300 --> 00:26:17,966
测试完成了以后

654
00:26:17,966 --> 00:26:19,566
其实他已经把所有的测试结果

655
00:26:19,566 --> 00:26:21,266
放到了这个touch的目的下

656
00:26:21,266 --> 00:26:22,899
但这个其实是不好看的

657
00:26:22,966 --> 00:26:24,199
就现在是在这个里头

658
00:26:24,900 --> 00:26:25,700
假Coco的

659
00:26:27,166 --> 00:26:28,566
假coco假coco的里头

660
00:26:28,566 --> 00:26:30,099
当然这里还有一个测试报告啊

661
00:26:30,100 --> 00:26:31,533
是一个shift的测试报告

662
00:26:31,566 --> 00:26:32,933
然后它现在在这个文件里头

663
00:26:32,933 --> 00:26:33,799
这个不好看

664
00:26:34,000 --> 00:26:34,900
那怎么办呢

665
00:26:34,933 --> 00:26:36,566
我们其实在POME文件中间

666
00:26:36,566 --> 00:26:38,799
有配置的一个假Coco的插件

667
00:26:41,166 --> 00:26:44,299
就是在最基础的这个POME键中间

668
00:26:45,066 --> 00:26:45,866
其实有

669
00:26:52,100 --> 00:26:54,266
啊这个要要要说一下

670
00:26:54,500 --> 00:26:56,500
我刚才做编译的时候

671
00:26:56,500 --> 00:26:58,400
是直接来做编译的

672
00:26:58,400 --> 00:27:00,866
就是如果大家第一次来编这个东西

673
00:27:01,266 --> 00:27:03,766
就是从来没有在这个本机上编译过

674
00:27:04,533 --> 00:27:05,766
那你是编不过去的

675
00:27:05,766 --> 00:27:06,966
你是编不过去的

676
00:27:07,133 --> 00:27:09,399
为啥呢因为我们这里头有一个模块

677
00:27:09,400 --> 00:27:10,466
是核心模块

678
00:27:10,466 --> 00:27:11,266
就是这个扩

679
00:27:11,266 --> 00:27:12,066
这个模块

680
00:27:12,866 --> 00:27:13,666
reading

681
00:27:15,666 --> 00:27:16,499
是依赖于它的

682
00:27:16,500 --> 00:27:18,066
因为有很多东西在它里头

683
00:27:18,066 --> 00:27:19,099
它是怎么依赖的呢

684
00:27:19,100 --> 00:27:23,333
它是通过Maven的包来依赖的

685
00:27:23,366 --> 00:27:24,566
所以括这个东西

686
00:27:24,566 --> 00:27:26,566
也是我们在Maven这边的一个包

687
00:27:26,800 --> 00:27:28,100
它是怎么出来的啊

688
00:27:28,266 --> 00:27:30,699
就是你首先要把这里头所有的mode

689
00:27:30,700 --> 00:27:31,600
全部注释掉

690
00:27:32,300 --> 00:27:32,666
看到没有

691
00:27:32,666 --> 00:27:33,533
全部注射掉

692
00:27:33,933 --> 00:27:35,099
全部注射掉以后

693
00:27:35,100 --> 00:27:36,066
然后你再

694
00:27:38,900 --> 00:27:42,000
这个omode体的lifecycle到他的Instore

695
00:27:42,000 --> 00:27:42,800
这个face

696
00:27:43,200 --> 00:27:45,066
这个每一个face是什么

697
00:27:45,066 --> 00:27:47,066
含义我们在Mala之前已经有讲过了

698
00:27:47,066 --> 00:27:48,133
是吧clean是吧

699
00:27:48,266 --> 00:27:48,866
party的目的

700
00:27:48,866 --> 00:27:50,799
删掉white是做验证

701
00:27:50,800 --> 00:27:52,533
compare是编译pay的速度测试

702
00:27:52,533 --> 00:27:53,566
party是打包

703
00:27:53,966 --> 00:27:54,666
然后word的

704
00:27:54,666 --> 00:27:56,099
这个清华方向没有说是在做

705
00:27:56,100 --> 00:27:58,300
在确认我们现在的install是干嘛呢

706
00:27:58,366 --> 00:28:00,466
install是把打包好的东西

707
00:28:00,566 --> 00:28:03,999
把它上传到本地的Mr的妈本仓库里

708
00:28:04,000 --> 00:28:05,566
去干这件事情

709
00:28:05,600 --> 00:28:07,600
所以先要把整个工程

710
00:28:07,600 --> 00:28:11,466
就是把除了货以外的其他的部分

711
00:28:12,133 --> 00:28:13,466
就除了Coin以外的其他部分

712
00:28:13,466 --> 00:28:14,199
全部注视掉

713
00:28:14,200 --> 00:28:15,500
然后把整个工程

714
00:28:15,500 --> 00:28:18,866
把它安装到本地的Maven的仓库里

715
00:28:19,133 --> 00:28:21,699
这样你才能去动底下的每一个模块

716
00:28:23,333 --> 00:28:24,533
好现在就装好了

717
00:28:24,566 --> 00:28:26,099
其实在本地的M2的目里头

718
00:28:26,100 --> 00:28:27,933
就已经考进去了两个加文件

719
00:28:28,066 --> 00:28:29,299
一个是我们的OMO

720
00:28:29,466 --> 00:28:31,333
一个是OMO的扩

721
00:28:31,500 --> 00:28:32,766
考了两个东西进去

722
00:28:33,000 --> 00:28:34,300
考进去这两个东西以后

723
00:28:34,300 --> 00:28:36,300
我们的reading其实是有用到扩的

724
00:28:36,466 --> 00:28:37,599
所以reading才能用

725
00:28:37,600 --> 00:28:39,866
那这时候要把这个复式给它放开

726
00:28:42,800 --> 00:28:44,866
region还是我们的一个模块

727
00:28:49,933 --> 00:28:52,333
然后这时候你把微景把它清掉

728
00:28:52,366 --> 00:28:53,199
重新编译

729
00:28:53,400 --> 00:28:54,566
他才能编的过去

730
00:28:57,566 --> 00:28:58,999
clean就把Toty的目录删掉了

731
00:28:59,000 --> 00:29:00,266
大家可以看到Toty目录

732
00:29:08,266 --> 00:29:09,333
啊也报错

733
00:29:09,333 --> 00:29:10,133
他删不掉

734
00:29:17,466 --> 00:29:18,566
啊这里错

735
00:29:18,766 --> 00:29:19,666
多学一个字

736
00:29:27,100 --> 00:29:28,533
啊touch目录就不见了

737
00:29:28,533 --> 00:29:31,399
所以clean那个就是就是在3 touch的目录

738
00:29:31,566 --> 00:29:33,966
然后我们再重新做一次测试

739
00:29:40,466 --> 00:29:42,066
形成新的这个测试报告

740
00:30:42,166 --> 00:30:43,133
车子没跑吧

741
00:31:01,766 --> 00:31:02,799
跑完了以后啊

742
00:31:02,900 --> 00:31:04,300
他这个目录又出来了

743
00:31:04,366 --> 00:31:06,266
然后他的文件内容其实在这

744
00:31:06,266 --> 00:31:07,599
这个不可以看的

745
00:31:07,900 --> 00:31:09,300
我们要看他的结果

746
00:31:09,300 --> 00:31:11,533
其实会要使用我

747
00:31:11,533 --> 00:31:13,466
们在这个泡沫镜中间

748
00:31:13,466 --> 00:31:15,866
所定义的一个加扣的blog e

749
00:31:15,866 --> 00:31:16,966
这个我们定义在跟

750
00:31:18,533 --> 00:31:19,466
根的里头了

751
00:31:20,100 --> 00:31:20,900
就是这个

752
00:31:21,766 --> 00:31:22,399
大家可以看到

753
00:31:22,400 --> 00:31:24,900
我们刚才是把所有的结果放到了Jack

754
00:31:24,900 --> 00:31:26,000
Coco点c文件里头

755
00:31:26,000 --> 00:31:26,866
就在这个里头

756
00:31:27,000 --> 00:31:29,566
这个其实是不太好看的啊

757
00:31:29,566 --> 00:31:31,399
就是我们在这里定义了这个Jack

758
00:31:31,400 --> 00:31:32,566
Coco的Mama Pro e

759
00:31:32,566 --> 00:31:33,766
把做了

760
00:31:34,200 --> 00:31:37,966
做了这个白盒的代码覆盖率的测试

761
00:31:38,266 --> 00:31:38,499
然后

762
00:31:38,500 --> 00:31:41,300
我们怎么把这个结果变成可以看的呢

763
00:31:41,300 --> 00:31:46,266
我们靠的是他的插件里头的一个go

764
00:31:46,466 --> 00:31:49,266
所以这里找到叫Coco的这个插件

765
00:31:50,366 --> 00:31:53,599
然后这里头有一个report的目标

766
00:31:54,333 --> 00:31:55,366
点击它的report目标

767
00:31:55,366 --> 00:31:57,366
其实插件放到这儿就是让你用的

768
00:31:57,400 --> 00:31:59,733
它没有放到定义在pump文件里头

769
00:31:59,733 --> 00:32:01,133
让它自动跑啊

770
00:32:01,133 --> 00:32:02,766
这个我们是让他手动来做

771
00:32:02,900 --> 00:32:03,900
这种其实并不

772
00:32:03,900 --> 00:32:06,700
并不是每一次都需要去看这个东西

773
00:32:06,733 --> 00:32:07,966
不浪费这个时间啊

774
00:32:07,966 --> 00:32:10,866
正常就是90%都是测试中间有问题

775
00:32:10,866 --> 00:32:11,766
然后你不断的去改

776
00:32:11,766 --> 00:32:13,799
所以不会去看这个白盒测试结果

777
00:32:14,133 --> 00:32:15,399
所有同事都跑完了

778
00:32:15,466 --> 00:32:17,099
正常了你最后才能看

779
00:32:17,300 --> 00:32:18,600
然后去看一下这个结果

780
00:32:18,866 --> 00:32:20,133
这个东西跑完以后

781
00:32:20,133 --> 00:32:21,099
会产生什么样的效果

782
00:32:21,100 --> 00:32:23,400
这个晒的底下会形成这一堆东西

783
00:32:23,400 --> 00:32:25,500
这就是我们看到的那个插秒文件

784
00:32:25,700 --> 00:32:27,466
这个大家就可以直接打开看一下

785
00:32:36,100 --> 00:32:38,133
这就是我们看到那个插面

786
00:32:38,200 --> 00:32:41,733
就是最后角Coco做出来的白核

787
00:32:41,733 --> 00:32:44,733
测试的这个结果就是这样

788
00:32:45,566 --> 00:32:47,799
所以这个第一个模块啊

789
00:32:47,800 --> 00:32:50,400
大家学会说怎么在自己的机上去调

790
00:32:50,866 --> 00:32:52,999
然后能够调的通啊

791
00:32:53,000 --> 00:32:54,166
其他模块才有可能

792
00:32:54,166 --> 00:32:55,599
如果这个模块都调不动的话

793
00:32:55,600 --> 00:32:57,166
其他模块依然的东西更多

794
00:32:57,400 --> 00:32:58,600
这个模块就应该两个事情

795
00:32:58,600 --> 00:32:59,533
一个拿Coco

796
00:32:59,766 --> 00:33:00,766
一个拿CO啊

797
00:33:00,766 --> 00:33:02,299
LOCOS装个空的

798
00:33:02,300 --> 00:33:03,366
什么都不用管它

799
00:33:03,733 --> 00:33:06,399
然后后外口能够连通它就说明OK了

800
00:33:06,566 --> 00:33:08,333
另外一个需要装my c口

801
00:33:08,566 --> 00:33:09,666
然后my c口的话

802
00:33:09,666 --> 00:33:12,133
同样要把3306的端口把它pop提出来

803
00:33:12,366 --> 00:33:14,666
安全主题头把3306端口给它放出来

804
00:33:15,000 --> 00:33:16,966
my c口里头把数据给它灌进去

805
00:33:17,166 --> 00:33:19,499
然后外面能够连通my c口

806
00:33:19,666 --> 00:33:21,133
就可以调试这个模块

807
00:33:27,133 --> 00:33:27,599
啊没问题

808
00:33:27,600 --> 00:33:29,366
大家下午就自己做做吧

809
00:33:29,366 --> 00:33:32,733
自己做实验或者做这个都可以

810
00:33:32,733 --> 00:33:34,499
我们下午并不是约定大家

811
00:33:34,500 --> 00:33:35,166
在下午实验课

812
00:33:35,166 --> 00:33:36,266
一定要做什么事

813
00:33:36,666 --> 00:33:38,199
但是下午时间课时间

814
00:33:38,200 --> 00:33:39,666
如果大家重重时间有问题

815
00:33:39,666 --> 00:33:40,566
就可以来问我

816
00:33:40,666 --> 00:33:43,699
那之后的总的这个时间课都是这样的

817
00:33:43,700 --> 00:33:45,066
我们不会约定大家的时间课

818
00:33:45,066 --> 00:33:46,166
一定要做什么样的内容

819
00:33:46,166 --> 00:33:48,299
一定要交一个什么样时间报告

820
00:33:48,300 --> 00:33:50,166
我们的时间是大家在课后做的

821
00:33:50,533 --> 00:33:50,866
所以

822
00:33:50,866 --> 00:33:54,333
我们的第一次实验是在14号还是15号

823
00:33:54,333 --> 00:33:55,299
请锻炼之前做完

824
00:33:55,300 --> 00:33:58,100
把实验报告提前交过来

825
00:33:58,100 --> 00:33:59,800
然后我们在那一周就会进行讨论

826
00:33:59,800 --> 00:34:01,600
就看这个同学做的实验是什么样的

827
00:34:01,700 --> 00:34:03,533
然后最后大家再修正这个实验

828
00:34:03,533 --> 00:34:04,799
或者没有做的同学

829
00:34:04,800 --> 00:34:07,133
在讨论课那一周再把实验做完

830
00:34:07,133 --> 00:34:09,599
然后交一份实验报告拿上来就好

831
00:34:09,933 --> 00:34:10,533
我们这个学期

832
00:34:10,533 --> 00:34:12,166
大概因为已经到这个时候了

833
00:34:12,166 --> 00:34:14,866
我想不做太多实验吧

834
00:34:14,866 --> 00:34:17,399
最多交三个实验报告就可以了

835
00:34:17,733 --> 00:34:22,299
三个实验报告占我们总体分数的40%

836
00:34:22,466 --> 00:34:25,566
是吧四六看之前太多了

837
00:34:25,566 --> 00:34:27,766
那我们加4格也可以反

838
00:34:27,766 --> 00:34:29,099
正就40%的分数嘛

839
00:34:29,533 --> 00:34:30,299
就我的想法

840
00:34:30,300 --> 00:34:32,766
就大家在剩下两个里面做3个实验

841
00:34:32,766 --> 00:34:34,199
加3份实验报告

842
00:34:34,700 --> 00:34:36,800
占整体成绩的40%

843
00:34:37,000 --> 00:34:38,300
然后剩下的60%呢

844
00:34:38,300 --> 00:34:40,133
就是OAD那边的课

845
00:34:40,966 --> 00:34:41,866
分子题多少分

846
00:34:41,933 --> 00:34:44,733
直接乘一个系数过来就好

847
00:34:45,966 --> 00:34:48,933
所以这门课其实琐碎的细节很多

848
00:34:48,966 --> 00:34:50,799
要去考试的话大家都记不住

849
00:34:51,366 --> 00:34:53,399
所以学会做就行了

850
00:34:53,400 --> 00:34:54,166
知道怎么做

851
00:34:54,166 --> 00:34:55,933
而且你你就算是现在知道做

852
00:34:55,933 --> 00:34:57,666
过段时间不做也会忘记

853
00:34:57,866 --> 00:34:59,166
包括我每年上课的时候

854
00:34:59,166 --> 00:35:01,499
都会把去年的这些操作给忘记

855
00:35:01,500 --> 00:35:03,533
所以说要先再去复习一遍

856
00:35:03,866 --> 00:35:04,933
与这个没关系

857
00:35:05,066 --> 00:35:06,533
所说的细节忘记了没关系

858
00:35:06,533 --> 00:35:09,099
但是基本的概念记住

859
00:35:09,300 --> 00:35:11,733
把它捡回来的速度其实还是非常快

860
00:35:12,000 --> 00:35:14,000
何况这些所有的技术细节

861
00:35:14,000 --> 00:35:15,700
每一年每年都会发生改变

862
00:35:15,733 --> 00:35:17,466
所以记住这些操作的细节

863
00:35:17,733 --> 00:35:18,899
意义不大

864
00:35:20,000 --> 00:35:20,800
有问题吗

865
00:35:24,566 --> 00:35:25,133
好首先呢

866
00:35:25,133 --> 00:35:27,299
我们看一下这个实用性的boss

867
00:39:14,733 --> 00:39:17,133
当然不可以

868
00:39:20,166 --> 00:39:23,099
因为业务是需要用到满足地区的啊

869
00:39:23,100 --> 00:39:24,566
业务不必用到公司布朗

870
00:39:24,566 --> 00:39:27,166
你直接在那个地方在布去做那个

871
00:39:27,166 --> 00:39:27,966
先去

872
00:39:54,566 --> 00:39:55,999
我说的业务是什么

873
00:39:56,933 --> 00:40:00,866
当你这个服务每一个

874
00:40:31,533 --> 00:40:32,333
这

875
00:40:33,700 --> 00:40:34,500
个

876
00:40:35,866 --> 00:40:38,666
那如果说这个地区的物流不够大

877
00:40:40,166 --> 00:40:41,533
那这个这个

878
00:40:41,700 --> 00:40:42,900
这个关系有点暂

879
00:40:42,900 --> 00:40:45,300
但是这个服务这个地区是这个状态啊

880
00:40:45,300 --> 00:40:48,200
那物流里面为什么会演讲只画一个客

881
00:40:54,366 --> 00:40:56,199
你的服务大部分是顾客

882
00:41:00,766 --> 00:41:01,933
的服务

883
00:41:12,333 --> 00:41:13,133
没有

884
00:41:16,900 --> 00:41:17,300
这个是

885
00:41:17,300 --> 00:41:18,166
这个仓库

886
00:41:41,800 --> 00:41:43,900
这边是4个小时

887
00:41:44,733 --> 00:41:45,466
这个表示说

888
00:41:45,466 --> 00:41:48,099
全国哪些地区现在都可以送达啊

889
00:41:48,100 --> 00:41:48,733
就是这个

890
00:41:48,733 --> 00:41:49,733
主要就是仓库

891
00:41:49,900 --> 00:41:51,533
就是这个这个

892
00:41:52,066 --> 00:41:53,166
这个就是

893
00:41:53,166 --> 00:41:55,799
比如说这个仓库是可送福建的啊

894
00:41:55,800 --> 00:41:57,066
但是我现在建议说

895
00:41:57,100 --> 00:41:57,900
福建受灾

896
00:42:38,166 --> 00:42:38,966
但

897
00:42:43,500 --> 00:42:44,300
是

898
00:43:00,500 --> 00:43:03,400
或者到时候直接打电话

899
00:43:33,966 --> 00:43:34,766
哦

900
00:43:35,000 --> 00:43:37,666
那就等于那就可以了没事

901
00:43:49,400 --> 00:43:50,800
这个在那个什么

902
00:44:05,566 --> 00:44:06,266
主要我就不懂

903
00:44:06,266 --> 00:44:07,999
他这个串口的数字化是干啥的

904
00:44:08,133 --> 00:44:11,699
因为我刚才看到他那个有一个文件

905
00:44:12,000 --> 00:44:12,933
那里面是优势

906
00:44:12,933 --> 00:44:14,199
但是里面只有一个海星

907
00:44:14,200 --> 00:44:14,800
给他办法

908
00:44:14,800 --> 00:44:15,866
就是串口数字化

909
00:44:27,066 --> 00:44:28,799
啊好

910
00:44:33,500 --> 00:44:34,300
啊

911
00:45:25,566 --> 00:45:26,733
他是创业的

912
00:46:16,166 --> 00:46:17,466
嗯

913
00:46:28,600 --> 00:46:29,600
这应该也是

914
00:46:41,566 --> 00:46:42,366
嗯

915
00:47:07,066 --> 00:47:08,499
你觉得上面有什么呢

916
00:47:09,600 --> 00:47:12,733
嗯是中断处理的时候

917
00:47:13,166 --> 00:47:14,366
这个中断处理

918
00:47:14,800 --> 00:47:18,700
为什么这里面就突然有子啊

919
00:48:46,066 --> 00:48:46,933
服务中心

920
00:48:49,000 --> 00:48:51,600
啊这是售后啊

921
00:48:51,600 --> 00:48:51,700
这这

922
00:48:51,700 --> 00:48:52,900
这是服务

923
00:48:53,333 --> 00:48:54,133
服务是吧

924
00:48:54,900 --> 00:48:56,266
我们想的是

925
00:48:58,066 --> 00:48:58,933
一个后台

926
00:48:58,933 --> 00:49:01,533
他可以还可以产生一个服务

927
00:49:01,533 --> 00:49:03,333
就是可以是售后

928
00:49:03,733 --> 00:49:04,299
但是

929
00:49:04,300 --> 00:49:08,400
这个后台还可以先提供一个售后服务

930
00:49:08,666 --> 00:49:10,166
是售售后单

931
00:49:10,166 --> 00:49:12,166
这个售后单也会产品好

932
00:49:22,166 --> 00:49:23,666
他跟那个产品

933
00:49:23,666 --> 00:49:28,133
是产品是产品

934
00:49:49,300 --> 00:49:50,266
额不用你找那

935
00:49:53,466 --> 00:49:54,266
个

936
00:50:53,066 --> 00:50:55,066
这个

937
00:51:07,333 --> 00:51:08,133
所以说

938
00:51:45,100 --> 00:51:46,066
这是

939
00:51:54,266 --> 00:51:55,333
这关注取什么

940
00:52:17,000 --> 00:52:19,133
乃如果西安这个发这个

941
00:52:40,900 --> 00:52:41,700
还有几

942
00:52:45,166 --> 00:52:45,966
个

943
00:52:50,866 --> 00:52:51,766
因为

944
00:53:31,466 --> 00:53:32,266
对

945
00:53:35,266 --> 00:53:36,066
啊

946
00:53:54,300 --> 00:53:55,133
他本来

947
00:53:56,500 --> 00:53:57,300
就

948
00:53:58,800 --> 00:54:00,333
不管

949
00:54:04,733 --> 00:54:05,799
佢差啲拍住佢

950
00:54:06,733 --> 00:54:08,666
啱啱同阿明姐讲我哋而家冇

951
00:54:08,666 --> 00:54:09,799
佢好意思讲

952
00:54:13,733 --> 00:54:14,733
你们周一交

953
00:54:14,733 --> 00:54:15,533
他们周六周六

954
00:54:16,866 --> 00:54:17,933
周六周六周六周

955
00:54:20,100 --> 00:54:22,200
六周六周六肯定出去发现

956
00:54:22,300 --> 00:54:22,933
为什么

957
00:54:22,933 --> 00:54:23,733
这个

958
00:54:31,800 --> 00:54:32,600
售后

959
00:54:34,500 --> 00:54:35,300
售后

960
00:54:43,533 --> 00:54:44,333
不是这个

961
00:54:50,766 --> 00:54:51,566
这是钓

962
00:54:57,733 --> 00:54:58,533
鱼

963
00:54:59,500 --> 00:55:00,666
这个是

964
00:55:55,100 --> 00:55:55,900
啊

965
00:56:45,533 --> 00:56:46,333
设备设备

966
00:57:27,000 --> 00:57:28,000
这里用

967
00:57:36,666 --> 00:57:37,466
用力

968
00:57:53,700 --> 00:57:54,733
服务其实没有审核

969
00:57:54,733 --> 00:57:56,133
并不只是说审核

970
00:57:56,133 --> 00:57:57,866
大概我们具体为服务

971
00:57:58,000 --> 00:58:00,333
这个服务还是要GTS

972
00:58:04,066 --> 00:58:04,766
服务商的服务

973
00:58:04,766 --> 00:58:05,599
是两个概念

974
00:58:06,066 --> 00:58:06,733
哦对

975
00:58:06,733 --> 00:58:07,566
就是服务

976
00:58:07,566 --> 00:58:09,699
是服务商对出来

977
00:58:09,700 --> 00:58:10,933
对他要做一个服务

978
00:58:15,700 --> 00:58:17,000
他有变更这

979
00:58:22,933 --> 00:58:23,733
种

980
00:58:35,966 --> 00:58:36,766
就你共享

981
00:58:36,766 --> 00:58:37,566
不让的话

982
00:58:38,000 --> 00:58:39,266
那你可以把它改掉

983
00:58:39,300 --> 00:58:40,666
把这个实名改了

984
00:58:41,066 --> 00:58:42,566
你不用你设备ID视频

985
00:58:43,100 --> 00:58:44,466
哈哈哈啊

986
00:58:46,300 --> 00:58:47,900
因为他现在的问题是他

987
00:58:47,900 --> 00:58:49,066
你是不知道那个设备ID

988
00:58:49,066 --> 00:58:49,866
怎么办

989
00:58:50,333 --> 00:58:51,566
不是我不能打印

990
00:58:51,566 --> 00:58:53,066
他那设备ID不是创建的

991
00:58:57,366 --> 00:58:58,166
可以给

992
00:59:08,000 --> 00:59:10,000
中外号你是需要

993
00:59:11,466 --> 00:59:12,466
啊还

994
00:59:15,566 --> 00:59:16,366
行

995
00:59:19,366 --> 00:59:20,366
啊

996
00:59:22,800 --> 00:59:23,900
啊这个

997
00:59:25,533 --> 00:59:29,199
他应该是不是你说他串口有个区啊

998
00:59:29,200 --> 00:59:31,000
就就相当于这个他其实有个

999
00:59:33,966 --> 00:59:34,766
对

1000
00:59:37,733 --> 00:59:38,533
对

