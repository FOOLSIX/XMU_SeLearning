1
00:05:59,500 --> 00:06:01,900
我先说一下就是昨天

2
00:06:02,733 --> 00:06:03,533
我有

3
00:06:04,500 --> 00:06:06,733
在叮叮群里发了一个

4
00:06:07,133 --> 00:06:09,799
呃华为账号的收集

5
00:06:09,900 --> 00:06:10,333
这个

6
00:06:10,333 --> 00:06:12,866
你们之前的课应该是有用过华为云的

7
00:06:12,866 --> 00:06:13,699
因为我们数据库

8
00:06:13,700 --> 00:06:15,266
好像也是用的这个东西

9
00:06:15,966 --> 00:06:16,766
呃

10
00:06:19,200 --> 00:06:20,000
这个

11
00:06:20,666 --> 00:06:21,666
跟大家解释一下

12
00:06:21,666 --> 00:06:24,266
就是因为我们现在有两门课是在

13
00:06:24,566 --> 00:06:27,266
这个华为的智能机座里头啊

14
00:06:27,266 --> 00:06:28,733
一个是软件工程

15
00:06:28,733 --> 00:06:30,933
一个是焦瓦一平台技术

16
00:06:31,366 --> 00:06:32,933
那明显对象这门课是不在

17
00:06:33,333 --> 00:06:34,966
呃基座里头的

18
00:06:35,133 --> 00:06:36,766
但我们现在两门课

19
00:06:36,933 --> 00:06:39,566
就这个学期我们会用到两个产品

20
00:06:39,933 --> 00:06:42,966
一个是软工那边用到的code Arts

21
00:06:43,266 --> 00:06:46,399
一个是我们这边焦瓦一会要用到的

22
00:06:46,500 --> 00:06:47,666
那个服务器

23
00:06:48,166 --> 00:06:49,966
呃所以

24
00:06:50,700 --> 00:06:56,066
我们需要申请大概600-700的优惠券

25
00:06:56,333 --> 00:07:00,199
那我们打算是分两门课程两次来申请

26
00:07:00,466 --> 00:07:01,566
就是第一次

27
00:07:01,600 --> 00:07:04,566
先用娇娃一课程的名义去申请

28
00:07:04,566 --> 00:07:05,766
300块钱的优惠券

29
00:07:06,266 --> 00:07:07,666
用来给大家

30
00:07:08,466 --> 00:07:10,199
来租这个codards

31
00:07:10,200 --> 00:07:13,266
因为codards是从需求开始的它会

32
00:07:13,800 --> 00:07:15,566
比较早大家就会用到

33
00:07:16,000 --> 00:07:17,500
然后软工的话

34
00:07:17,500 --> 00:07:20,100
在10月份再去申请另外一半的

35
00:07:20,266 --> 00:07:21,566
代金券啊

36
00:07:21,566 --> 00:07:23,366
因为大家真正去写代码的话

37
00:07:23,366 --> 00:07:25,499
也是在10月的中下旬了

38
00:07:25,733 --> 00:07:29,166
所以那个时候再去租华为的云服务器

39
00:07:29,166 --> 00:07:30,299
答案分两次

40
00:07:31,000 --> 00:07:33,866
所以无论选没选焦瓦一一的同学

41
00:07:34,100 --> 00:07:35,500
都把它登记上来

42
00:07:35,500 --> 00:07:37,100
就是因为他也不知道

43
00:07:37,366 --> 00:07:39,166
焦瓦一一课有多少选客人

44
00:07:39,600 --> 00:07:40,966
所以我们把所有同学

45
00:07:41,100 --> 00:07:43,600
用焦瓦一一的名义去申请一次优惠券

46
00:07:43,600 --> 00:07:44,200
然后再用

47
00:07:44,200 --> 00:07:46,100
软工的名义去申请一次优惠券

48
00:07:47,100 --> 00:07:48,300
呃填的过程中

49
00:07:48,300 --> 00:07:51,266
我发现还是有不少同学填的不对

50
00:07:53,000 --> 00:07:54,333
比如说还是有同学

51
00:07:54,366 --> 00:07:55,599
比如说这些东西不填

52
00:07:55,600 --> 00:07:57,900
这些东西不填是是没有用的

53
00:07:57,900 --> 00:07:58,700
你是

54
00:07:59,333 --> 00:08:00,466
根本就申请不了

55
00:08:00,466 --> 00:08:02,666
你至少都要把用户名和租户

56
00:08:03,600 --> 00:08:06,600
租货ID去把它填了这才有用啊

57
00:08:07,166 --> 00:08:10,733
然后用户名和租货ID怎么去找

58
00:08:10,733 --> 00:08:12,533
我发了一个文件

59
00:08:16,300 --> 00:08:19,100
这个应该是你们是有用过的

60
00:08:22,466 --> 00:08:24,399
应该知道怎么去找这个

61
00:08:27,666 --> 00:08:28,466
这个文件

62
00:08:31,800 --> 00:08:33,500
那登进去以后

63
00:08:33,600 --> 00:08:35,066
上面这个是用户名

64
00:08:35,933 --> 00:08:37,866
下面这个是你的租货ID

65
00:08:38,500 --> 00:08:41,600
所以把这两个东西填到Excel文件里去

66
00:08:41,866 --> 00:08:43,466
那大家填好了以后

67
00:08:43,700 --> 00:08:44,700
我会去

68
00:08:44,866 --> 00:08:48,133
在华为云上头去为大家申请一个

69
00:08:48,333 --> 00:08:51,299
总额然后把那个Excel文件传上去

70
00:08:51,766 --> 00:08:54,499
团上去以后呢你你们才能做这一步

71
00:08:54,500 --> 00:08:56,733
就是你这里填的这个学生名称

72
00:08:56,733 --> 00:09:00,533
学校课程名称全部填加瓦一啊

73
00:09:00,766 --> 00:09:01,933
加瓦一平台技术

74
00:09:01,933 --> 00:09:03,133
然后授课老师说我

75
00:09:03,533 --> 00:09:04,799
这几个名称对了

76
00:09:04,800 --> 00:09:07,366
他才能够把优惠券发出来

77
00:09:07,700 --> 00:09:08,766
就是跟那个

78
00:09:09,600 --> 00:09:12,400
跟那个Excel文件里头的名字对了

79
00:09:12,400 --> 00:09:13,366
才能发出来

80
00:09:13,400 --> 00:09:16,100
那你如果在Excel文件中间填的

81
00:09:16,566 --> 00:09:18,466
用户名和租户名不一样的话

82
00:09:18,466 --> 00:09:20,933
那我报上去他就根本就出不来

83
00:09:20,933 --> 00:09:23,966
那我马上会知道说哪些同学不对

84
00:09:24,466 --> 00:09:26,099
那你在这填也没有用啊

85
00:09:26,133 --> 00:09:29,133
所以一定把用户名和租户ID填对

86
00:09:29,366 --> 00:09:30,899
填对以后我申请完了

87
00:09:32,066 --> 00:09:34,566
这个大家在这就能看得到

88
00:09:34,600 --> 00:09:38,066
因为教啊一明天的课是十年课

89
00:09:38,700 --> 00:09:39,900
呃然后我们本来骄傲

90
00:09:39,900 --> 00:09:42,333
一一是有一个自己的实验平台的

91
00:09:42,333 --> 00:09:43,933
但是因为今年我们从

92
00:09:44,366 --> 00:09:46,466
一家公司换到了另外一家公司

93
00:09:46,466 --> 00:09:47,099
就是我们

94
00:09:47,100 --> 00:09:51,300
我们用的是就是厦大统一的那个平台

95
00:09:51,766 --> 00:09:54,166
那个平台上头它是提供了很多的

96
00:09:54,300 --> 00:09:55,300
云服务器的

97
00:09:55,666 --> 00:09:57,299
但是因为教务处的原因

98
00:09:57,300 --> 00:10:00,900
他们今年切换了这个平台的服务商

99
00:10:01,500 --> 00:10:02,733
结果造成说

100
00:10:03,366 --> 00:10:05,099
我们的实验在上头跑的时

101
00:10:05,100 --> 00:10:06,200
候是有点问题

102
00:10:06,200 --> 00:10:06,900
所以这样的话

103
00:10:06,900 --> 00:10:07,766
我们第一次实验课

104
00:10:07,766 --> 00:10:09,266
就没办法给大家去介绍

105
00:10:09,500 --> 00:10:10,100
教化一

106
00:10:10,100 --> 00:10:12,100
我们将来要去做实验的那个平台

107
00:10:12,533 --> 00:10:13,333
所以

108
00:10:13,866 --> 00:10:14,933
我想教下一一的课

109
00:10:14,933 --> 00:10:17,599
给大家看一下code二是什么样子啊

110
00:10:17,600 --> 00:10:19,366
就进去以后code二是什么样子

111
00:10:19,600 --> 00:10:22,500
所以尽快今天之内啊

112
00:10:22,733 --> 00:10:23,533
大家把

113
00:10:24,133 --> 00:10:25,199
这个信息填完

114
00:10:25,200 --> 00:10:26,700
那今天我就会像

115
00:10:27,533 --> 00:10:28,366
可能今天

116
00:10:28,766 --> 00:10:32,199
下午之前我就会向华为去申请代金券

117
00:10:32,566 --> 00:10:35,199
那如果说之后填的同学

118
00:10:35,200 --> 00:10:36,666
那我就不会这么快处理了

119
00:10:36,666 --> 00:10:37,666
那就可能到

120
00:10:38,500 --> 00:10:40,200
下一周再去

121
00:10:40,533 --> 00:10:42,966
把后面同学再去申请一次啊

122
00:10:43,133 --> 00:10:45,733
所以今天下午我会第一次向华为去

123
00:10:45,966 --> 00:10:47,599
申请这个代金券

124
00:10:47,766 --> 00:10:50,099
所以尽快把那个信息补充完整

125
00:10:52,266 --> 00:10:53,099
后面也要做啊

126
00:10:53,100 --> 00:10:53,866
补充完整以后

127
00:10:53,866 --> 00:10:55,533
你后面这些东西都要认证

128
00:10:55,666 --> 00:10:57,299
认证完了以后你你才可以

129
00:10:57,300 --> 00:10:59,933
我才能再把优惠券发到你的账户上去

130
00:11:00,100 --> 00:11:01,333
首先我要去申请

131
00:11:01,400 --> 00:11:03,933
申请完了以后你才能做这些事情

132
00:11:04,200 --> 00:11:05,300
做完这些事情以后

133
00:11:05,300 --> 00:11:06,766
我才能把优惠券发出来

134
00:11:06,766 --> 00:11:07,566
要不然

135
00:11:07,733 --> 00:11:09,599
不做后面事情我也发不出来啊

136
00:11:09,900 --> 00:11:11,100
这个注意一下

137
00:11:11,333 --> 00:11:12,466
你们应该是有用过

138
00:11:12,466 --> 00:11:15,466
因为数据库应该用的就是华为云的

139
00:11:15,800 --> 00:11:16,600
数据库吧

140
00:11:16,866 --> 00:11:18,466
如果用的是华为云数据库的话

141
00:11:18,466 --> 00:11:20,266
其实这个过程是完全一样的

142
00:11:23,100 --> 00:11:24,133
好这是

143
00:11:24,600 --> 00:11:27,066
呃华为云服务器的事情

144
00:11:31,533 --> 00:11:32,366
今天我们

145
00:11:33,066 --> 00:11:36,166
打算讲两个内容啊看能不能讲完

146
00:11:36,700 --> 00:11:39,600
一个内容是关于需求分析

147
00:11:39,600 --> 00:11:42,900
中间的系统交互建模和流程建模

148
00:11:43,533 --> 00:11:45,166
那另外一个内容就是把

149
00:11:45,466 --> 00:11:46,766
我们需求分析

150
00:11:46,766 --> 00:11:49,533
前半段的需求获取的内容

151
00:11:50,000 --> 00:11:53,100
用我们的支付的模块来

152
00:11:53,533 --> 00:11:54,566
来作为一个例子

153
00:11:54,566 --> 00:11:56,566
来看一下它是怎么完整的

154
00:11:56,800 --> 00:11:57,966
串到一起的

155
00:11:59,266 --> 00:12:01,566
首先讲这个系统的交互

156
00:12:02,100 --> 00:12:04,500
我们前面讲了如何去写用力啊

157
00:12:04,500 --> 00:12:05,766
如何去定义用力

158
00:12:05,766 --> 00:12:07,499
如何去写用力

159
00:12:07,933 --> 00:12:08,933
那把用力

160
00:12:09,000 --> 00:12:12,600
里头已经讲了人和系统之间的交互

161
00:12:16,300 --> 00:12:17,200
我们说

162
00:12:18,366 --> 00:12:21,699
用力里头所说的就是人机之间的交互

163
00:12:22,366 --> 00:12:23,866
他们之间的信息

164
00:12:26,600 --> 00:12:27,533
和行为

165
00:12:29,933 --> 00:12:30,933
的交互啊

166
00:12:30,933 --> 00:12:32,099
行为主要是

167
00:12:32,700 --> 00:12:35,133
这个人对系统的操作

168
00:12:35,200 --> 00:12:38,500
信息主要是系统给人反馈的信息

169
00:12:39,400 --> 00:12:43,500
当然人也会把这个信息输入给系统啊

170
00:12:43,500 --> 00:12:45,133
所以这是我们在用力中间

171
00:12:45,133 --> 00:12:46,533
所去描述的东西

172
00:12:47,066 --> 00:12:49,199
但是我们会发现在需求分析中间

173
00:12:49,200 --> 00:12:51,866
我们除了主参与者以外

174
00:12:52,100 --> 00:12:53,700
我们其实还有另外一个人

175
00:12:53,700 --> 00:12:55,000
叫做辅助参与者

176
00:13:04,400 --> 00:13:06,366
辅助参与者是我们在需求分析中间

177
00:13:06,366 --> 00:13:07,999
必须要关注的对象

178
00:13:08,000 --> 00:13:11,133
为啥呢因为他为我们的系统

179
00:13:11,700 --> 00:13:12,766
提供了服务

180
00:13:13,333 --> 00:13:16,133
但是我们在之前的用力分析中间

181
00:13:16,133 --> 00:13:18,166
其实没有去描述说

182
00:13:18,533 --> 00:13:21,266
辅助参与者到底起一个什么样的作用

183
00:13:21,466 --> 00:13:24,133
原因是因为我们把系统看成了黑盒

184
00:13:24,700 --> 00:13:26,000
没有去描述

185
00:13:26,000 --> 00:13:27,766
在用途中间把系统看成了黑盒

186
00:13:27,766 --> 00:13:30,133
没有去描述系统内部该怎么做

187
00:13:30,500 --> 00:13:32,766
那因为系统内部没有去描述的话

188
00:13:32,766 --> 00:13:34,466
那当然也不会去描述说

189
00:13:34,900 --> 00:13:36,500
系统内部是怎样去

190
00:13:36,500 --> 00:13:38,266
使用辅助参与者的

191
00:13:38,466 --> 00:13:41,366
所以在用力的这个过程中间

192
00:13:41,400 --> 00:13:45,733
我们其实看到辅助参与者所起的作用

193
00:13:46,400 --> 00:13:47,800
其实是缺失的

194
00:13:49,800 --> 00:13:51,600
那当然在需求分析过程中间

195
00:13:51,600 --> 00:13:53,066
这是不能省掉的

196
00:13:53,166 --> 00:13:54,166
因为我们知道

197
00:13:54,366 --> 00:13:56,333
当你去设计一个需求的时候

198
00:13:56,333 --> 00:13:58,333
当你去分析一个需求的时候

199
00:13:58,333 --> 00:13:59,266
如果辅助

200
00:13:59,266 --> 00:14:01,666
参与者不支持这样的一个需求

201
00:14:02,400 --> 00:14:04,466
你其实就没有办法把它实现

202
00:14:04,700 --> 00:14:05,766
对吧所以

203
00:14:05,766 --> 00:14:08,133
辅助参与者是在需求分析中间

204
00:14:08,133 --> 00:14:09,466
必须要去关注

205
00:14:09,466 --> 00:14:11,799
的事情那从这个角度来说

206
00:14:11,800 --> 00:14:14,666
我们不仅仅关注人和系统

207
00:14:16,733 --> 00:14:19,699
的信息和行为的需求

208
00:14:19,933 --> 00:14:21,533
其实我们也关心

209
00:14:23,300 --> 00:14:25,166
这个系统和

210
00:14:26,066 --> 00:14:26,866
这么画的

211
00:14:30,333 --> 00:14:32,199
其实我们也关心这个系统

212
00:14:35,366 --> 00:14:37,399
和辅助参与者之间的

213
00:14:39,300 --> 00:14:40,533
行为和信息

214
00:14:44,700 --> 00:14:45,866
其实我们关心这个

215
00:14:46,133 --> 00:14:50,699
但你会想说辅助参与者提供了什么

216
00:14:51,400 --> 00:14:54,700
辅助的参与者目前最主要的方式

217
00:14:54,900 --> 00:14:56,166
是提供了API

218
00:14:58,933 --> 00:15:00,866
大家知道他是被系统集成的

219
00:15:01,200 --> 00:15:04,566
所以他集成进来的最主要的方式

220
00:15:04,800 --> 00:15:05,900
就是通过API

221
00:15:06,366 --> 00:15:09,066
当然有些古老的辅助参与者可能

222
00:15:09,333 --> 00:15:12,166
那个API提供的形式会会不一样

223
00:15:12,400 --> 00:15:14,800
但是我们今天基本上在

224
00:15:15,200 --> 00:15:17,400
近十年来开发的系统

225
00:15:18,166 --> 00:15:20,933
给外面去提供集成的方式

226
00:15:21,366 --> 00:15:24,299
都是通过后端的API来完成的

227
00:15:24,333 --> 00:15:26,699
具体来说就是通过restful API来完成的

228
00:15:31,066 --> 00:15:33,099
这是目前一种主要的方式

229
00:15:33,500 --> 00:15:37,100
那这种API其实在告诉

230
00:15:37,566 --> 00:15:40,266
用它的系统说我能做什么

231
00:15:40,800 --> 00:15:44,333
但是我们在我们所分析的系统中间

232
00:15:44,933 --> 00:15:47,966
在何时调哪一个API

233
00:15:48,533 --> 00:15:50,666
在需求中间是要去明确的

234
00:15:51,133 --> 00:15:52,266
调这些API

235
00:15:52,533 --> 00:15:54,866
给他传递过去什么样的信息

236
00:15:55,066 --> 00:15:56,366
以及他从这些API

237
00:15:56,366 --> 00:15:58,133
中间获得什么样的信息

238
00:15:58,766 --> 00:15:59,933
这是需要明确的

239
00:16:00,133 --> 00:16:01,399
这就是我们所说的

240
00:16:02,066 --> 00:16:04,966
系统我们要设计的这个系统

241
00:16:05,266 --> 00:16:07,766
和我们的辅助参与者之间的

242
00:16:08,366 --> 00:16:10,599
行为需求和信息需求

243
00:16:11,566 --> 00:16:12,399
这个东西

244
00:16:12,600 --> 00:16:14,966
只能靠系统交互图

245
00:16:15,133 --> 00:16:17,333
或者系统顺序图啊去描述它

246
00:16:17,333 --> 00:16:19,933
这个system sequence diagram

247
00:16:21,166 --> 00:16:22,666
system sequence diagram呢

248
00:16:22,666 --> 00:16:23,733
它其实是

249
00:16:23,966 --> 00:16:27,966
我们的Umail的中间的一种图的特例

250
00:16:27,966 --> 00:16:29,133
这个图的名字就叫做

251
00:16:29,133 --> 00:16:31,133
后面那个就是sequence

252
00:16:33,266 --> 00:16:34,066
diagram

253
00:16:35,733 --> 00:16:36,799
中文通常

254
00:16:37,933 --> 00:16:40,899
翻成顺序图或者持续图啊它就是

255
00:16:40,900 --> 00:16:42,733
表示一个顺序的

256
00:16:42,733 --> 00:16:43,333
这个语法

257
00:16:43,333 --> 00:16:45,666
我们在后面会讲的更详细一点

258
00:16:46,000 --> 00:16:48,500
那在这个地方就是系统顺序图里头

259
00:16:48,500 --> 00:16:51,166
其实它只用到了其中很简单的

260
00:16:51,200 --> 00:16:52,200
一些符号

261
00:16:52,366 --> 00:16:54,166
所以我们简要的讲一下

262
00:16:54,900 --> 00:16:57,000
在系统顺序图中间用到的

263
00:16:57,000 --> 00:16:59,166
secrets diagram的符号有什么

264
00:16:59,366 --> 00:17:01,133
它其实就用到了两个符号

265
00:17:01,400 --> 00:17:02,866
一个是actor

266
00:17:03,900 --> 00:17:08,700
啊一个是actor就是主操作人啊

267
00:17:08,800 --> 00:17:10,200
用小人来表示的

268
00:17:10,400 --> 00:17:11,666
另外一个是system

269
00:17:11,666 --> 00:17:13,599
就是我们称之为system and design

270
00:17:14,400 --> 00:17:18,300
就是我们要分析的要设计的这个系统

271
00:17:19,900 --> 00:17:23,000
然后呢还有一个就是辅助操作人啊

272
00:17:23,000 --> 00:17:25,600
辅助操作人用的符号是跟我们前面在

273
00:17:27,900 --> 00:17:29,966
这个里头用的这个符号是一样的啊

274
00:17:29,966 --> 00:17:32,066
辅助操作者啊

275
00:17:32,200 --> 00:17:35,500
其实一共用了三种符号就是主操作人

276
00:17:35,900 --> 00:17:38,933
system的design和辅助操作的

277
00:17:39,200 --> 00:17:40,600
那我们可以看到

278
00:17:40,600 --> 00:17:44,133
他在这些符号的下面都画了一条小线

279
00:17:44,400 --> 00:17:45,366
这条小线叫什么

280
00:17:45,366 --> 00:17:46,333
叫做Lifeline

281
00:17:46,900 --> 00:17:48,500
通常来说我们说

282
00:17:49,066 --> 00:17:51,333
呃跟用力图不同

283
00:17:51,333 --> 00:17:54,533
用力图描述的是用力和人之间的关系

284
00:17:54,933 --> 00:17:56,399
但是我们在

285
00:17:56,766 --> 00:17:59,733
system sacred stagram就是系统顺序图中间

286
00:17:59,966 --> 00:18:02,333
要描述的是交互

287
00:18:03,566 --> 00:18:04,899
交互的顺序

288
00:18:05,200 --> 00:18:08,400
所以我们以这样的一条线Lifeline

289
00:18:08,700 --> 00:18:10,000
去描述说

290
00:18:10,800 --> 00:18:14,766
从这个actor向system

291
00:18:15,333 --> 00:18:17,966
发出的交互是什么

292
00:18:18,166 --> 00:18:20,466
以及他返回的信息是什么

293
00:18:20,500 --> 00:18:21,900
他的描述方式啊

294
00:18:21,900 --> 00:18:24,400
我们可以大家看张图就比较清楚了

295
00:18:27,666 --> 00:18:28,933
啊大家可以看到

296
00:18:30,866 --> 00:18:33,266
第一个描述的是actor

297
00:18:33,500 --> 00:18:36,100
顾客但我没有用那个小人的符号

298
00:18:36,100 --> 00:18:37,733
用小人符号也可以啊

299
00:18:37,733 --> 00:18:39,899
我现在第一个描述的是顾客

300
00:18:40,366 --> 00:18:44,533
第二个描述的是我们system and design

301
00:18:44,733 --> 00:18:46,966
就是我们要描述的支付模块

302
00:18:47,766 --> 00:18:49,899
支付模块第三个是什么

303
00:18:49,900 --> 00:18:52,133
第三个是辅助操作者

304
00:18:52,333 --> 00:18:54,766
当然这张图画的不是特别的好

305
00:18:54,766 --> 00:18:56,499
严格来说应该这样画

306
00:18:56,800 --> 00:18:59,933
应该用符号把它标示出来啊

307
00:19:00,566 --> 00:19:02,799
呃大家知道如果用同样的符号的话

308
00:19:02,800 --> 00:19:04,966
我可以用什么东西把它区分开

309
00:19:05,866 --> 00:19:07,933
在周一刚刚讲过的

310
00:19:09,400 --> 00:19:10,666
如果我想区分它的话

311
00:19:10,666 --> 00:19:12,466
我用什么办法能把它区分开

312
00:19:12,466 --> 00:19:14,333
就算我想区分出主参与者

313
00:19:15,500 --> 00:19:17,533
啊这个system and design

314
00:19:18,400 --> 00:19:20,266
和辅助参与者

315
00:19:21,766 --> 00:19:22,666
用什么办法

316
00:19:23,500 --> 00:19:26,266
用stereotype星期一刚讲过的

317
00:19:26,500 --> 00:19:28,466
就把意义中间通用的方式

318
00:19:35,133 --> 00:19:37,133
用这个印章

319
00:19:38,766 --> 00:19:41,766
给这些对象上面加上一个小间括号

320
00:19:41,766 --> 00:19:43,099
说明那个是actor

321
00:19:43,133 --> 00:19:43,933
这个是

322
00:19:44,600 --> 00:19:45,700
辅助参与者

323
00:19:46,066 --> 00:19:47,333
那个是主参与者

324
00:19:47,500 --> 00:19:48,933
这个就是什么的目标

325
00:19:48,933 --> 00:19:50,733
表示他是C3的第一站啊

326
00:19:50,733 --> 00:19:52,899
严格意义上应该这么去把它区分开

327
00:19:53,300 --> 00:19:56,100
那我们可以看到他的三者之间

328
00:19:57,100 --> 00:19:58,400
存在的交互

329
00:19:59,300 --> 00:20:00,166
这个交互呢

330
00:20:00,166 --> 00:20:02,966
我们是用线虚线把它引下来

331
00:20:02,966 --> 00:20:06,899
这个称之为这个对象的lifeline

332
00:20:06,933 --> 00:20:07,966
它的生命线

333
00:20:08,300 --> 00:20:09,733
那它们之间的交互

334
00:20:09,733 --> 00:20:12,699
就是用生命线上头所画的这个message

335
00:20:12,700 --> 00:20:13,600
来描述的

336
00:20:13,600 --> 00:20:15,800
就是我们这条线其实描述了是

337
00:20:16,000 --> 00:20:19,933
比如第一条线描述的是顾客向

338
00:20:20,400 --> 00:20:23,700
辅助参与者发出了一个交互的

339
00:20:24,600 --> 00:20:27,500
交互的这个过程就是交互的

340
00:20:27,600 --> 00:20:30,533
实际上就是API的一次调用啊

341
00:20:31,366 --> 00:20:33,899
然后他的调用完成以后他的返回值

342
00:20:34,533 --> 00:20:36,733
他的返回啊他其实不是返回值

343
00:20:36,800 --> 00:20:37,800
他的下一次交互

344
00:20:37,800 --> 00:20:40,200
其实是从支付宝平台向

345
00:20:40,600 --> 00:20:44,500
CSTAN的第一站去发出了一个啊请求

346
00:20:44,533 --> 00:20:46,099
去发出了一个调用

347
00:20:46,300 --> 00:20:47,100
然后再

348
00:20:48,133 --> 00:20:49,266
啊下面

349
00:20:49,933 --> 00:20:51,799
第三次是个什么样的

350
00:20:51,866 --> 00:20:53,133
所以他的

351
00:20:53,500 --> 00:20:56,333
系统和就是系统人和系统之间

352
00:20:56,333 --> 00:20:57,066
系统和辅

353
00:20:57,066 --> 00:20:58,366
助参与者之间

354
00:20:58,600 --> 00:21:01,000
的交互是通过他们之间的

355
00:21:01,066 --> 00:21:02,966
我们把这个东西称作为message

356
00:21:09,900 --> 00:21:10,866
来描述的

357
00:21:11,066 --> 00:21:13,566
虽然叫做message但大家知道其实是

358
00:21:13,966 --> 00:21:16,366
API的调用来描述的

359
00:21:16,500 --> 00:21:20,266
那这样的一个过程从上往下看就是它

360
00:21:20,266 --> 00:21:21,266
从上往下看

361
00:21:21,266 --> 00:21:22,466
但我现在也做了编号

362
00:21:22,466 --> 00:21:24,333
这个大家看起来会更加直观一点

363
00:21:24,733 --> 00:21:28,099
这个从上往下描述的就是他的顺序

364
00:21:28,300 --> 00:21:30,533
那我们具体来说这张图啊

365
00:21:30,533 --> 00:21:31,966
这张图是什么意思

366
00:21:32,366 --> 00:21:33,999
这张图描述的是支付

367
00:21:34,400 --> 00:21:37,700
我们会前面有放了这个支付的用力

368
00:21:40,000 --> 00:21:41,900
记得我们在上节课给大家看到

369
00:21:41,900 --> 00:21:43,133
这是支付的用力

370
00:21:43,933 --> 00:21:47,399
支付是一个子功能级别的用力

371
00:21:48,700 --> 00:21:49,933
它的场景

372
00:21:49,933 --> 00:21:52,799
其实就是系统会显示支付的金额

373
00:21:52,900 --> 00:21:54,600
以及支持的支付渠道

374
00:21:55,066 --> 00:21:57,366
顾客选择支付渠道提交

375
00:21:57,366 --> 00:22:00,199
然后系统会调用对应的支付渠道

376
00:22:00,200 --> 00:22:01,166
去完成它

377
00:22:02,000 --> 00:22:05,366
这种完全没有讲说我选择支付宝

378
00:22:06,100 --> 00:22:07,500
或者选择微信

379
00:22:07,933 --> 00:22:09,799
或者选择云闪付

380
00:22:10,466 --> 00:22:11,499
会发生什么

381
00:22:12,366 --> 00:22:14,166
这在需求中间是要明确的

382
00:22:14,166 --> 00:22:14,999
大家知道

383
00:22:15,400 --> 00:22:16,533
选择支付宝

384
00:22:17,166 --> 00:22:18,266
选择微信

385
00:22:18,566 --> 00:22:19,766
选择云闪付

386
00:22:19,766 --> 00:22:21,499
所发生的事情是完全不一样

387
00:22:21,600 --> 00:22:22,800
不仅事情不一样

388
00:22:22,800 --> 00:22:23,800
顺序也不一样

389
00:22:24,166 --> 00:22:26,533
因为每一个支付平台

390
00:22:27,100 --> 00:22:29,000
都有他自己的逻辑

391
00:22:29,400 --> 00:22:31,300
这个部分大家可以看到

392
00:22:32,166 --> 00:22:34,099
在用力中间

393
00:22:34,200 --> 00:22:37,000
文字的用力中间其实缺失的

394
00:22:37,000 --> 00:22:38,566
他没有描述这个需求

395
00:22:38,766 --> 00:22:40,166
而这个需求很重要

396
00:22:40,166 --> 00:22:42,666
因为你不能在用力中间说我可以

397
00:22:42,700 --> 00:22:44,266
支持微信和支付宝

398
00:22:45,000 --> 00:22:47,066
那微信支付宝怎么怎么用上去的

399
00:22:47,066 --> 00:22:48,133
怎么支持的

400
00:22:48,366 --> 00:22:49,499
他能不能支持

401
00:22:49,500 --> 00:22:51,466
你说的只选一个支付渠道

402
00:22:51,466 --> 00:22:52,666
就完成一个交付的

403
00:22:52,666 --> 00:22:53,899
过支付的过程

404
00:22:54,266 --> 00:22:56,866
等等这些事情啊都是需要

405
00:22:57,600 --> 00:23:00,800
通过我们后面用系统顺序图去描

406
00:23:00,800 --> 00:23:03,133
述的所以在这个用力之后

407
00:23:03,966 --> 00:23:05,966
我们画了两个系统顺序图

408
00:23:06,500 --> 00:23:07,600
一个系统顺序图

409
00:23:07,600 --> 00:23:10,733
描述的是支付宝的支付的过程

410
00:23:12,700 --> 00:23:15,333
支付宝的支付的过程是

411
00:23:17,200 --> 00:23:21,466
由主参与者就是我按支付开始以后啊

412
00:23:21,466 --> 00:23:23,133
按支付开始以后

413
00:23:23,733 --> 00:23:28,966
是由主参与者直接去掉支付宝的API

414
00:23:29,000 --> 00:23:30,933
这个API呢我写的是个示意

415
00:23:31,266 --> 00:23:32,899
真实的API是在

416
00:23:34,400 --> 00:23:36,133
这个文档里头啊

417
00:23:36,133 --> 00:23:38,566
这个大家可以点一下过去看

418
00:23:39,733 --> 00:23:40,999
我这里应该也可以点

419
00:24:02,733 --> 00:24:03,966
啊可以点过去看

420
00:24:05,666 --> 00:24:06,599
这个就是

421
00:24:08,133 --> 00:24:10,999
支付宝的支付的API

422
00:24:11,666 --> 00:24:13,899
它的公共请求参数

423
00:24:14,066 --> 00:24:16,566
就是所有的API都有的

424
00:24:17,366 --> 00:24:21,966
它的针对这一个请求的请求参数

425
00:24:22,500 --> 00:24:23,900
每一个参数的

426
00:24:25,500 --> 00:24:26,700
内容是什么

427
00:24:27,200 --> 00:24:30,100
那这个API的主要的作用

428
00:24:35,500 --> 00:24:36,966
这个API的主要作用

429
00:24:36,966 --> 00:24:39,099
就是告诉支付宝说

430
00:24:39,533 --> 00:24:41,366
你要付多少钱

431
00:24:42,333 --> 00:24:43,566
啊我们每一个参数

432
00:24:43,566 --> 00:24:45,366
其实在那个文档里头都有啊

433
00:24:45,366 --> 00:24:46,599
我这就不细讲了

434
00:24:46,700 --> 00:24:47,700
他告诉API

435
00:24:47,733 --> 00:24:50,066
告诉支付宝说你要付多少钱

436
00:24:50,966 --> 00:24:54,466
然后支付宝平台去完成支付

437
00:24:54,466 --> 00:24:55,899
有就从1-2的过程

438
00:24:55,900 --> 00:24:58,166
中间其实还有很多的行为

439
00:24:58,166 --> 00:25:00,766
但那个行为已经不在我们的

440
00:25:01,066 --> 00:25:01,999
范围之内了

441
00:25:02,166 --> 00:25:03,166
那些行为是什么

442
00:25:03,166 --> 00:25:04,866
输入用户名和密码啊

443
00:25:04,866 --> 00:25:06,133
用户名已经啊

444
00:25:06,900 --> 00:25:08,133
对输入用户名和密码

445
00:25:08,133 --> 00:25:08,899
密码用户名

446
00:25:08,900 --> 00:25:10,766
应该是记在记在你的APP里头的

447
00:25:10,766 --> 00:25:12,566
那应该是输入你的支付密码

448
00:25:12,700 --> 00:25:14,600
然后把钱

449
00:25:14,600 --> 00:25:17,500
支付给我们所设定的一个账号里去

450
00:25:17,900 --> 00:25:18,700
所以

451
00:25:19,866 --> 00:25:21,666
在第一步和第二步之间

452
00:25:21,666 --> 00:25:22,899
其实还会发生很多事

453
00:25:22,900 --> 00:25:26,100
但那些事情不在我们的系统的边界内

454
00:25:26,100 --> 00:25:28,166
所以我们就没有去说啊

455
00:25:28,166 --> 00:25:29,899
所以我们就没有去说他

456
00:25:29,900 --> 00:25:33,333
在支付完成以后支付宝的平台会回掉

457
00:25:33,333 --> 00:25:36,299
我们的一个URL

458
00:25:36,300 --> 00:25:37,900
这个URL其实是我们在

459
00:25:38,766 --> 00:25:41,166
调用他的时候传过去的最后那个参数

460
00:25:41,366 --> 00:25:46,966
notify URL那他会在支付成功或者没成功

461
00:25:46,966 --> 00:25:48,366
不管他成没成功

462
00:25:48,666 --> 00:25:51,266
都会毁掉我们的这个URL

463
00:25:51,333 --> 00:25:53,733
告诉我们说这笔支付是成功的

464
00:25:54,133 --> 00:25:55,566
还是不成功的

465
00:25:55,700 --> 00:25:58,933
那当然因为网络的不稳定的原因

466
00:25:59,466 --> 00:26:02,333
我们有可能没有搜到这个notified UIL

467
00:26:02,600 --> 00:26:04,366
所以我们会做一个延时

468
00:26:04,800 --> 00:26:05,900
就是如果

469
00:26:06,000 --> 00:26:08,700
比如说30秒钟没有收到他的回掉

470
00:26:08,700 --> 00:26:10,733
或者一分钟没有收到他的回掉

471
00:26:10,800 --> 00:26:13,066
我们可以调用他的另外一个URL

472
00:26:13,066 --> 00:26:14,999
叫做全下面这个

473
00:26:15,733 --> 00:26:18,399
写的这个URL用Alt trade number

474
00:26:18,466 --> 00:26:18,933
Alt trade number

475
00:26:18,933 --> 00:26:20,466
其实是我们最开始传过去的那个值

476
00:26:20,466 --> 00:26:23,199
去主动查询这样的一个支付

477
00:26:24,100 --> 00:26:25,500
是否有完成了

478
00:26:26,133 --> 00:26:29,699
这样获得这个支付是成功了还是失败

479
00:26:29,966 --> 00:26:31,366
的这样的一个东西

480
00:26:31,700 --> 00:26:32,366
所以

481
00:26:32,366 --> 00:26:35,499
这样的一个需求就是通过支付宝

482
00:26:35,566 --> 00:26:36,533
的这样一个需求

483
00:26:36,533 --> 00:26:38,999
你需要把支付宝的支付的文档

484
00:26:39,666 --> 00:26:40,966
去仔仔细细的看清楚

485
00:26:40,966 --> 00:26:43,466
去了解里头每一个参数要传什么

486
00:26:43,533 --> 00:26:45,499
以及这些参数的含义是什么

487
00:26:45,766 --> 00:26:48,333
然后把他需要的参数传过去

488
00:26:49,000 --> 00:26:51,900
来得到我们所要的结果

489
00:26:51,900 --> 00:26:53,866
就是通过支付宝来支付

490
00:26:55,900 --> 00:26:57,966
另外一个途径我们要通过微信来支付

491
00:26:57,966 --> 00:26:58,766
两张图一看

492
00:26:58,766 --> 00:26:59,566
大家知道

493
00:26:59,566 --> 00:27:00,933
微信支付的逻辑

494
00:27:00,933 --> 00:27:02,899
跟支付宝的逻辑是完全不一样的

495
00:27:03,900 --> 00:27:05,000
支付宝的逻辑我们刚才说了

496
00:27:05,000 --> 00:27:06,666
其实很简单就是把

497
00:27:08,100 --> 00:27:10,133
单号要支付多少钱

498
00:27:10,533 --> 00:27:13,399
然后多少时间内要完成支付

499
00:27:13,400 --> 00:27:15,800
以及回掉的URL传过去给他

500
00:27:15,933 --> 00:27:17,866
为什么没有传支付到哪个账号

501
00:27:18,133 --> 00:27:21,866
因为账号是这个调用的这个公共参

502
00:27:21,866 --> 00:27:24,199
数里头他已经把自己的账号传过去了

503
00:27:24,566 --> 00:27:26,299
所以那个是有加了密的

504
00:27:26,333 --> 00:27:27,333
就是你调用的时候

505
00:27:27,333 --> 00:27:28,799
他就知道是谁调用的

506
00:27:28,933 --> 00:27:31,766
所以当我去说要付多少钱

507
00:27:31,933 --> 00:27:33,366
付到哪个单号上

508
00:27:35,000 --> 00:27:35,700
给他的时候

509
00:27:35,700 --> 00:27:36,400
他就会知道

510
00:27:36,400 --> 00:27:38,666
说这笔钱应该是付给谁的啊

511
00:27:38,666 --> 00:27:40,466
所以他是在公共场所中间有的

512
00:27:40,933 --> 00:27:42,899
在微信中间同样也是

513
00:27:42,900 --> 00:27:44,933
但是他的做法是不一样的

514
00:27:45,500 --> 00:27:48,466
当我的顾客要做一次支付的时候

515
00:27:48,466 --> 00:27:49,199
大家可以看到

516
00:27:49,200 --> 00:27:51,966
他不是直接去掉微信的平台

517
00:27:52,800 --> 00:27:57,566
而是需要先调我们的做的支付的模块

518
00:27:57,766 --> 00:28:01,566
我们的支付模块把他调过来的内容

519
00:28:01,566 --> 00:28:02,266
传过来的内容

520
00:28:02,266 --> 00:28:04,366
比如说他的autotrain number

521
00:28:04,366 --> 00:28:07,799
它的单号时间和支付的钱数

522
00:28:08,466 --> 00:28:10,499
去主动调微信的一个API

523
00:28:10,566 --> 00:28:11,399
这个微信的API

524
00:28:11,400 --> 00:28:13,100
同样我们在后面也列出来了

525
00:28:13,100 --> 00:28:15,266
它的UIL大家自己去看啊

526
00:28:15,800 --> 00:28:17,333
调这个微信的API

527
00:28:18,266 --> 00:28:19,766
去把这个钱数

528
00:28:20,166 --> 00:28:22,133
单号时间

529
00:28:22,900 --> 00:28:24,666
和老铁牌UR看到很像

530
00:28:25,133 --> 00:28:27,399
去调用微信支付

531
00:28:27,900 --> 00:28:31,466
调用微信支付以后他会返回一个ID

532
00:28:32,666 --> 00:28:34,066
会返回一个ID

533
00:28:34,066 --> 00:28:36,999
然后你要把这个ID返回给前端

534
00:28:37,733 --> 00:28:41,533
前端用这个ID去呼叫微信支付

535
00:28:41,533 --> 00:28:42,999
去调取微信支付

536
00:28:43,266 --> 00:28:44,533
这时候他去调的时候

537
00:28:44,533 --> 00:28:46,399
他把这个ID作为参数过去调的时候

538
00:28:46,400 --> 00:28:48,766
他的不再需要传过去他的

539
00:28:48,933 --> 00:28:51,733
afternoon number amount和time了

540
00:28:52,166 --> 00:28:55,499
因为其实用它传唤了这个prepaid ID

541
00:28:55,733 --> 00:28:57,566
在微信的支付平台上呢

542
00:28:57,566 --> 00:28:59,966
就已经能够找到应该付多少钱

543
00:29:00,300 --> 00:29:02,266
毁掉的URL是什么

544
00:29:02,466 --> 00:29:05,099
所以他只他用这个prepaid ID

545
00:29:05,100 --> 00:29:06,700
去调微信支付

546
00:29:06,866 --> 00:29:09,799
那同样的微信支付如果成功了

547
00:29:09,966 --> 00:29:10,933
或者失败了

548
00:29:10,933 --> 00:29:11,966
会毁掉

549
00:29:12,600 --> 00:29:15,066
我们的支付平台如

550
00:29:15,066 --> 00:29:17,599
果我们在一定时间内没有收到

551
00:29:18,933 --> 00:29:20,866
这个回调的结果

552
00:29:20,966 --> 00:29:22,966
我们会主动去调

553
00:29:23,600 --> 00:29:24,400
他的

554
00:29:26,100 --> 00:29:26,966
查询函数

555
00:29:26,966 --> 00:29:29,533
去获得这个支付是成功还是失败

556
00:29:29,900 --> 00:29:32,000
如果主动去掉

557
00:29:32,566 --> 00:29:33,699
或者说回掉

558
00:29:33,700 --> 00:29:37,966
告诉我们说这个支付是失败的

559
00:29:38,566 --> 00:29:40,366
微信比支付宝还多一步

560
00:29:40,366 --> 00:29:42,733
还需要调查一个API去close

561
00:29:43,166 --> 00:29:45,299
最开始创建的那个全sax信

562
00:29:45,666 --> 00:29:47,066
因为他前面多了一步

563
00:29:47,133 --> 00:29:48,199
尾巴就多了一步

564
00:29:48,566 --> 00:29:51,666
在支付之前先要去创建一个transaction

565
00:29:51,966 --> 00:29:54,899
返回一个prepare ID用prepare ID去支付

566
00:29:55,100 --> 00:29:56,466
所以在支付完成以后

567
00:29:56,466 --> 00:29:58,266
如果这个支付是不成功的

568
00:29:58,400 --> 00:30:00,200
还要去close那个transaction

569
00:30:01,000 --> 00:30:02,000
这个意味着什么呢

570
00:30:02,000 --> 00:30:02,800
意味着说

571
00:30:03,066 --> 00:30:05,099
呃如果他没有coach这个权限性的话

572
00:30:05,100 --> 00:30:07,666
这个prepare ID可以再次支付

573
00:30:07,766 --> 00:30:08,799
就他没有支付成功

574
00:30:08,800 --> 00:30:09,766
他支付失败了

575
00:30:09,800 --> 00:30:11,400
你可以二次支付

576
00:30:11,566 --> 00:30:12,899
但是对于微信

577
00:30:12,900 --> 00:30:16,066
对于支付宝来说是不允许的啊

578
00:30:16,366 --> 00:30:18,066
因为支付宝没有这样一个过程

579
00:30:18,066 --> 00:30:19,866
但是微信是有的啊

580
00:30:19,866 --> 00:30:20,699
微信是有的

581
00:30:21,166 --> 00:30:23,366
这个需求从哪

582
00:30:23,933 --> 00:30:25,099
这个需求怎么整出来的

583
00:30:25,100 --> 00:30:27,866
就是你一行一行的去读

584
00:30:28,733 --> 00:30:30,466
微信的文档

585
00:30:31,200 --> 00:30:34,266
必须要把它每一个API去把它读懂

586
00:30:34,466 --> 00:30:36,533
我们去年在做这个东西的时候

587
00:30:37,466 --> 00:30:40,666
两个平台各自提供了十几个API

588
00:30:40,666 --> 00:30:41,566
我们要用的

589
00:30:42,100 --> 00:30:44,766
所以基本上三四十份文档

590
00:30:44,766 --> 00:30:45,966
我们只做了两个平台

591
00:30:45,966 --> 00:30:48,666
三四十份文档是全部去读过一遍

592
00:30:49,066 --> 00:30:49,866
然后才能写出

593
00:30:49,866 --> 00:30:50,699
这样的需求

594
00:30:51,066 --> 00:30:54,166
对于支付模块来说非常特别

595
00:30:54,266 --> 00:30:57,366
为啥呢因为他本身的业务很简单

596
00:30:57,766 --> 00:30:58,799
他复杂淡了

597
00:30:59,733 --> 00:31:02,933
复杂贷他要去使用辅助差参与者

598
00:31:03,166 --> 00:31:06,266
所以做支付模块的需求

599
00:31:06,700 --> 00:31:10,266
花了非常多的时间和精力去通读

600
00:31:11,266 --> 00:31:11,799
微信

601
00:31:11,800 --> 00:31:15,500
支付和支付宝的API到底是怎样做的

602
00:31:15,500 --> 00:31:18,933
你才可能确定说我们的支付模块里

603
00:31:19,100 --> 00:31:19,900
要怎么做

604
00:31:20,333 --> 00:31:24,266
大家会发现说在做系统顺序图的时候

605
00:31:24,466 --> 00:31:26,733
这个看起来不太像我们传

606
00:31:26,733 --> 00:31:28,699
统意义上头的需求分析

607
00:31:29,200 --> 00:31:31,266
我们传统意义上的需求分析

608
00:31:31,466 --> 00:31:33,699
是去找用户去沟通

609
00:31:33,733 --> 00:31:36,733
去了解去发现他的意图

610
00:31:36,766 --> 00:31:39,799
然后来用用力去描述他的意图的

611
00:31:40,566 --> 00:31:42,866
当我们要去做一张系统顺序图的时候

612
00:31:43,066 --> 00:31:45,733
很大的原因是因为我们有辅助参与者

613
00:31:45,933 --> 00:31:47,966
而辅助参与者所提供的能力

614
00:31:47,966 --> 00:31:50,299
是通过他的技术文档来表现的

615
00:31:50,800 --> 00:31:52,500
所以在做这部分需求的时候

616
00:31:52,500 --> 00:31:54,466
你不是找用户去沟通

617
00:31:54,666 --> 00:31:58,366
而是去研读你要集成系统的技术文档

618
00:31:58,666 --> 00:32:00,733
去看他提供了什么样的能力

619
00:32:00,900 --> 00:32:02,666
然后根据用户的需求

620
00:32:02,666 --> 00:32:05,566
在不同的地方使用他的不同能力

621
00:32:05,566 --> 00:32:08,199
按照他的要求把他的信息传过去

622
00:32:08,466 --> 00:32:10,266
这是因为他需要传这些信息

623
00:32:10,266 --> 00:32:11,966
所以你转而又向

624
00:32:12,533 --> 00:32:14,933
用户去问说这些信息从何而来

625
00:32:15,666 --> 00:32:16,533
怎么获得

626
00:32:16,766 --> 00:32:19,133
才能去给我们的辅助参与者

627
00:32:19,366 --> 00:32:21,066
提供他所要的

628
00:32:21,333 --> 00:32:22,199
信息需求

629
00:32:22,900 --> 00:32:24,666
对啊所以是这样的一个过程啊

630
00:32:25,000 --> 00:32:27,200
这也是在需求费用中间很重要的一步

631
00:32:27,200 --> 00:32:28,400
特别是

632
00:32:29,166 --> 00:32:32,466
当你的那个部分有辅助参与者的时候

633
00:32:32,466 --> 00:32:33,699
这就变得很复杂

634
00:32:34,100 --> 00:32:35,700
我们在整个课程设计中间

635
00:32:35,700 --> 00:32:37,100
其实是有两块

636
00:32:37,800 --> 00:32:39,366
大的是有辅助创业者

637
00:32:39,366 --> 00:32:40,866
大家应该知道一个是支付

638
00:32:41,266 --> 00:32:42,166
一个是物流

639
00:32:42,166 --> 00:32:44,399
那去年我们两块都做了

640
00:32:45,466 --> 00:32:46,399
支付部分是b

641
00:32:46,400 --> 00:32:46,966
总模块

642
00:32:46,966 --> 00:32:49,366
是由所有的同学协力来完成的

643
00:32:49,366 --> 00:32:51,999
大概有十来个同学参与到其中

644
00:32:52,666 --> 00:32:53,333
啊

645
00:32:53,333 --> 00:32:56,766
物流模块是选做的我们要求支持顺丰

646
00:32:57,300 --> 00:32:59,366
中通和急突出地

647
00:33:00,000 --> 00:33:03,766
所以这三个平台的API是要去读的啊

648
00:33:03,766 --> 00:33:04,666
是要去读的

649
00:33:04,766 --> 00:33:08,733
所以选做模块去选做物流部分的同学

650
00:33:08,966 --> 00:33:09,533
你要知道

651
00:33:09,533 --> 00:33:10,666
你的需求分析中间

652
00:33:10,666 --> 00:33:12,799
其实有很大的一部分是需要去通

653
00:33:12,800 --> 00:33:14,566
读那三个文档的啊

654
00:33:14,566 --> 00:33:15,699
通读那三个文档

655
00:33:18,300 --> 00:33:22,300
这是他的API对应的文档是什么

656
00:33:24,600 --> 00:33:26,166
是这是系统顺序图啊

657
00:33:26,166 --> 00:33:26,999
大家应该知道

658
00:33:27,000 --> 00:33:30,000
系统顺序图用来描述说人和系统

659
00:33:30,133 --> 00:33:33,666
系统和辅助参与者之间的

660
00:33:33,966 --> 00:33:36,499
信息和行为需求啊

661
00:33:36,500 --> 00:33:37,300
所以

662
00:33:37,733 --> 00:33:40,666
在用力中间如果涉及到辅助参与者

663
00:33:40,666 --> 00:33:43,666
都需要用系统顺序图去把它描述出来

664
00:33:43,733 --> 00:33:46,566
这个描述的过程就是你理清楚说

665
00:33:46,600 --> 00:33:47,900
我们的辅助参与者

666
00:33:47,900 --> 00:33:49,466
提供了一个什么能力

667
00:33:49,533 --> 00:33:52,666
能帮助你说实现用户的这个需求

668
00:33:54,933 --> 00:33:55,766
这是第一个

669
00:33:56,266 --> 00:33:58,299
第二个是业务流程

670
00:33:58,566 --> 00:34:00,599
我们前面在做用力分析的时候

671
00:34:00,600 --> 00:34:03,566
我们可以看到我们是找到主参与者

672
00:34:03,900 --> 00:34:05,500
确定他的目标是什么

673
00:34:05,600 --> 00:34:09,166
然后用用力去描述他的目标文字啊

674
00:34:09,166 --> 00:34:11,799
去描述如何去实现他的目标

675
00:34:12,166 --> 00:34:13,999
中间如果涉及到辅助参与者

676
00:34:14,000 --> 00:34:16,700
就需要用系统顺序图去描述说

677
00:34:17,266 --> 00:34:20,266
辅助参与者是如何支撑这个目标的

678
00:34:21,333 --> 00:34:24,566
这些东西你会发现全是零散的

679
00:34:24,933 --> 00:34:26,733
我们在说一个个目标的时候

680
00:34:26,733 --> 00:34:28,066
全是零散的

681
00:34:28,266 --> 00:34:29,399
但是大家知道

682
00:34:29,466 --> 00:34:32,066
在一个企业里头或者任何一个系统

683
00:34:32,200 --> 00:34:34,200
这些零散的活动

684
00:34:34,466 --> 00:34:37,899
是有一定的先后顺序和关系的

685
00:34:38,600 --> 00:34:39,733
那我们讲到现在为止

686
00:34:39,733 --> 00:34:42,599
我们一直没讲说你用一个什么样的

687
00:34:43,133 --> 00:34:46,566
东西去把这些活动之间的关系

688
00:34:46,900 --> 00:34:47,966
去把它描述出来

689
00:34:47,966 --> 00:34:50,466
这就是我们说的业务流程建模

690
00:34:50,600 --> 00:34:52,600
或者叫做啊

691
00:34:52,933 --> 00:34:53,999
流程建模

692
00:34:55,266 --> 00:34:58,333
我们在业务流程建模这一部分

693
00:34:58,333 --> 00:34:59,966
用到的是UML中间

694
00:34:59,966 --> 00:35:03,666
的活动图叫做activity diagram

695
00:35:13,566 --> 00:35:16,733
我们用活动图来作为工具去描述

696
00:35:17,566 --> 00:35:18,966
业务流程的建模

697
00:35:19,333 --> 00:35:22,133
那如果用活动图去描述的话

698
00:35:22,133 --> 00:35:27,566
我们中间的每一个最基本的单位就是

699
00:35:29,466 --> 00:35:30,333
一个活动

700
00:35:31,733 --> 00:35:34,466
最基本的单位就是一个活动

701
00:35:35,566 --> 00:35:39,566
用连线把这些活动串起来

702
00:35:39,800 --> 00:35:43,666
用来表述说这些活动之间的关系啊

703
00:35:43,666 --> 00:35:45,133
这些活动之间的关系

704
00:35:45,900 --> 00:35:47,566
我在这里给大家画了一张

705
00:35:47,900 --> 00:35:50,400
我们电商系统的

706
00:35:50,766 --> 00:35:52,066
业务流程图

707
00:35:53,000 --> 00:35:55,200
电商系统的业务流程图

708
00:35:55,200 --> 00:35:57,333
大家可以看到我们的

709
00:35:57,733 --> 00:35:59,933
两个组参与者

710
00:36:01,466 --> 00:36:03,099
顾客和商户

711
00:36:05,100 --> 00:36:07,200
还有一个人不是辅助参与者

712
00:36:07,733 --> 00:36:10,899
是物流公司啊是物流公司

713
00:36:12,333 --> 00:36:15,699
这三者之间他是怎样协作

714
00:36:16,000 --> 00:36:19,066
来完成我们的一个订单

715
00:36:19,566 --> 00:36:20,366
的配送的

716
00:36:20,366 --> 00:36:22,566
从你购买到订单的配送的

717
00:36:23,366 --> 00:36:25,299
我们在这里大家可以看到

718
00:36:25,733 --> 00:36:27,899
我们最基本的单位就是活动

719
00:36:27,900 --> 00:36:30,966
就是用这个符号各各种颜色标的啊

720
00:36:31,200 --> 00:36:33,300
多种颜色标的其实都是活动

721
00:36:34,300 --> 00:36:35,766
那这些活动

722
00:36:35,966 --> 00:36:39,199
是业务流程图或者活动图里头最

723
00:36:39,200 --> 00:36:40,300
基本的单位

724
00:36:40,400 --> 00:36:43,200
我们用连线把这些活动连接起来

725
00:36:43,200 --> 00:36:46,266
表示说这些活动之间是有先后顺序

726
00:36:46,966 --> 00:36:48,533
当然连线上面我们可以看到

727
00:36:48,533 --> 00:36:49,866
我们放了一些方

728
00:36:49,900 --> 00:36:50,800
形的这个东西

729
00:36:50,800 --> 00:36:51,800
这个东西是什么呢

730
00:36:51,900 --> 00:36:54,466
这个东西叫做object loads

731
00:37:03,666 --> 00:37:06,599
object loss叫做对象节点

732
00:37:07,266 --> 00:37:09,699
对象节点用来表述说

733
00:37:09,700 --> 00:37:12,866
我们在活动之间传递的数据

734
00:37:12,933 --> 00:37:14,599
可以有也可以没有

735
00:37:15,000 --> 00:37:16,866
通常我们用了对象节点

736
00:37:16,866 --> 00:37:18,266
就是我们想表述说

737
00:37:18,266 --> 00:37:19,666
一个活动做完了以后

738
00:37:19,866 --> 00:37:21,333
他会产生一个数据

739
00:37:21,533 --> 00:37:23,066
或者一个实体的东西

740
00:37:23,266 --> 00:37:24,399
而这个实体的东西呢

741
00:37:24,400 --> 00:37:26,366
会传递给后面那个活动

742
00:37:26,366 --> 00:37:28,766
我们想表述这样的一个含义

743
00:37:28,900 --> 00:37:30,966
所以在中间加上了这些

744
00:37:31,866 --> 00:37:33,899
object load对象节点

745
00:37:34,366 --> 00:37:35,466
然后连线

746
00:37:35,466 --> 00:37:38,333
大家可以看到除了简单的直接连接

747
00:37:38,700 --> 00:37:40,600
一个两个活动之间

748
00:37:40,866 --> 00:37:42,766
或者说通过对象节点

749
00:37:42,766 --> 00:37:44,799
连接两个活动之间以外

750
00:37:44,900 --> 00:37:46,533
还有一些别的符号

751
00:37:46,533 --> 00:37:48,499
比如说大家可以看到了这个符号

752
00:37:49,066 --> 00:37:51,666
这个应该很好判断他是一个decision note

753
00:37:51,700 --> 00:37:53,300
就是一个判断节点

754
00:37:53,500 --> 00:37:55,466
就是当一个活动做完了以后

755
00:37:55,466 --> 00:37:56,766
他会有一个结果

756
00:37:57,266 --> 00:37:59,499
这个结果如果是这样的呢就往那边走

757
00:37:59,500 --> 00:38:01,566
如果是另外一个结果呢就往那边走

758
00:38:01,566 --> 00:38:03,533
当然不止可以不止是两个

759
00:38:03,700 --> 00:38:05,866
有3个4个5个都可以啊

760
00:38:05,866 --> 00:38:08,066
这个decision note不止两个的

761
00:38:08,466 --> 00:38:09,333
我们来看一下啊

762
00:38:09,333 --> 00:38:11,566
把这些东西讲完了以后我们来看一下

763
00:38:11,800 --> 00:38:14,800
这张图上头所描述的内容是什么

764
00:38:15,933 --> 00:38:17,799
这张图上的所描述的是

765
00:38:17,800 --> 00:38:19,700
顾客购买了商品

766
00:38:20,533 --> 00:38:22,933
购买商品以后他就会产生一个订单

767
00:38:23,566 --> 00:38:25,566
那这个订单会要需要支付

768
00:38:26,666 --> 00:38:27,966
支付完成以后

769
00:38:27,966 --> 00:38:30,133
他就是一个已经支付完成的订单

770
00:38:30,566 --> 00:38:32,333
是吧已经支付完成的订单

771
00:38:32,500 --> 00:38:34,133
而这个支付完成订单呢

772
00:38:34,133 --> 00:38:37,566
会给商户去确认订单

773
00:38:38,266 --> 00:38:41,099
他接收用户已商户啊

774
00:38:41,100 --> 00:38:42,700
顾客已经支付的一个订单

775
00:38:43,000 --> 00:38:45,566
如果说商户确认了这个订单以后

776
00:38:45,566 --> 00:38:47,533
他就会产生一个物流的面单

777
00:38:47,533 --> 00:38:48,699
物流面单是什么

778
00:38:48,866 --> 00:38:49,699
就大家可以看到

779
00:38:49,700 --> 00:38:52,266
在包裹表面上贴的那张纸

780
00:38:52,900 --> 00:38:54,400
你要走不同的物流公司

781
00:38:54,400 --> 00:38:57,600
他就会打出不同的物流公司的面单

782
00:38:57,733 --> 00:38:58,566
顺丰的

783
00:38:59,000 --> 00:39:02,600
企图书递的中通的是先有这张面单啊

784
00:39:03,533 --> 00:39:05,533
这张面单上头其实会

785
00:39:05,666 --> 00:39:07,599
写说你有什么货啊

786
00:39:07,600 --> 00:39:09,000
简单的会写是什么货

787
00:39:09,000 --> 00:39:10,066
但有些时候

788
00:39:10,400 --> 00:39:12,666
有些时候发的货是那种

789
00:39:12,666 --> 00:39:14,399
要保护个人隐私的

790
00:39:14,700 --> 00:39:16,666
那他就会在除了面单

791
00:39:16,666 --> 00:39:19,299
以外再出一个物品的清单

792
00:39:19,300 --> 00:39:20,533
这个要看啊

793
00:39:20,566 --> 00:39:22,333
如果不是很care

794
00:39:22,800 --> 00:39:23,600
那个

795
00:39:23,600 --> 00:39:26,933
就是不是很关注这个客户的隐私的话

796
00:39:27,100 --> 00:39:28,000
他往往就会把

797
00:39:28,000 --> 00:39:29,600
商品打在那个物流面单上

798
00:39:29,600 --> 00:39:31,200
这大家应该都有经验啊

799
00:39:31,600 --> 00:39:33,366
啊这个要看啊物流面单

800
00:39:33,366 --> 00:39:34,866
或者打一个物品的清单

801
00:39:35,066 --> 00:39:38,266
那这个物流面单和清单给谁呢

802
00:39:39,400 --> 00:39:42,066
给仓管员去检货了

803
00:39:42,066 --> 00:39:43,199
但是我这里没化

804
00:39:43,766 --> 00:39:44,733
为啥我没化

805
00:39:45,800 --> 00:39:47,133
你要化也可以

806
00:39:47,133 --> 00:39:49,599
因为那个不在我们的边界范围之内

807
00:39:50,066 --> 00:39:52,566
是吧所以中间其实缺失了一点

808
00:39:52,566 --> 00:39:54,733
就是拉到这个物流面单以后

809
00:39:54,733 --> 00:39:55,899
其实要去检货

810
00:39:57,000 --> 00:40:00,333
检货完成以后就形成了一个什么了

811
00:40:00,800 --> 00:40:02,366
就形成了一个包裹

812
00:40:03,000 --> 00:40:06,200
就是检货完成装到盒子里头

813
00:40:06,200 --> 00:40:08,333
把面单贴在表面上

814
00:40:08,333 --> 00:40:09,799
把清单放到盒子里

815
00:40:09,933 --> 00:40:10,999
就形成了一个包裹

816
00:40:11,166 --> 00:40:12,199
而这个包裹呢

817
00:40:12,200 --> 00:40:14,200
是在要通过我们的

818
00:40:14,200 --> 00:40:17,400
电商的商户去做发货的确认的

819
00:40:17,866 --> 00:40:20,399
说这个包裹他是要发货了

820
00:40:20,900 --> 00:40:22,466
发货的时候啊

821
00:40:23,333 --> 00:40:24,333
发货了以后

822
00:40:24,333 --> 00:40:25,966
然后物流公司会到我这里来

823
00:40:25,966 --> 00:40:27,099
取这个包裹

824
00:40:27,200 --> 00:40:28,733
就是我说要发货了

825
00:40:28,933 --> 00:40:30,333
物流公司才会来取啊

826
00:40:30,333 --> 00:40:31,266
我不说发货

827
00:40:31,266 --> 00:40:33,366
物流公司就不会来取这个包裹

828
00:40:33,600 --> 00:40:36,933
所以物流公司是根据我的发货的这个

829
00:40:37,700 --> 00:40:39,200
这个动作

830
00:40:39,700 --> 00:40:41,866
来取这个指定的包裹

831
00:40:42,300 --> 00:40:43,200
取了包裹以后

832
00:40:43,200 --> 00:40:44,466
他要进入到他的配送过程

833
00:40:44,466 --> 00:40:45,333
配送过程很复杂

834
00:40:45,800 --> 00:40:47,466
我们也只画了一个活动

835
00:40:47,733 --> 00:40:50,066
然后如果配送的话就会有两个结果

836
00:40:50,066 --> 00:40:52,066
一个是配送成功一个是配送失败

837
00:40:52,400 --> 00:40:55,166
配送失败是要么是查无此人

838
00:40:55,266 --> 00:40:57,966
要么就是接受的人退货

839
00:40:58,333 --> 00:40:59,699
所以说就会配送失败

840
00:40:59,900 --> 00:41:00,133
配

841
00:41:00,133 --> 00:41:02,299
送失败就涉及到一个售后收件的问题

842
00:41:02,300 --> 00:41:05,533
因为这个东西还都返回到商户这里

843
00:41:06,066 --> 00:41:06,733
商户又需

844
00:41:06,733 --> 00:41:09,666
要把这个东西给重新收回来对吧

845
00:41:09,666 --> 00:41:11,133
如果说是完好无损的话嘛

846
00:41:11,133 --> 00:41:13,399
他又重新放到仓库里去

847
00:41:13,400 --> 00:41:14,500
然后再接着卖

848
00:41:14,566 --> 00:41:16,066
如果说是有损的话

849
00:41:16,066 --> 00:41:17,466
那他就要做暴损处理

850
00:41:17,466 --> 00:41:20,133
看损失怎么去估算

851
00:41:20,400 --> 00:41:23,300
如果配送成功的话这个就结束了

852
00:41:23,966 --> 00:41:24,966
这个就结束了

853
00:41:25,733 --> 00:41:27,133
就是这条线啊

854
00:41:27,133 --> 00:41:29,466
就这条蓝的加上这条黄的这条线

855
00:41:29,466 --> 00:41:30,466
但大家知道

856
00:41:30,466 --> 00:41:31,933
那边其实还有另外一个问题

857
00:41:31,933 --> 00:41:33,166
就是支付的时候

858
00:41:33,166 --> 00:41:35,199
我们知道我们是不可控的

859
00:41:35,466 --> 00:41:38,599
因为到了微信和支付宝的平台去支付

860
00:41:38,966 --> 00:41:40,533
所以这时候就会有一个问题

861
00:41:40,533 --> 00:41:42,566
我们其实刚才在那张系统生意图

862
00:41:42,566 --> 00:41:43,499
您看到了

863
00:41:43,766 --> 00:41:47,166
我们会定期去查这个支付的情况

864
00:41:47,600 --> 00:41:49,600
就是如果我们没有主动收到

865
00:41:49,600 --> 00:41:51,933
他支付成功或者支付失败的

866
00:41:52,166 --> 00:41:52,999
结果的话

867
00:41:53,000 --> 00:41:56,666
我们会主动去查那个支付的情况

868
00:41:57,066 --> 00:41:58,733
那怎么去表述这个过程呢

869
00:41:59,366 --> 00:42:00,366
我们用那个符号

870
00:42:00,366 --> 00:42:01,899
大家看到那个8字符号

871
00:42:01,900 --> 00:42:03,333
表示一个定时符号

872
00:42:03,600 --> 00:42:07,000
这表示我们每隔30分钟会检查一下

873
00:42:07,333 --> 00:42:09,599
这个支付单是否有支付成功了

874
00:42:09,600 --> 00:42:11,300
这个订单是否有支付成功了

875
00:42:11,600 --> 00:42:14,900
如果支付成功的话他就会去确认订单

876
00:42:15,466 --> 00:42:17,399
就到了确认订单的这个部分

877
00:42:17,566 --> 00:42:19,733
如果说他没有支付成功

878
00:42:19,733 --> 00:42:21,299
就把订单取消掉

879
00:42:22,000 --> 00:42:23,200
取消订单

880
00:42:25,100 --> 00:42:26,600
然后这个订单就结束了

881
00:42:26,700 --> 00:42:28,933
我在这里用不同的颜色去描

882
00:42:28,933 --> 00:42:29,899
述这个活动

883
00:42:29,900 --> 00:42:32,166
为啥因为我们可以看到活动

884
00:42:32,766 --> 00:42:35,466
其实是相对比较灵活的

885
00:42:35,466 --> 00:42:37,699
你可以用活动描述很多的东西

886
00:42:38,100 --> 00:42:39,966
那我个人的习惯啊

887
00:42:39,966 --> 00:42:41,499
这只能说我个人的习惯

888
00:42:41,500 --> 00:42:43,200
我个人的习惯会

889
00:42:43,900 --> 00:42:44,866
把用力

890
00:42:45,100 --> 00:42:48,800
作为我用活动描述的主要的单位

891
00:42:49,500 --> 00:42:50,400
因为我们刚才说了

892
00:42:50,400 --> 00:42:52,866
用力描述的是用户的目标

893
00:42:53,300 --> 00:42:55,733
但是一个个的目标全是零碎的

894
00:42:56,166 --> 00:42:58,066
所以我们需要用这样的

895
00:42:58,100 --> 00:42:59,900
这样一张活动图

896
00:43:00,333 --> 00:43:03,566
把用户的所有的目标给它串起来

897
00:43:04,166 --> 00:43:06,066
把用户的目标给他串起来

898
00:43:06,466 --> 00:43:07,899
这个是第一

899
00:43:08,266 --> 00:43:10,999
但是当你把用户的目标串起来的时候

900
00:43:11,000 --> 00:43:14,600
你会发现说有些活动是不在

901
00:43:15,266 --> 00:43:16,199
这个范围内的

902
00:43:16,266 --> 00:43:18,199
比如说我们可以看到物流公司的配送

903
00:43:18,200 --> 00:43:18,600
这一块

904
00:43:18,600 --> 00:43:21,000
是完全不在我们的系统边界之外

905
00:43:21,133 --> 00:43:21,799
之类的

906
00:43:21,800 --> 00:43:24,466
其实这中间还有我没有把它化啊

907
00:43:24,566 --> 00:43:26,333
我之后客户把它补全

908
00:43:26,566 --> 00:43:28,333
中间会有一个减货的活动

909
00:43:28,333 --> 00:43:30,299
也不在我们的

910
00:43:31,600 --> 00:43:32,600
系统边界之类

911
00:43:33,100 --> 00:43:36,566
所以这些不在系统边界之类的活动

912
00:43:36,900 --> 00:43:37,966
也需要画出来

913
00:43:37,966 --> 00:43:39,999
因为这些活动才能把我们

914
00:43:40,366 --> 00:43:42,566
整个的这些目标给它串起来

915
00:43:42,566 --> 00:43:44,133
有在我们边界之类的

916
00:43:44,133 --> 00:43:45,666
有不在我们边界之类

917
00:43:45,866 --> 00:43:47,466
那我用黄色来表示

918
00:43:47,466 --> 00:43:49,299
说在系统范围之外的活动

919
00:43:49,300 --> 00:43:51,300
也就是我们不需要去做的那些活动

920
00:43:51,966 --> 00:43:52,766
然后呢

921
00:43:53,300 --> 00:43:55,533
还有一类活动呢其实不是用力

922
00:43:55,566 --> 00:43:57,566
比如说检查支付状态

923
00:43:58,333 --> 00:44:01,166
啊系统自动去取消订单

924
00:44:01,533 --> 00:44:03,333
这个取消订单不是说

925
00:44:03,333 --> 00:44:05,066
用户从界面上取消订单

926
00:44:05,066 --> 00:44:06,333
而是系统内部

927
00:44:06,700 --> 00:44:07,966
支付失败以后

928
00:44:07,966 --> 00:44:09,999
他去做的一个取消订单的动作

929
00:44:10,366 --> 00:44:11,999
这两个东西都不是用力

930
00:44:12,666 --> 00:44:14,266
但是他描述的是什么呢

931
00:44:14,266 --> 00:44:16,499
描述的是系统内部的行为

932
00:44:16,733 --> 00:44:20,133
所以你如果觉得单纯用用力

933
00:44:20,500 --> 00:44:24,366
单纯用系统活动范围之外的

934
00:44:24,366 --> 00:44:26,099
就系统外的活动

935
00:44:26,766 --> 00:44:28,966
不能完整的描述这个流程

936
00:44:28,966 --> 00:44:29,966
一定要加一点

937
00:44:29,966 --> 00:44:32,166
系统内部所做的事情的话

938
00:44:32,366 --> 00:44:34,399
那你再用另外一个颜色

939
00:44:34,400 --> 00:44:35,866
去标示出那个活动

940
00:44:36,700 --> 00:44:38,700
因为我们可以用颜色的

941
00:44:39,100 --> 00:44:42,400
所以这样的话看到一张五颜六色的

942
00:44:43,200 --> 00:44:46,100
活动图你就知道哪些活

943
00:44:46,100 --> 00:44:47,933
动是我用代码要写的

944
00:44:48,566 --> 00:44:50,166
用代码要写的活动是什么

945
00:44:51,200 --> 00:44:54,166
用代码要写的活动是我们的用力

946
00:44:55,166 --> 00:44:58,299
哪些是我们内部要写出来的

947
00:44:58,300 --> 00:44:59,966
但是他不一定是一个用力

948
00:44:59,966 --> 00:45:01,566
比如说我们看到红色的部分

949
00:45:02,000 --> 00:45:03,866
哪些是我们完全不需要管的

950
00:45:03,900 --> 00:45:05,100
比如说黄色的部分

951
00:45:05,300 --> 00:45:06,866
因为黄色的那些用力

952
00:45:07,000 --> 00:45:08,300
只是我们用来串

953
00:45:08,300 --> 00:45:10,366
起这个整个业务流程的

954
00:45:10,866 --> 00:45:11,733
一个东西

955
00:45:12,200 --> 00:45:13,000
这就是

956
00:45:13,900 --> 00:45:15,100
呃业务流程图

957
00:45:15,700 --> 00:45:17,200
当活动图

958
00:45:17,366 --> 00:45:19,099
其实还可以用来做很多其他的事情

959
00:45:19,100 --> 00:45:21,866
就是unmill的所有的图其实都是多用化

960
00:45:21,900 --> 00:45:23,400
我们刚才看到了系统顺序图

961
00:45:23,400 --> 00:45:24,400
用的是顺序图

962
00:45:24,566 --> 00:45:25,266
顺序图在后面

963
00:45:25,266 --> 00:45:27,466
还能用来做对象的行为建模

964
00:45:27,466 --> 00:45:28,799
就是动态建模

965
00:45:29,500 --> 00:45:30,666
啊活动图也是

966
00:45:30,800 --> 00:45:32,600
其实除了这个用途以外

967
00:45:33,500 --> 00:45:36,100
活动图还有很多其他的用途啊

968
00:45:36,100 --> 00:45:37,766
但是因为我们在讲课过程中间

969
00:45:37,766 --> 00:45:40,366
我们只给大家讲这一种啊

970
00:45:40,366 --> 00:45:43,099
所以先把这一种用活动图

971
00:45:43,533 --> 00:45:46,499
去描述业务流程这个事情把它

972
00:45:47,200 --> 00:45:48,766
掌握了然后

973
00:45:49,700 --> 00:45:54,800
把我们孤立的一个一个的用户的目标

974
00:45:54,900 --> 00:45:56,400
也就是用户的用力

975
00:45:56,900 --> 00:45:59,666
用活动图给他串起来啊

976
00:45:59,666 --> 00:46:00,899
串成一个流程

977
00:46:01,533 --> 00:46:03,866
这里头这些符号是有一定的名字的啊

978
00:46:03,866 --> 00:46:04,933
比如说这个东西

979
00:46:06,066 --> 00:46:06,866
这个东西

980
00:46:07,533 --> 00:46:08,166
就是三个

981
00:46:08,166 --> 00:46:09,166
这个东西叫做什么呢

982
00:46:09,166 --> 00:46:10,166
叫做泳道

983
00:46:10,766 --> 00:46:12,533
就是游泳池的泳道

984
00:46:13,500 --> 00:46:15,066
那个swimmer啊

985
00:46:15,066 --> 00:46:16,166
游泳池的泳道

986
00:46:16,466 --> 00:46:17,499
有了泳道以后

987
00:46:17,500 --> 00:46:19,333
你就会很清楚的看到说

988
00:46:19,333 --> 00:46:21,699
哪些活动是由谁来做

989
00:46:22,966 --> 00:46:24,866
啊永道不一定是参与者

990
00:46:24,866 --> 00:46:26,966
永道也可以是一个部门或者一个企业

991
00:46:26,966 --> 00:46:27,533
都可以

992
00:46:27,533 --> 00:46:30,399
比如说我们看到的这个物流公司

993
00:46:30,500 --> 00:46:32,766
对这个根本就不是我们的主操作人

994
00:46:32,766 --> 00:46:34,066
也不是我们的辅助操作人

995
00:46:34,066 --> 00:46:35,166
我们辅助人是物流

996
00:46:35,166 --> 00:46:37,166
系统而不是物流公司是吧

997
00:46:37,366 --> 00:46:38,799
所以永道的

998
00:46:38,800 --> 00:46:41,000
这个定义其实是相对比较灵活的

999
00:46:41,500 --> 00:46:42,133
用了永道

1000
00:46:42,133 --> 00:46:44,499
你就可以看到哪些活动是由谁做的

1001
00:46:44,500 --> 00:46:47,500
哪些活动是由啊

1002
00:46:47,566 --> 00:46:48,933
就是可以把活动给

1003
00:46:48,933 --> 00:46:50,799
把它分成不同的人去做

1004
00:46:50,800 --> 00:46:52,400
这样的话使得整个的

1005
00:46:52,600 --> 00:46:55,000
业务流程看得更加的清晰一些

1006
00:46:56,366 --> 00:46:59,533
这是业务流程图来有什么问题吗

1007
00:46:59,533 --> 00:47:00,333
这个

1008
00:47:04,066 --> 00:47:06,699
啊那没什么问题我们就稍微早点下课

1009
00:47:06,700 --> 00:47:08,266
下一堂课我们来讲

1010
00:47:08,966 --> 00:47:10,099
支付模块的案例

1011
00:47:10,100 --> 00:47:12,566
就是完整的把我们前面从用力图

1012
00:47:12,800 --> 00:47:14,100
到用力的描述

1013
00:47:14,100 --> 00:47:17,000
到系统顺序图到活动图啊这个部分看

1014
00:47:17,000 --> 00:47:19,333
在支付模块中也是怎么做的

1015
00:51:14,566 --> 00:51:15,933
就是如果说你不知道

1016
00:51:16,800 --> 00:51:18,300
别人做的好处和坏处

1017
00:51:18,300 --> 00:51:19,866
你是不知道在后面去纠正的

1018
00:51:20,000 --> 00:51:21,400
我们这个整个这个课程

1019
00:51:21,400 --> 00:51:22,533
都是这样的一个节奏

1020
00:51:22,533 --> 00:51:23,499
就是通过

1021
00:51:23,966 --> 00:51:28,099
讨论一部分先做的同学的这个东西

1022
00:51:28,166 --> 00:51:29,466
然后大家知道说

1023
00:51:30,266 --> 00:51:31,099
问题在哪

1024
00:51:31,266 --> 00:51:32,966
那我们对于作业的要求就是

1025
00:51:32,966 --> 00:51:34,666
如果在讨论课中间

1026
00:51:35,133 --> 00:51:37,799
有明确题出来这样做是不行的

1027
00:51:37,933 --> 00:51:39,766
你在作业中间还这样做

1028
00:51:40,133 --> 00:51:42,499
你的作业就最多只有3分啊

1029
00:51:42,500 --> 00:51:44,700
我这个先事先跟大家说清楚

1030
00:51:44,800 --> 00:51:45,966
就是你讨论课

1031
00:51:47,733 --> 00:51:48,966
嗯上面已经讲了

1032
00:51:49,133 --> 00:51:50,566
说这样做是不行的

1033
00:51:50,800 --> 00:51:52,966
然后你在作业里头又

1034
00:51:52,966 --> 00:51:54,666
重复犯了这个错误

1035
00:51:54,900 --> 00:51:55,800
那就不管

1036
00:51:56,300 --> 00:51:58,000
不管你这个

1037
00:51:59,166 --> 00:52:01,933
作业写的多的漂亮那都是3分啊

1038
00:52:01,933 --> 00:52:05,199
这就是这就是我们明确告知了说

1039
00:52:05,466 --> 00:52:07,099
学需求分析这样做是不行的

1040
00:52:07,766 --> 00:52:07,899
啊

1041
00:52:07,900 --> 00:52:11,333
特别是在UML图上面的格式化的要求

1042
00:52:11,333 --> 00:52:14,066
或者说在用力中间的格式化

1043
00:52:14,066 --> 00:52:14,933
就我们在

1044
00:52:15,300 --> 00:52:16,366
需求分析作业中间

1045
00:52:16,366 --> 00:52:17,499
其实主要就是

1046
00:52:17,766 --> 00:52:20,799
我们到目前为止所讲的内容

1047
00:52:21,300 --> 00:52:22,666
用力的定义

1048
00:52:22,933 --> 00:52:24,533
用力文字的描述

1049
00:52:25,366 --> 00:52:26,333
系统顺序图

1050
00:52:26,366 --> 00:52:28,266
什么时候该用什么时候不该用

1051
00:52:28,800 --> 00:52:29,933
业务流程图

1052
00:52:30,466 --> 00:52:31,399
就是活动图

1053
00:52:31,533 --> 00:52:36,766
讲到刚才达值的这个范围的内容啊

1054
00:52:37,100 --> 00:52:39,600
那这些东西最低级的错误就是你

1055
00:52:39,733 --> 00:52:41,799
在UML的图上的都画错了

1056
00:52:42,533 --> 00:52:44,599
那我就最多只会给你3分了

1057
00:52:46,100 --> 00:52:46,800
有问题吗

1058
00:52:46,800 --> 00:52:49,466
这个作业全部布置在了

1059
00:52:50,133 --> 00:52:51,099
国庆节之后

1060
00:52:51,500 --> 00:52:52,933
所以国庆节期间

1061
00:52:52,933 --> 00:52:54,666
大家是有足够多的时间

1062
00:52:54,666 --> 00:52:56,466
完成第一轮的作业的

1063
00:53:03,933 --> 00:53:05,333
好那我们来看一下

1064
00:53:05,333 --> 00:53:07,133
这份作业应该做成什么样子啊

1065
00:53:07,733 --> 00:53:08,666
我们这里

1066
00:53:09,366 --> 00:53:11,333
去年有做了一个完整的例子

1067
00:53:12,933 --> 00:53:13,733
就这个

1068
00:53:19,666 --> 00:53:21,366
支付模块的需求顾客说明书

1069
00:53:21,366 --> 00:53:22,966
当然这个里头内容还稍微多一点

1070
00:53:22,966 --> 00:53:25,399
今年我们把一些内容给他删掉了

1071
00:53:26,066 --> 00:53:27,666
比如说领域模型的部分

1072
00:53:27,666 --> 00:53:29,699
我们放到了盖要设计里去啊

1073
00:53:29,700 --> 00:53:32,100
所以今年就不会让教大家做领域模型

1074
00:53:34,133 --> 00:53:35,666
但是用力的定义

1075
00:53:37,166 --> 00:53:40,266
用力文字的描述需要的顺序图

1076
00:53:40,500 --> 00:53:41,866
参考的文献

1077
00:53:52,300 --> 00:53:53,500
以及活动图

1078
00:53:53,566 --> 00:53:55,566
那其他东西我没有写

1079
00:53:55,566 --> 00:53:57,933
为什么那是软工的要求

1080
00:53:58,500 --> 00:54:00,700
软工会要求后面这些东西啊

1081
00:54:01,066 --> 00:54:03,866
就是这份文档的格式是软工的格式

1082
00:54:04,533 --> 00:54:06,766
在面向对象分析与设计里头

1083
00:54:06,766 --> 00:54:09,366
我们只看第五章之前的内容

1084
00:54:10,100 --> 00:54:11,700
第五章之前的内容就是

1085
00:54:11,700 --> 00:54:14,266
我们截止到目前为止所讲的内容

1086
00:54:14,566 --> 00:54:17,099
当然这份需求文档不是一蹴而就的

1087
00:54:17,100 --> 00:54:17,866
去年

1088
00:54:17,866 --> 00:54:20,199
问去年同学就知道这份文档在去年

1089
00:54:20,933 --> 00:54:22,699
改了差不多小十几次

1090
00:54:22,966 --> 00:54:25,533
就是做的工程中间需求是不断的

1091
00:54:26,066 --> 00:54:29,566
细化和那个的所以改了十几十几版

1092
00:54:29,733 --> 00:54:31,866
最后形成了这个样当

1093
00:54:31,866 --> 00:54:32,766
大家应该知道

1094
00:54:32,766 --> 00:54:33,766
你们写的文档

1095
00:54:33,766 --> 00:54:36,066
最开始的出版是写不到这个样子的

1096
00:54:36,666 --> 00:54:39,366
啊因为这个是需要慢慢的去

1097
00:54:39,533 --> 00:54:40,333
去

1098
00:54:40,733 --> 00:54:43,733
做的过程中间自己慢慢的去进化的啊

1099
00:54:48,766 --> 00:54:51,899
那我把它里头的主要内容把它做成了

1100
00:54:52,400 --> 00:54:55,966
第五节就是支付模块的案例

1101
00:54:57,800 --> 00:54:59,666
支付模块是用来干嘛的啊

1102
00:55:00,100 --> 00:55:03,266
我们的支付模块的想法呢是

1103
00:55:03,500 --> 00:55:05,466
大家知道在很多的

1104
00:55:06,366 --> 00:55:08,466
应用中间都是需要支付的

1105
00:55:08,966 --> 00:55:10,733
其实大家可以看到在

1106
00:55:11,900 --> 00:55:13,666
电商里头是需要支付的

1107
00:55:14,466 --> 00:55:18,066
嗯比如说像这个美团是需要支付的

1108
00:55:18,400 --> 00:55:21,000
比如说你很多o to o的这些应用

1109
00:55:21,166 --> 00:55:21,966
比如说

1110
00:55:22,900 --> 00:55:24,100
饿了么是吧

1111
00:55:24,600 --> 00:55:25,566
共享单车

1112
00:55:25,800 --> 00:55:27,900
等等这些东西通通都是要支付的

1113
00:55:28,000 --> 00:55:30,966
所以支付模块相当于说是一个很

1114
00:55:30,966 --> 00:55:32,199
通用的需求

1115
00:55:32,766 --> 00:55:35,266
你只要做互联网的产品

1116
00:55:35,566 --> 00:55:38,899
一定都要碰到支付的这个部分

1117
00:55:39,333 --> 00:55:40,799
所以我们的想法就是

1118
00:55:40,800 --> 00:55:42,566
我们把这个支付的模块

1119
00:55:42,566 --> 00:55:44,066
做成一个相对比较

1120
00:55:44,066 --> 00:55:45,399
通用的模块

1121
00:55:46,000 --> 00:55:48,100
不仅仅会在我们的

1122
00:55:48,733 --> 00:55:52,266
这个电子商城里头会用到啊

1123
00:55:52,266 --> 00:55:54,499
其实在所有的互联网的系统中间

1124
00:55:54,500 --> 00:55:56,600
其实都会要去碰到

1125
00:55:56,866 --> 00:55:58,799
做支付模块的这个部分

1126
00:55:59,466 --> 00:56:00,533
我们的需求是这样的

1127
00:56:00,533 --> 00:56:04,266
支付模块是连接消费者商家或者平台

1128
00:56:04,266 --> 00:56:05,366
还有金融机构

1129
00:56:05,533 --> 00:56:06,933
就是第三方的支付

1130
00:56:08,200 --> 00:56:10,566
第三方的支付平台的这样的一个桥梁

1131
00:56:10,966 --> 00:56:12,499
他主要的目的是什么呢

1132
00:56:12,500 --> 00:56:13,600
主要目的是

1133
00:56:14,333 --> 00:56:16,266
支付是因为我们的平台产生的

1134
00:56:16,266 --> 00:56:18,799
你因为顾客在平台上买了一个东西

1135
00:56:19,300 --> 00:56:21,566
所以他才会有一个支付

1136
00:56:21,933 --> 00:56:24,166
所以支付的最原始的数据

1137
00:56:24,166 --> 00:56:25,499
是在我们平台产生的

1138
00:56:25,500 --> 00:56:27,466
这个数据是需要被管理住的

1139
00:56:27,966 --> 00:56:31,999
因为你调到第三方的支付平台以后

1140
00:56:32,000 --> 00:56:33,900
他只有一个支付的结果

1141
00:56:34,733 --> 00:56:36,099
比如说我付了一笔钱

1142
00:56:36,300 --> 00:56:37,933
付出去了啊

1143
00:56:38,200 --> 00:56:39,333
付给某人了

1144
00:56:39,500 --> 00:56:41,600
这笔钱是为什么而付的

1145
00:56:43,300 --> 00:56:43,900
这个内容

1146
00:56:43,900 --> 00:56:45,766
就只能在我们的支付平台里头

1147
00:56:45,766 --> 00:56:46,599
去保留了

1148
00:56:46,933 --> 00:56:47,366
所以

1149
00:56:47,366 --> 00:56:50,333
支付平台就是起到这样一个去连接

1150
00:56:51,066 --> 00:56:53,199
消费者商家和第三方

1151
00:56:53,200 --> 00:56:55,700
支付机构的这样的一个桥梁作用

1152
00:56:56,066 --> 00:56:59,966
去保存我们的支付和退款的

1153
00:57:00,733 --> 00:57:01,766
来源数据

1154
00:57:02,366 --> 00:57:05,999
然后去跟第三方的支付平台去接口

1155
00:57:06,366 --> 00:57:08,533
记录第三方支付平台

1156
00:57:08,933 --> 00:57:10,399
就是记录第三方

1157
00:57:10,466 --> 00:57:12,699
支付平台所返回的这些数据

1158
00:57:12,766 --> 00:57:14,699
跟我们的原始的

1159
00:57:15,266 --> 00:57:16,899
支付数据去对起来

1160
00:57:17,133 --> 00:57:19,199
这样就会知道说我们一笔订单

1161
00:57:19,800 --> 00:57:21,966
通过什么样的平台被支付出去了

1162
00:57:22,166 --> 00:57:24,299
或者我们查到一笔钱进来了

1163
00:57:24,300 --> 00:57:26,800
我们可以看到这笔钱是因为哪个订单

1164
00:57:26,966 --> 00:57:27,866
而进来的

1165
00:57:28,000 --> 00:57:29,300
这个都需要靠

1166
00:57:30,066 --> 00:57:32,966
支付凭支付模块来完成

1167
00:57:33,266 --> 00:57:34,399
那支付模块呢

1168
00:57:34,400 --> 00:57:35,966
因为它是一个桥梁作用

1169
00:57:36,700 --> 00:57:39,666
桥梁的两边都会出问题

1170
00:57:39,666 --> 00:57:42,533
因为桥梁的两边都是用程序写的

1171
00:57:42,700 --> 00:57:43,166
大家知道

1172
00:57:43,166 --> 00:57:44,199
用程序写的

1173
00:57:44,200 --> 00:57:46,200
你就不能保证程序里是没有bug

1174
00:57:46,866 --> 00:57:49,299
更何况程序是运行在一个硬

1175
00:57:49,300 --> 00:57:51,166
件系统和网络环境里的

1176
00:57:51,366 --> 00:57:54,299
硬件系统和网络环境也会出问题

1177
00:57:54,700 --> 00:57:55,866
所以出现问题的话

1178
00:57:55,866 --> 00:57:58,199
就难免会出现两边的障

1179
00:57:58,333 --> 00:57:59,133
对不拢

1180
00:57:59,766 --> 00:58:02,066
所以必须要有对账和处理

1181
00:58:02,166 --> 00:58:06,533
对账失败就对账对不拢的这些业务啊

1182
00:58:06,533 --> 00:58:07,333
这些业务

1183
00:58:07,600 --> 00:58:09,066
这是最基本的需求

1184
00:58:09,266 --> 00:58:12,066
其实从他的功能上来说

1185
00:58:13,133 --> 00:58:15,199
就这么一两句话能够说清楚

1186
00:58:15,966 --> 00:58:17,666
他的难点在哪呢

1187
00:58:17,966 --> 00:58:21,866
难点在于说我们想把这个支付的模块

1188
00:58:22,500 --> 00:58:24,666
做的更具通用性

1189
00:58:24,900 --> 00:58:26,666
就目前来说他是

1190
00:58:27,766 --> 00:58:30,666
支持微信支付和支付宝支付的

1191
00:58:31,333 --> 00:58:33,899
但我们知道其实国内一共有20多家

1192
00:58:33,900 --> 00:58:35,133
还是30多家

1193
00:58:35,366 --> 00:58:36,299
支付平台

1194
00:58:36,733 --> 00:58:38,866
除了最大的微信支付宝以外

1195
00:58:38,866 --> 00:58:41,666
大家知道第三大的是云闪付

1196
00:58:42,333 --> 00:58:43,333
除了云闪付以外

1197
00:58:43,333 --> 00:58:45,366
其实还有还有支付平台

1198
00:58:45,366 --> 00:58:46,933
只是那些支付平台就更小了

1199
00:58:47,133 --> 00:58:48,466
我们希望说

1200
00:58:48,800 --> 00:58:52,200
能够接入主流的第三方支付平台

1201
00:58:52,533 --> 00:58:53,333
然后

1202
00:58:54,100 --> 00:58:56,066
屏蔽不同支付平台的差异

1203
00:58:56,333 --> 00:58:57,166
也就换句话说

1204
00:58:57,166 --> 00:58:59,499
我们的消费者或者我们的平台

1205
00:58:59,766 --> 00:59:01,399
在付钱和收钱的时候

1206
00:59:01,400 --> 00:59:03,100
其实他并不关心说

1207
00:59:03,466 --> 00:59:06,166
他用的是支付宝还是微信还是云闪付

1208
00:59:06,966 --> 00:59:09,866
他通过我们的平台去间接的使用这些

1209
00:59:10,200 --> 00:59:13,200
支付的第三方的支付平台

1210
00:59:13,766 --> 00:59:15,399
屏蔽他的这个差异

1211
00:59:15,733 --> 00:59:20,599
然后从设计上来说要求新的支付平台

1212
00:59:21,000 --> 00:59:21,966
支付渠道

1213
00:59:22,300 --> 00:59:23,266
给他连上来时候

1214
00:59:23,266 --> 00:59:25,699
我们的代码是改动最小的

1215
00:59:26,300 --> 00:59:28,566
那这是他的第一个要求

1216
00:59:29,300 --> 00:59:31,733
第二个要求是支付是多种多样的

1217
00:59:32,366 --> 00:59:34,066
大家知道支付吗

1218
00:59:34,066 --> 00:59:36,766
大家最简单就想着说一笔支付完是吧

1219
00:59:37,066 --> 00:59:39,866
但大家都知道比如说有预售

1220
00:59:40,133 --> 00:59:42,366
预售就是多阶段支付

1221
00:59:43,800 --> 00:59:46,366
先支付定金再支付尾款

1222
00:59:46,566 --> 00:59:47,766
那我们希望说

1223
00:59:47,766 --> 00:59:50,466
我们这样的一个支付平台是支持

1224
00:59:50,600 --> 00:59:52,400
多阶段支付的

1225
00:59:52,933 --> 00:59:55,766
多阶段支付意味着你需要记录定

1226
00:59:55,766 --> 00:59:57,933
金和尾款之间的关系

1227
00:59:58,733 --> 00:59:58,899
对吧

1228
00:59:58,900 --> 01:00:01,400
你需要记住定金和尾款之间的关系

1229
01:00:01,400 --> 01:00:04,933
为啥大家知道对于预售来说如果

1230
01:00:05,966 --> 01:00:08,333
你交了定金然后你不想置尾款的话

1231
01:00:08,333 --> 01:00:09,599
定金是不退的

1232
01:00:09,900 --> 01:00:12,066
对吧所以你需要知道说

1233
01:00:12,700 --> 01:00:14,500
退的时候会退什么啊

1234
01:00:14,500 --> 01:00:15,566
所以这是这个

1235
01:00:16,000 --> 01:00:19,533
第二个是要支持各种类型的退款

1236
01:00:20,566 --> 01:00:23,566
因为大家知道退款的情况是很多样化

1237
01:00:23,866 --> 01:00:25,499
最常见的就是我买了一个东西

1238
01:00:25,500 --> 01:00:25,966
我不想要了

1239
01:00:25,966 --> 01:00:27,066
把东西给退回来

1240
01:00:27,366 --> 01:00:30,333
但是其实很多情况下都不是这样子的

1241
01:00:30,700 --> 01:00:31,800
很多情况下是什么样的

1242
01:00:31,800 --> 01:00:33,333
是我买了一堆东西

1243
01:00:34,366 --> 01:00:36,699
然后中间有一个或者两个不想要了

1244
01:00:36,700 --> 01:00:37,300
我要把它退

1245
01:00:37,300 --> 01:00:39,000
回来大家觉得很简单嘛

1246
01:00:39,000 --> 01:00:41,333
那个两个多少钱就退那个钱就完了

1247
01:00:41,533 --> 01:00:43,533
但是这个问题里头就很复杂

1248
01:00:43,533 --> 01:00:44,099
复杂在哪

1249
01:00:44,100 --> 01:00:45,933
复杂现在是分账模式

1250
01:00:46,800 --> 01:00:48,733
就是比如说我买了一个杯子

1251
01:00:49,466 --> 01:00:50,766
然后我买了一个手机

1252
01:00:50,766 --> 01:00:52,866
我两个东西在一个订单里头下的

1253
01:00:53,666 --> 01:00:55,499
然后我就支付给了

1254
01:00:56,466 --> 01:00:59,933
商户商户是要把这两个东西分账

1255
01:00:59,933 --> 01:01:01,166
分给平台的

1256
01:01:01,766 --> 01:01:03,733
大家知道这两个东西的分账

1257
01:01:03,866 --> 01:01:06,399
绝对不是按照同样的比例分的

1258
01:01:07,000 --> 01:01:09,666
假如说如果都按1%分的话

1259
01:01:10,066 --> 01:01:11,399
这玩意就没什么意义

1260
01:01:11,800 --> 01:01:12,600
对吧

1261
01:01:13,366 --> 01:01:15,499
那如果按10%来分的话

1262
01:01:15,500 --> 01:01:17,966
这个玩意就没有人愿意在平台上卖

1263
01:01:18,600 --> 01:01:20,300
对吧你想想看

1264
01:01:20,300 --> 01:01:22,766
无论是卖一个手机还是卖一个杯子

1265
01:01:23,400 --> 01:01:26,066
对于平台的负担是一样还是不一样

1266
01:01:27,866 --> 01:01:28,666
啊

1267
01:01:29,666 --> 01:01:30,566
是一样的

1268
01:01:31,133 --> 01:01:32,899
就是你无论是卖一个杯子

1269
01:01:32,900 --> 01:01:34,066
还是卖一个平台

1270
01:01:34,266 --> 01:01:36,066
卖一个手机

1271
01:01:36,200 --> 01:01:37,733
虽然它的价格是不同的

1272
01:01:37,733 --> 01:01:38,733
对于消费者来说

1273
01:01:38,733 --> 01:01:39,966
看起来价格是不一样的

1274
01:01:39,966 --> 01:01:41,966
但对于平台来说就是一个东西

1275
01:01:42,666 --> 01:01:43,999
其实对于我们的系统负担

1276
01:01:44,000 --> 01:01:45,666
对于我们所产生的服务来说

1277
01:01:45,666 --> 01:01:46,766
就是一模一样的

1278
01:01:46,766 --> 01:01:47,666
没有差别

1279
01:01:47,900 --> 01:01:50,533
所以我们在手机和这个杯子

1280
01:01:51,000 --> 01:01:53,600
的分账比例是不一样的

1281
01:01:54,200 --> 01:01:56,200
我们这个分账比例明显高

1282
01:01:56,466 --> 01:01:58,799
这个分账比例明显的都要很低

1283
01:01:59,733 --> 01:02:02,566
才会保证说我每一笔的交易

1284
01:02:02,566 --> 01:02:05,066
我大概都能收到1块钱或者两块钱

1285
01:02:05,533 --> 01:02:07,366
的分账或者3块钱

1286
01:02:07,366 --> 01:02:09,166
算账我要有个底线我不能收个

1287
01:02:09,700 --> 01:02:11,700
一毛钱的分账那我要他干嘛

1288
01:02:12,166 --> 01:02:13,933
是吧我还对账对吧

1289
01:02:13,966 --> 01:02:15,299
所以我我基本上来说

1290
01:02:15,300 --> 01:02:16,700
会保证每一笔交易

1291
01:02:16,700 --> 01:02:18,900
至少能收到1块钱或者两块钱的

1292
01:02:19,166 --> 01:02:20,199
这样的一个分账

1293
01:02:20,600 --> 01:02:22,700
这时候就造成你的退款变得很麻烦

1294
01:02:23,300 --> 01:02:25,733
因为你退这个东西的时候你不仅要退

1295
01:02:26,466 --> 01:02:29,399
商户拿到的钱还得要退平台分的钱

1296
01:02:29,400 --> 01:02:32,200
你不能说我买过来是2,700块钱

1297
01:02:33,066 --> 01:02:34,666
回去变成2,600是吧

1298
01:02:34,666 --> 01:02:36,699
100块钱平台的分账不退了

1299
01:02:37,066 --> 01:02:38,499
那就意味着说你要

1300
01:02:38,800 --> 01:02:40,900
看说当时分了多少钱

1301
01:02:41,000 --> 01:02:42,166
然后再退回来

1302
01:02:42,400 --> 01:02:44,400
所以这是退款

1303
01:02:44,466 --> 01:02:46,333
全部退款和部分退款

1304
01:02:46,700 --> 01:02:48,866
这个就是因为2017年的那个文件

1305
01:02:48,866 --> 01:02:50,899
造成整个事情变得很复杂

1306
01:02:52,900 --> 01:02:54,800
我们的主参与者

1307
01:02:55,000 --> 01:02:57,200
这个好判断啊

1308
01:02:57,200 --> 01:03:00,533
顾客他要用来支付的是吧

1309
01:03:00,800 --> 01:03:02,966
平台的管理者他是要负责

1310
01:03:03,766 --> 01:03:04,733
这个对账的

1311
01:03:04,733 --> 01:03:06,099
要去检查流水

1312
01:03:06,100 --> 01:03:08,066
然后通过什么渠道去支付

1313
01:03:08,066 --> 01:03:10,133
这个渠道的配置参数等等

1314
01:03:10,266 --> 01:03:12,366
他都需要去管理

1315
01:03:12,933 --> 01:03:16,333
然后呢后台其实还有一个财务总监

1316
01:03:16,800 --> 01:03:18,300
财务总监的目的是为了什么

1317
01:03:18,300 --> 01:03:19,566
他其实是对账

1318
01:03:20,933 --> 01:03:24,666
呃他其实是用来处理这个坏账的

1319
01:03:24,666 --> 01:03:25,999
因为所有的支付平台

1320
01:03:26,000 --> 01:03:28,066
都是通过我们这里过来的

1321
01:03:28,266 --> 01:03:29,599
那每一笔钱

1322
01:03:29,800 --> 01:03:30,866
就有可能在

1323
01:03:30,866 --> 01:03:33,299
支付渠道里和平台上是不一样的

1324
01:03:33,733 --> 01:03:34,599
不一样怎么办

1325
01:03:34,600 --> 01:03:35,700
不一样就要处理

1326
01:03:36,400 --> 01:03:36,733
啊

1327
01:03:36,733 --> 01:03:39,166
无论是多了还是少了你都得要处理

1328
01:03:39,366 --> 01:03:41,733
因为你不可能说这个不一样的

1329
01:03:42,000 --> 01:03:44,333
不一样的账就挂在那里挂着啊

1330
01:03:44,733 --> 01:03:45,666
要处理的话

1331
01:03:45,666 --> 01:03:47,499
就需要有一定的权限的人来做

1332
01:03:47,500 --> 01:03:49,266
所以我们叫做财务总监

1333
01:03:49,766 --> 01:03:50,866
那还有就是商户

1334
01:03:51,133 --> 01:03:52,366
商户呢其实

1335
01:03:52,600 --> 01:03:54,566
主要所能干的事情就是

1336
01:03:54,766 --> 01:03:56,699
把自己的账户登记到平台上

1337
01:03:56,700 --> 01:03:58,200
这样的话有

1338
01:03:58,900 --> 01:04:00,100
平台来控制

1339
01:04:00,366 --> 01:04:01,766
因为每一个商户

1340
01:04:01,766 --> 01:04:03,066
其实在微信支付宝里头

1341
01:04:03,066 --> 01:04:04,566
都会去申请自己的账号

1342
01:04:04,866 --> 01:04:05,999
然后他需要在

1343
01:04:06,400 --> 01:04:08,200
平台上去把自己账号登记上去

1344
01:04:08,200 --> 01:04:10,000
然后我们的平台到微信支付宝里头去

1345
01:04:10,000 --> 01:04:11,333
获得他的授权

1346
01:04:11,900 --> 01:04:12,900
这样的话我们就能够

1347
01:04:12,900 --> 01:04:14,266
控制他的账户

1348
01:04:14,300 --> 01:04:15,900
当我们不能从里头之前

1349
01:04:15,900 --> 01:04:17,533
我们能做的唯一事情是什么

1350
01:04:17,866 --> 01:04:19,399
就是能看他里头的内容

1351
01:04:19,400 --> 01:04:21,400
以及去再对他进行分账

1352
01:04:21,500 --> 01:04:23,300
不能从里头转钱啊

1353
01:04:23,400 --> 01:04:26,133
转钱还是只能由商户自己去做

1354
01:04:26,366 --> 01:04:27,866
所以商户登记自己的账户

1355
01:04:27,866 --> 01:04:30,166
然后去看自己的流水啊

1356
01:04:30,166 --> 01:04:33,699
这是我们的4个主参与者

1357
01:04:35,966 --> 01:04:36,533
辅助参与者

1358
01:04:36,533 --> 01:04:37,966
就是我们的第三方支付平台

1359
01:04:38,466 --> 01:04:39,199
微信支付宝

1360
01:04:39,200 --> 01:04:40,766
还有其他的第三方支付平台

1361
01:04:40,766 --> 01:04:42,199
都是有可能是我们的

1362
01:04:42,400 --> 01:04:43,500
辅助参与者

1363
01:04:44,666 --> 01:04:45,599
潜在参与者呢

1364
01:04:45,700 --> 01:04:46,866
这个潜在参与者就很厉害

1365
01:04:46,866 --> 01:04:49,266
就是中国人民银行在2017年连

1366
01:04:49,266 --> 01:04:50,599
续发的三个文

1367
01:04:51,933 --> 01:04:53,999
一个是要有支付牌照

1368
01:04:54,100 --> 01:04:56,100
没有支付牌照不能做支付

1369
01:04:56,466 --> 01:04:58,566
这就决定了我们是不可能做支付的

1370
01:04:58,800 --> 01:05:02,266
第二是规范支付创新业务以及

1371
01:05:02,900 --> 01:05:05,133
这个条码支付的业务规范

1372
01:05:05,133 --> 01:05:07,699
这个决定呢必须要分账来完成

1373
01:05:07,700 --> 01:05:09,333
这几个文我贴在这了啊

1374
01:05:09,400 --> 01:05:11,800
这就会造成2018年的时候

1375
01:05:12,166 --> 01:05:13,933
17年18年这两年

1376
01:05:13,933 --> 01:05:16,299
基本上各大平台都在玩命的造成

1377
01:05:16,300 --> 01:05:18,766
序员去做支付的部分开发

1378
01:05:18,766 --> 01:05:20,199
就是因为这两个文造成的

1379
01:05:23,100 --> 01:05:27,400
从他们的这个目标我们就能确定

1380
01:05:27,966 --> 01:05:28,799
他的用力

1381
01:05:28,966 --> 01:05:31,366
用力就是我们说的三个标准

1382
01:05:32,300 --> 01:05:35,300
EPP标准是一个金的标准是吧

1383
01:05:35,766 --> 01:05:38,199
有特定的人在特定的地点

1384
01:05:38,200 --> 01:05:41,166
连续的时间因为响应某一个业务事件

1385
01:05:41,566 --> 01:05:42,966
去做的一系列的操作

1386
01:05:42,966 --> 01:05:45,999
这个操作会产生一个有业务价值的

1387
01:05:46,066 --> 01:05:46,866
东西出来

1388
01:05:46,866 --> 01:05:48,199
以及会存储数据

1389
01:05:48,200 --> 01:05:49,066
这个一定要

1390
01:05:49,900 --> 01:05:51,766
一定要在脑袋上一遍遍的把它记清楚

1391
01:05:51,766 --> 01:05:52,866
因为你其实

1392
01:05:53,300 --> 01:05:55,500
对于每一个东西都是重复的

1393
01:05:55,500 --> 01:05:56,533
念一遍这个经

1394
01:05:56,533 --> 01:05:59,466
然后去看看他是否满足这样的一个要

1395
01:05:59,466 --> 01:06:01,566
求我们知道支付交易

1396
01:06:02,366 --> 01:06:04,133
就是满足这样的一个要求的

1397
01:06:04,866 --> 01:06:06,933
支付的过程啊这个颜色我画错了

1398
01:06:06,933 --> 01:06:08,299
支付加应该是一个

1399
01:06:08,800 --> 01:06:09,800
子功能的

1400
01:06:09,800 --> 01:06:12,500
子功能级的啊这个颜色画浅了

1401
01:06:14,966 --> 01:06:17,566
那对于其他的东西来说

1402
01:06:17,800 --> 01:06:20,400
我们可以看到我把它做了一个summary

1403
01:06:20,400 --> 01:06:23,200
laver的用力就是用白色的标述

1404
01:06:23,266 --> 01:06:25,466
我把其他的用力

1405
01:06:25,800 --> 01:06:27,000
把它归到

1406
01:06:28,900 --> 01:06:30,666
后台管理员和商户

1407
01:06:31,566 --> 01:06:32,899
大家可以看到啊

1408
01:06:32,900 --> 01:06:36,766
在这个例子中间我们一共是三种

1409
01:06:37,133 --> 01:06:38,699
操作主参与者

1410
01:06:38,900 --> 01:06:40,500
但是我们其实前面写了四个

1411
01:06:40,500 --> 01:06:42,000
就是还有一个财务总监

1412
01:06:42,900 --> 01:06:44,600
但是在真正做用力分析的时候

1413
01:06:44,600 --> 01:06:46,066
我们只做了三个

1414
01:06:46,600 --> 01:06:48,333
原因是因为我们在

1415
01:06:48,333 --> 01:06:49,999
后台还有另外一个系统

1416
01:06:50,000 --> 01:06:51,766
叫做权限管理系统

1417
01:06:51,766 --> 01:06:53,299
通用权限管理系统

1418
01:06:53,466 --> 01:06:55,733
我们可以针对后台管理人员

1419
01:06:55,733 --> 01:06:57,733
任意指定每一个人在系统中间

1420
01:06:57,733 --> 01:06:58,766
可以做的权限

1421
01:06:59,500 --> 01:07:01,466
所以因为有了那个通用权

1422
01:07:01,466 --> 01:07:03,166
限管理系统的加持

1423
01:07:03,466 --> 01:07:05,366
所以我们在做需求分析的时候

1424
01:07:05,366 --> 01:07:07,166
我们没必要去区分

1425
01:07:07,666 --> 01:07:10,699
后台管理人员的不同的类别

1426
01:07:10,700 --> 01:07:11,166
大家知道

1427
01:07:11,166 --> 01:07:13,466
其实后台管理人员是有很多的类别的

1428
01:07:13,966 --> 01:07:16,799
每一种人只负责操作特定的东西

1429
01:07:17,566 --> 01:07:18,866
现实就是这个样子

1430
01:07:19,166 --> 01:07:21,866
但是因为我们后面有一个系统加持

1431
01:07:21,866 --> 01:07:24,333
就是一个通用权限的管理系统

1432
01:07:24,533 --> 01:07:27,066
可以任意配置后面的后台人员

1433
01:07:27,066 --> 01:07:27,899
想做什么

1434
01:07:28,000 --> 01:07:29,466
能做什么和不能做什么

1435
01:07:29,900 --> 01:07:31,766
那这样的话我们在做需求分析阶段

1436
01:07:32,166 --> 01:07:34,199
就不需要去区分后台的人员了

1437
01:07:34,366 --> 01:07:35,166
只需要说

1438
01:07:35,166 --> 01:07:37,466
把所有的后台人员看成是平等的

1439
01:07:37,900 --> 01:07:38,700
他们

1440
01:07:39,866 --> 01:07:42,366
做什么然后具体到每一个

1441
01:07:43,000 --> 01:07:44,733
地方说他想做什么想做什么

1442
01:07:44,733 --> 01:07:46,166
他去配置啊他去配置

1443
01:07:46,166 --> 01:07:47,533
所以这样就简化了我们在

1444
01:07:47,533 --> 01:07:49,599
需求分析中间的难度

1445
01:07:50,333 --> 01:07:52,599
我们就把财务总监和所有的后台

1446
01:07:52,866 --> 01:07:54,699
管理人员合二为一了啊

1447
01:07:54,700 --> 01:07:55,533
合到一起了

1448
01:07:56,466 --> 01:07:58,566
所以就有了这样的一张用力总图

1449
01:07:59,066 --> 01:08:00,666
用力总图大家可以看到

1450
01:08:00,666 --> 01:08:01,866
基本上一个特点

1451
01:08:02,333 --> 01:08:04,099
它其实是以主

1452
01:08:04,366 --> 01:08:08,599
参与者为单位去区分用力的部分的

1453
01:08:09,666 --> 01:08:10,466
我们现在有3

1454
01:08:10,466 --> 01:08:12,966
就是被合并了以后我们现在有三个

1455
01:08:13,933 --> 01:08:14,899
主参与者

1456
01:08:15,466 --> 01:08:17,999
所以我把用力就划成了三块

1457
01:08:18,600 --> 01:08:21,166
当然如果说每一块里的东西太多

1458
01:08:21,166 --> 01:08:23,866
比如说大家做的那个作业中间

1459
01:08:24,500 --> 01:08:27,200
你不可能说用力总图只有3块

1460
01:08:27,566 --> 01:08:29,066
因为或者只有4块

1461
01:08:29,066 --> 01:08:30,466
看你有多少个主参与者

1462
01:08:30,500 --> 01:08:33,000
因为它里头每个人的用力会非常多

1463
01:08:33,133 --> 01:08:34,966
那你就可能划成更多的块

1464
01:08:35,166 --> 01:08:37,166
但总的一个特征是

1465
01:08:37,866 --> 01:08:39,099
我推荐大家

1466
01:08:40,133 --> 01:08:41,899
以主参与者

1467
01:08:42,700 --> 01:08:44,300
为单位来划分

1468
01:08:44,666 --> 01:08:45,933
这个好处在于哪呢

1469
01:08:45,933 --> 01:08:47,166
这个好处在于说

1470
01:08:47,866 --> 01:08:49,566
你去做需求调研的时候啊

1471
01:08:49,566 --> 01:08:50,866
因为他很复杂

1472
01:08:50,866 --> 01:08:52,333
其实需求文档很大

1473
01:08:52,766 --> 01:08:54,999
你其实给不同的人去获取需求的时候

1474
01:08:55,000 --> 01:08:56,533
你可以只给他看一部分

1475
01:08:57,333 --> 01:08:58,499
就是比如说你给商户

1476
01:08:58,500 --> 01:08:59,866
你只给他看商户的部分

1477
01:08:59,900 --> 01:09:00,800
后台管理的部分

1478
01:09:00,800 --> 01:09:02,166
跟商户一点关系都没有

1479
01:09:02,400 --> 01:09:03,400
你不用去给他看

1480
01:09:03,400 --> 01:09:04,933
后台管理的需求是什么

1481
01:09:05,166 --> 01:09:06,266
你给后台管理的话

1482
01:09:06,266 --> 01:09:07,533
只给他看后台管理的部分

1483
01:09:07,533 --> 01:09:10,499
而不需要给他看顾客或者商户的部分

1484
01:09:10,900 --> 01:09:13,366
所以在用力总图上头

1485
01:09:13,366 --> 01:09:16,733
推荐大家以主参与者的视角

1486
01:09:17,300 --> 01:09:20,966
去把整个用力分成若干块

1487
01:09:21,066 --> 01:09:22,366
但因为现在这个比较简单

1488
01:09:22,366 --> 01:09:24,899
所以我们就把整个用力分成了三块

1489
01:09:26,300 --> 01:09:29,333
顾客的支付加一啊这个他只有一个

1490
01:09:29,400 --> 01:09:30,700
就顾客在整个用的东西

1491
01:09:30,700 --> 01:09:31,900
他只能用来支付

1492
01:09:32,133 --> 01:09:32,933
其他的不行

1493
01:09:33,733 --> 01:09:33,899
啊

1494
01:09:33,900 --> 01:09:36,566
大家可能知道顾客是能退款的是吧

1495
01:09:36,866 --> 01:09:39,266
但退款其实不是顾客操作的

1496
01:09:39,266 --> 01:09:40,499
他不是主操作人

1497
01:09:41,200 --> 01:09:43,500
为啥呢因为顾客不能退款

1498
01:09:44,333 --> 01:09:46,499
退款是平台退款

1499
01:09:46,700 --> 01:09:48,166
而不是顾客退款

1500
01:09:48,533 --> 01:09:50,499
顾客只能发出一个申请

1501
01:09:50,800 --> 01:09:52,966
说要撤回某一个订单

1502
01:09:53,533 --> 01:09:56,166
平台决定说这个订单你可以取消

1503
01:09:56,733 --> 01:09:58,599
我才会决定给你退款

1504
01:09:58,966 --> 01:10:00,966
所以顾客是不能退款

1505
01:10:01,133 --> 01:10:02,399
平台才可以退款

1506
01:10:02,400 --> 01:10:03,766
这个逻辑关系搞清楚

1507
01:10:04,133 --> 01:10:05,199
所以这样的话就变成

1508
01:10:05,200 --> 01:10:06,900
顾客在里头只能做支付

1509
01:10:07,900 --> 01:10:08,600
然后

1510
01:10:08,600 --> 01:10:11,566
其他的都是交给后面的管理人员

1511
01:10:11,733 --> 01:10:13,166
和商户去完成

1512
01:10:14,266 --> 01:10:16,099
所以我们就把它分成了三大块

1513
01:10:16,533 --> 01:10:17,266
描述出来

1514
01:10:17,266 --> 01:10:18,966
主参与人辅助参与人

1515
01:10:18,966 --> 01:10:21,266
以及整个用力的三大块

1516
01:10:22,100 --> 01:10:23,700
那我们看一下平台账户

1517
01:10:24,700 --> 01:10:26,166
作为后台管理人员来说

1518
01:10:26,166 --> 01:10:28,266
他要干的主要的目的就是第一

1519
01:10:29,100 --> 01:10:30,066
他要分账

1520
01:10:30,766 --> 01:10:33,933
啊就是当钱进来以后

1521
01:10:33,933 --> 01:10:36,933
他是要去把账分给平台一部分

1522
01:10:36,933 --> 01:10:38,599
留下的是商户的

1523
01:10:38,766 --> 01:10:40,099
第二他要去对账

1524
01:10:40,533 --> 01:10:42,333
对账就是要对在

1525
01:10:43,000 --> 01:10:44,666
第三方的渠道里头记的账

1526
01:10:44,666 --> 01:10:46,366
和我们平台里记的账

1527
01:10:46,466 --> 01:10:48,066
是不是一致的啊

1528
01:10:48,066 --> 01:10:49,199
所以这是要对账

1529
01:10:49,400 --> 01:10:50,200
如果

1530
01:10:50,700 --> 01:10:51,500
对账

1531
01:10:53,133 --> 01:10:53,933
好这个

1532
01:10:54,600 --> 01:10:55,966
这个其实画错了啊

1533
01:10:56,066 --> 01:10:58,499
这个如果说是对账有错的话

1534
01:10:58,500 --> 01:11:00,700
其实他就会去挂起来

1535
01:11:00,800 --> 01:11:03,366
但就会有第三个叫做处理挂账

1536
01:11:04,066 --> 01:11:06,499
处理挂账就是如果这个账错了

1537
01:11:07,333 --> 01:11:08,466
他就会去退款

1538
01:11:08,800 --> 01:11:09,800
或者说把

1539
01:11:10,500 --> 01:11:12,200
就是钱收多了就会退款

1540
01:11:12,400 --> 01:11:14,966
钱少了他就会直接把他抹掉

1541
01:11:14,966 --> 01:11:18,299
当然这个要记住说是谁抹的这个账

1542
01:11:18,966 --> 01:11:20,533
这是他主要做的三件事情

1543
01:11:20,533 --> 01:11:22,999
就是分账对账和处理挂账

1544
01:11:23,300 --> 01:11:24,466
大家可以看到

1545
01:11:24,466 --> 01:11:29,066
我在分账和对账里头没有写主参与者

1546
01:11:29,466 --> 01:11:31,766
我们刚才说了用力是要有主参与者的

1547
01:11:31,766 --> 01:11:34,399
就是我们之前讲的通都是都

1548
01:11:34,400 --> 01:11:35,300
是规定

1549
01:11:35,400 --> 01:11:38,100
就是我们的设计的出发点就是从

1550
01:11:38,566 --> 01:11:42,566
主参与者为出发点去确定他的目标

1551
01:11:42,566 --> 01:11:44,099
然后才会有他的用力的

1552
01:11:44,300 --> 01:11:46,466
那为什么在这里头的分账和对账

1553
01:11:46,466 --> 01:11:47,466
是没有

1554
01:11:48,133 --> 01:11:48,999
主参与者的

1555
01:11:49,000 --> 01:11:50,933
原因是因为我们在这里的设计

1556
01:11:50,933 --> 01:11:53,099
分账和对账是自动完成

1557
01:11:53,366 --> 01:11:56,599
就在系统中间是定时去自动完成的

1558
01:11:56,700 --> 01:11:58,366
不需要人参与

1559
01:11:59,200 --> 01:12:01,466
所以如果说你说他一定要一个主

1560
01:12:01,466 --> 01:12:02,199
参与者的话

1561
01:12:02,200 --> 01:12:04,400
就是系统因为他没有交互

1562
01:12:04,900 --> 01:12:06,800
他没有交互就是一个指令

1563
01:12:07,000 --> 01:12:08,333
然后做出来的就是结果

1564
01:12:08,333 --> 01:12:09,999
没有人机的交互

1565
01:12:10,400 --> 01:12:11,933
所以在这张图上头

1566
01:12:12,166 --> 01:12:15,399
分账和对账我就没有画主参与者

1567
01:12:15,900 --> 01:12:18,066
原因就是因为这两个用力

1568
01:12:18,300 --> 01:12:20,766
是被系统定时来执行的

1569
01:12:20,766 --> 01:12:23,099
没有人机之间的交互

1570
01:12:23,566 --> 01:12:24,999
但其他都有处理

1571
01:12:25,000 --> 01:12:27,566
挂账就是如果对账以后出现了问题

1572
01:12:27,600 --> 01:12:30,366
就去看问题怎么处理

1573
01:12:31,000 --> 01:12:32,900
然后呢他还有很多其他的

1574
01:12:32,900 --> 01:12:34,766
比如说我们有

1575
01:12:35,666 --> 01:12:36,466
支付渠道

1576
01:12:36,533 --> 01:12:37,899
微信和支付宝

1577
01:12:37,900 --> 01:12:39,533
这是我们平台已经做好了的

1578
01:12:39,533 --> 01:12:40,666
在技术能力上

1579
01:12:40,666 --> 01:12:42,566
支付支持了两个支付渠道

1580
01:12:43,200 --> 01:12:44,466
但是他需要干什么呢

1581
01:12:44,466 --> 01:12:45,733
需要说去配置

1582
01:12:45,733 --> 01:12:47,699
说在支付宝上头

1583
01:12:48,066 --> 01:12:49,966
平台的账户是什么

1584
01:12:50,133 --> 01:12:51,166
平台的账户ID

1585
01:12:51,166 --> 01:12:53,333
平台的密钥平以及那个账户的

1586
01:12:53,600 --> 01:12:57,300
支付宝的的账户的所需要的那些参数

1587
01:12:58,133 --> 01:12:59,066
比如说微信上头

1588
01:12:59,066 --> 01:13:00,733
同样的而且两个参数还不一样

1589
01:13:01,166 --> 01:13:02,066
两个参数还不一样

1590
01:13:02,200 --> 01:13:04,300
所以他需要去配置他的

1591
01:13:04,933 --> 01:13:06,733
这个平台的这个参数

1592
01:13:07,000 --> 01:13:08,900
这里头你就会有很细的问题

1593
01:13:08,900 --> 01:13:11,700
他配置的时候他不是配置一个就完了

1594
01:13:12,200 --> 01:13:12,600
也许

1595
01:13:12,600 --> 01:13:14,700
公司在里头申请了两个支付宝账号

1596
01:13:14,700 --> 01:13:16,600
一会用这个一会用那个

1597
01:13:16,666 --> 01:13:18,066
然后他有时候要切换

1598
01:13:18,700 --> 01:13:19,766
那怎么切换法

1599
01:13:19,766 --> 01:13:20,299
这都是我

1600
01:13:20,300 --> 01:13:23,000
们在做配置支付渠道的这个

1601
01:13:23,700 --> 01:13:26,966
那当然他因为会做了多套的配置进去

1602
01:13:26,966 --> 01:13:28,166
他就会有另外一个问题

1603
01:13:28,166 --> 01:13:30,099
就是我可能某个配置我不想用了

1604
01:13:30,400 --> 01:13:33,133
我就要把这个配置给他删除掉啊

1605
01:13:33,133 --> 01:13:35,699
就去掉某一个支付的配置

1606
01:13:36,533 --> 01:13:38,466
啊这是支付的配置

1607
01:13:38,733 --> 01:13:40,699
那还有一个就是他的支付渠道

1608
01:13:40,700 --> 01:13:41,533
他有可能

1609
01:13:41,666 --> 01:13:42,466
暂停

1610
01:13:43,266 --> 01:13:46,066
比如说我虽然在支付宝是有账号的

1611
01:13:46,066 --> 01:13:48,266
但是我可能跟支付宝谈的

1612
01:13:48,566 --> 01:13:50,799
分账协议或者服务费谈不拢

1613
01:13:51,400 --> 01:13:54,966
那我就把支付宝的支付渠道先暂停掉

1614
01:13:55,200 --> 01:13:55,933
暂停掉以后

1615
01:13:55,933 --> 01:13:56,666
就造成

1616
01:13:56,666 --> 01:13:59,366
所有的顾客无法在这个渠道上头

1617
01:13:59,366 --> 01:14:00,599
再支付东西了

1618
01:14:01,066 --> 01:14:03,266
但是所有已有的服务还是能做的

1619
01:14:03,266 --> 01:14:05,299
比如说以前通过这个东西进来的

1620
01:14:05,733 --> 01:14:08,466
分账啊对账啊退款啊都是可以做的

1621
01:14:08,533 --> 01:14:10,799
只是说当我暂停的时候

1622
01:14:10,900 --> 01:14:11,733
新的

1623
01:14:12,966 --> 01:14:16,133
订单就没办法通过支付宝来支付了

1624
01:14:16,666 --> 01:14:19,066
那取消就是反过来就是我取消暂停

1625
01:14:19,066 --> 01:14:21,499
他又能够恢复他的支付过程

1626
01:14:21,766 --> 01:14:24,733
这个词是后端的用力

1627
01:14:25,000 --> 01:14:26,866
大家应该能够明显看到

1628
01:14:26,866 --> 01:14:31,199
这些用力都是满足EBP原则的

1629
01:14:32,266 --> 01:14:35,866
都是满足一群人都是某一个特定的人

1630
01:14:35,933 --> 01:14:37,133
后台管理人员

1631
01:14:37,266 --> 01:14:39,766
在一段联系时间要做的事情

1632
01:14:39,766 --> 01:14:40,999
然后他会产生价值

1633
01:14:41,366 --> 01:14:43,399
为什么他会满足EP原则

1634
01:14:43,400 --> 01:14:45,366
原因就是因为他是由

1635
01:14:45,566 --> 01:14:48,466
后台管理人员要实现的目标

1636
01:14:49,200 --> 01:14:50,533
而推演过来的

1637
01:14:50,566 --> 01:14:54,199
所以你如果从后台管理员的目标出发

1638
01:14:54,600 --> 01:14:55,866
去看这个目标

1639
01:14:55,866 --> 01:14:58,299
是否能在一个固定的时间

1640
01:14:58,533 --> 01:15:00,933
固定的地点连续的时间去完成

1641
01:15:01,166 --> 01:15:02,366
那他就是一个用力

1642
01:15:02,366 --> 01:15:03,166
如果他不行

1643
01:15:03,166 --> 01:15:06,499
你把这个目标就要切成若干个用力啊

1644
01:15:06,500 --> 01:15:08,200
切成若干个用力来做

1645
01:15:08,966 --> 01:15:10,999
这是后台管理人员

1646
01:15:11,966 --> 01:15:12,933
商户来说

1647
01:15:12,933 --> 01:15:13,399
啊

1648
01:15:13,400 --> 01:15:16,466
他其实主要的目标就是第一他要把

1649
01:15:16,700 --> 01:15:18,766
自己的账户登记到平台上去

1650
01:15:18,766 --> 01:15:20,599
他不仅要在这个上头开一个铺

1651
01:15:21,100 --> 01:15:22,466
对于支付来说

1652
01:15:22,466 --> 01:15:24,933
如果说他想把钱到自己的的微信

1653
01:15:24,933 --> 01:15:26,166
或者到支付宝的账号

1654
01:15:26,366 --> 01:15:28,566
那他则需要做签约账户

1655
01:15:28,566 --> 01:15:31,133
就是把自己微信和支付宝上的账户

1656
01:15:31,533 --> 01:15:32,566
签约上去

1657
01:15:33,300 --> 01:15:35,500
既然可以签约就可以解约啊

1658
01:15:35,500 --> 01:15:39,133
他就不想再用这个东西去去运作了

1659
01:15:39,133 --> 01:15:40,666
那他就可以去解约

1660
01:15:40,933 --> 01:15:42,299
解约会比较麻烦

1661
01:15:42,300 --> 01:15:46,100
为啥呢因为有很多的钱是在途中的

1662
01:15:46,600 --> 01:15:47,133
就不能说

1663
01:15:47,133 --> 01:15:49,266
我说我支付宝这个账号不用了

1664
01:15:49,566 --> 01:15:53,333
但是有些钱没有分账没有没有对账

1665
01:15:53,533 --> 01:15:56,399
那你解约的话也不会即刻失效

1666
01:15:56,400 --> 01:15:58,133
只是说你解约了以后

1667
01:15:58,800 --> 01:16:00,600
解约了支付宝的这个账户以后

1668
01:16:00,600 --> 01:16:02,900
新的支付不会到这个账号里

1669
01:16:03,066 --> 01:16:05,266
但是一要等他所有的在图

1670
01:16:05,266 --> 01:16:06,766
资金处理完了以后

1671
01:16:07,200 --> 01:16:10,500
才能够真正的把这个约给解掉

1672
01:16:10,500 --> 01:16:12,333
就是去向这个平台去把

1673
01:16:12,566 --> 01:16:13,966
两个关系给他切断掉

1674
01:16:14,266 --> 01:16:15,933
那除了签约解约以外

1675
01:16:16,366 --> 01:16:19,733
其实商户所能干的事情都是去看了

1676
01:16:19,733 --> 01:16:22,933
就是看他的支付单和退款单

1677
01:16:22,933 --> 01:16:24,466
这其实就是他的资金流水

1678
01:16:25,066 --> 01:16:28,566
去看他的这个资金流水了啊

1679
01:16:29,200 --> 01:16:33,066
我们可以看到从这个设计上来说

1680
01:16:33,066 --> 01:16:35,599
所有财务上头的动作

1681
01:16:36,166 --> 01:16:38,299
就所有支付上面的动作

1682
01:16:38,300 --> 01:16:40,600
都是由平台来管理的

1683
01:16:41,566 --> 01:16:43,733
商户把自己的账号

1684
01:16:44,866 --> 01:16:47,499
签约到平台上或者解约

1685
01:16:47,500 --> 01:16:48,300
从平台上解约

1686
01:16:48,300 --> 01:16:49,866
这他唯一能做的两个动作

1687
01:16:50,266 --> 01:16:51,866
其他事情全是由平台来做的

1688
01:16:51,866 --> 01:16:53,199
平台负责收账

1689
01:16:53,200 --> 01:16:55,300
平台负责对账

1690
01:16:55,733 --> 01:16:57,466
平台负责分账

1691
01:16:58,066 --> 01:17:02,533
平台负责处理账务不平的这个问题

1692
01:17:02,766 --> 01:17:05,899
所以商户只能看到他的最终的结果

1693
01:17:05,900 --> 01:17:08,533
就是他的支付单和退款单

1694
01:17:11,300 --> 01:17:13,400
每一个用力我们都写了

1695
01:17:13,866 --> 01:17:16,199
都写了这个文字的描述

1696
01:17:16,666 --> 01:17:17,599
所以大家可以看到

1697
01:17:17,600 --> 01:17:19,533
我们之前支付我就不给大家看了

1698
01:17:19,900 --> 01:17:20,900
这个是退款

1699
01:17:21,000 --> 01:17:23,266
退款是指功能级别的

1700
01:17:23,533 --> 01:17:26,133
对于退款来说其实它非常的简单

1701
01:17:26,133 --> 01:17:28,599
因为它没有太多的人机交互

1702
01:17:29,366 --> 01:17:33,566
他的就是把退款的的信息给他

1703
01:17:33,566 --> 01:17:35,099
然后他去做退款

1704
01:17:35,100 --> 01:17:37,366
如果退款失败的话他会返回退款原因

1705
01:17:39,933 --> 01:17:43,999
这个是配置支付渠道

1706
01:17:44,733 --> 01:17:46,733
配置支付渠道这一块呢

1707
01:17:46,733 --> 01:17:50,766
我其实写了两个版本的用力

1708
01:17:51,566 --> 01:17:52,699
这是一个版本

1709
01:17:53,900 --> 01:17:56,333
这个版本它叫做配置支付渠道

1710
01:17:56,333 --> 01:17:58,266
我们在用的中间没有写这个啊

1711
01:17:58,500 --> 01:17:58,966
大家可以看到

1712
01:17:58,966 --> 01:18:01,566
用的中间其实没有配置支付渠道啊

1713
01:18:01,566 --> 01:18:05,799
有有配置支付渠道的这个呃

1714
01:18:06,100 --> 01:18:09,333
用力但其实这个用力中间写的文字

1715
01:18:09,333 --> 01:18:11,266
实际上是把这两个用力合一了

1716
01:18:12,100 --> 01:18:15,600
就是把删除和配置合到一起

1717
01:18:17,266 --> 01:18:19,099
我们可以看一下是怎么写的啊

1718
01:18:19,200 --> 01:18:21,333
主成功场景写的是配置

1719
01:18:22,766 --> 01:18:25,699
扩展场景写的是什么呢

1720
01:18:25,866 --> 01:18:26,933
写的是删除

1721
01:18:28,733 --> 01:18:29,533
看见没有

1722
01:18:29,600 --> 01:18:31,133
主成功场景的第一步

1723
01:18:31,133 --> 01:18:33,299
是显示已经支持的支付渠道

1724
01:18:33,666 --> 01:18:35,933
第二步是从已经支持的支付渠道中间

1725
01:18:35,933 --> 01:18:37,399
选择一个

1726
01:18:37,500 --> 01:18:39,333
去配置他的相关的信息

1727
01:18:39,900 --> 01:18:40,933
然后成功

1728
01:18:41,700 --> 01:18:44,666
那RA的话就是在第二步的另外一个

1729
01:18:44,666 --> 01:18:47,299
选择他从已经配置的支付渠道中间

1730
01:18:47,533 --> 01:18:49,266
删除已有的配置

1731
01:18:49,566 --> 01:18:50,566
当然有限制啊

1732
01:18:50,566 --> 01:18:52,333
就是启动时间未到的才能删除

1733
01:18:52,333 --> 01:18:54,299
启动时间到了的是不能删除的

1734
01:18:54,300 --> 01:18:55,766
你只能去暂停了

1735
01:18:57,666 --> 01:18:58,666
能不能这样写

1736
01:18:59,166 --> 01:19:01,166
用力你们觉得

1737
01:19:03,000 --> 01:19:04,200
能不能这么写用力

1738
01:19:06,333 --> 01:19:07,333
这是我要问的问题

1739
01:19:07,333 --> 01:19:08,533
能不能这样写用力

1740
01:19:16,566 --> 01:19:17,366
能不能

1741
01:19:17,800 --> 01:19:19,333
这个用力有问题吗这么写

1742
01:19:20,766 --> 01:19:23,166
在网上或者书上头很多这

1743
01:19:23,166 --> 01:19:24,166
样写用力的

1744
01:19:25,066 --> 01:19:27,266
所以我就写了一个这样的版本的用力

1745
01:19:28,500 --> 01:19:29,700
你们觉得有问题吗

1746
01:19:34,600 --> 01:19:35,066
首先

1747
01:19:35,066 --> 01:19:37,499
首先你觉得他们为什么会这样写用力

1748
01:19:56,800 --> 01:19:58,366
啊为什么要这么写用力

1749
01:19:58,566 --> 01:19:59,299
为什么写用力

1750
01:19:59,300 --> 01:20:00,300
就是因为他认为

1751
01:20:00,300 --> 01:20:02,000
这两个东西是有紧密关系的

1752
01:20:02,266 --> 01:20:03,566
然后每个东西又很短

1753
01:20:03,866 --> 01:20:05,799
他就不想切成多个用力

1754
01:20:05,800 --> 01:20:07,200
因为他觉得规模不够

1755
01:20:07,933 --> 01:20:10,366
所以他就把它写在一个用力中间

1756
01:20:10,366 --> 01:20:11,799
这样显得这个用力比较多

1757
01:20:14,400 --> 01:20:15,500
但是如果写在一个用中间

1758
01:20:15,500 --> 01:20:17,100
你会发现他违反了什么原则

1759
01:20:19,400 --> 01:20:20,766
违反了什么原则觉得

1760
01:20:26,400 --> 01:20:27,966
或者说你觉得他写在一个用力中间

1761
01:20:27,966 --> 01:20:29,299
他更多的像什么

1762
01:20:30,366 --> 01:20:31,966
他会在写这个用力时候

1763
01:20:31,966 --> 01:20:32,966
你能够想象到

1764
01:20:32,966 --> 01:20:34,866
这个作者在想象那个界面

1765
01:20:35,333 --> 01:20:36,799
那个界面长什么样

1766
01:20:36,966 --> 01:20:37,999
他在一个界面上呢

1767
01:20:38,000 --> 01:20:38,866
就能完成

1768
01:20:38,866 --> 01:20:41,866
配置支付渠道和删除支付渠道

1769
01:20:42,166 --> 01:20:43,099
两个操作

1770
01:20:43,333 --> 01:20:44,533
在一个界面上能完成

1771
01:20:45,066 --> 01:20:47,066
所以他也是基于这样的一个想法

1772
01:20:47,566 --> 01:20:48,866
第一认为他很闪烁

1773
01:20:48,866 --> 01:20:49,133
第二

1774
01:20:49,133 --> 01:20:51,299
认为他在一个界面上能完成两个事情

1775
01:20:51,500 --> 01:20:53,366
所以他就把它写在一个用的中间

1776
01:20:57,966 --> 01:20:59,299
你觉得有问题吗

1777
01:20:59,700 --> 01:21:01,933
好像对于怎么写或者

1778
01:21:02,066 --> 01:21:03,799
不怎么写都完全没有想法

1779
01:21:03,966 --> 01:21:06,266
那肯定告诉你说你是写不出用力来的

1780
01:21:07,166 --> 01:21:09,499
写用力要有明确的企图心

1781
01:21:09,500 --> 01:21:10,866
你如果觉得这也行那也行

1782
01:21:10,866 --> 01:21:11,933
那是肯定不行的

1783
01:21:12,400 --> 01:21:13,366
如果这也行那也行

1784
01:21:13,366 --> 01:21:15,133
你用力写的非常非常的乱

1785
01:21:15,566 --> 01:21:17,299
整套用力写下来

1786
01:21:17,300 --> 01:21:20,000
从头到尾你要用一个同样的标准

1787
01:21:20,500 --> 01:21:22,600
去衡量去去贯彻下来

1788
01:21:23,333 --> 01:21:25,733
比如说我写用力的标准

1789
01:21:25,966 --> 01:21:29,099
我更多的会强调EBP原则

1790
01:21:29,100 --> 01:21:30,600
因为我一直在说EBP原则

1791
01:21:30,600 --> 01:21:31,700
这是个金原则

1792
01:21:32,166 --> 01:21:34,133
就是你一定是为了一个

1793
01:21:34,133 --> 01:21:36,766
特定的目标来做这件事情的

1794
01:21:37,400 --> 01:21:38,266
这个问题

1795
01:21:38,266 --> 01:21:41,566
我不赞成把它写在一起的原因

1796
01:21:41,766 --> 01:21:42,799
就是因为在这个运动中间

1797
01:21:42,800 --> 01:21:43,866
其实有两个目标

1798
01:21:44,400 --> 01:21:47,200
一个目标是配置一个新的参数

1799
01:21:47,533 --> 01:21:50,766
另外一个目标是删除一个已有的配置

1800
01:21:50,900 --> 01:21:52,966
这两个目标是不是共存的

1801
01:21:52,966 --> 01:21:54,366
他没有关系

1802
01:21:54,666 --> 01:21:56,466
就不会有一个用户上来之后

1803
01:21:56,466 --> 01:21:58,366
同时做这两件事情

1804
01:21:58,933 --> 01:22:01,099
这既没有先后顺序也没有因果关系

1805
01:22:01,333 --> 01:22:02,066
所以

1806
01:22:02,066 --> 01:22:05,999
这样的一个把它捏合到一个用力中间

1807
01:22:07,266 --> 01:22:09,533
的做法其实不太合理的

1808
01:22:09,900 --> 01:22:13,300
那更多的我会倾向于把它

1809
01:22:13,666 --> 01:22:16,166
变成两个独立的用力

1810
01:22:16,300 --> 01:22:17,733
所以我在文档中间写的

1811
01:22:17,733 --> 01:22:19,366
其实是独立的用力

1812
01:22:20,400 --> 01:22:21,500
给大家看一下

1813
01:22:22,200 --> 01:22:25,600
这图上的给大家看到的是独立的用力

1814
01:22:25,600 --> 01:22:27,400
在文章中间写的也是

1815
01:22:28,666 --> 01:22:29,599
独立的用力

1816
01:22:39,933 --> 01:22:41,799
啊大家可以看到分开两个的

1817
01:22:41,800 --> 01:22:43,600
一个是配置支付渠道

1818
01:22:44,366 --> 01:22:46,533
一个是删除支付渠道

1819
01:22:47,366 --> 01:22:48,599
对吧选成两个了

1820
01:22:49,100 --> 01:22:50,766
选成两个的坏处在哪

1821
01:22:54,700 --> 01:22:56,400
写个写成两个的坏处在哪

1822
01:22:56,400 --> 01:22:58,600
做这么这么做有他的好处

1823
01:22:58,800 --> 01:23:00,466
目标是分离的

1824
01:23:00,466 --> 01:23:01,733
目标是清楚的

1825
01:23:02,000 --> 01:23:03,300
对吧坏处在哪

1826
01:23:04,933 --> 01:23:07,099
话是在于说每个用力

1827
01:23:07,666 --> 01:23:10,266
太少就说我们三个标准老板

1828
01:23:10,266 --> 01:23:11,899
测试是应该有清晰的目标

1829
01:23:12,066 --> 01:23:12,866
ET棉

1830
01:23:12,866 --> 01:23:16,133
EBP原则是应该在一个人在一个地点

1831
01:23:16,133 --> 01:23:18,166
连续的时间因为业务事件

1832
01:23:18,866 --> 01:23:20,066
做的一系列的操作

1833
01:23:20,066 --> 01:23:22,866
他会产生业务价值会保留数据

1834
01:23:22,866 --> 01:23:24,066
这是EP原则

1835
01:23:24,266 --> 01:23:25,933
分成两个以后是满足EP原则的

1836
01:23:25,933 --> 01:23:26,733
分成两个不满足

1837
01:23:26,733 --> 01:23:29,466
最后一个原则就是规模测试的原则

1838
01:23:29,966 --> 01:23:32,133
太碎了太碎了

1839
01:23:32,300 --> 01:23:33,800
所以这时候你会发现

1840
01:23:33,800 --> 01:23:36,000
三个原则都摆在那儿

1841
01:23:36,133 --> 01:23:38,533
你要让三个原则都满足

1842
01:23:39,466 --> 01:23:40,499
不大现实

1843
01:23:40,900 --> 01:23:41,766
这时候你就会

1844
01:23:41,766 --> 01:23:43,266
倾向于说我有一个

1845
01:23:44,100 --> 01:23:46,566
一个倾向性我会图什么

1846
01:23:47,133 --> 01:23:50,499
从我的这个做法来说我图的是目标

1847
01:23:51,266 --> 01:23:53,333
而不是规模

1848
01:23:53,600 --> 01:23:55,700
我宁可把它拆成散的

1849
01:23:57,000 --> 01:23:58,533
也不愿意把它合到一起去

1850
01:23:58,766 --> 01:24:02,066
那有人会觉得说你拆成散的

1851
01:24:02,300 --> 01:24:03,400
那界面怎么做

1852
01:24:05,066 --> 01:24:05,666
界面怎么做

1853
01:24:05,666 --> 01:24:06,466
你们觉得

1854
01:24:07,966 --> 01:24:08,799
界面怎么做

1855
01:24:10,466 --> 01:24:10,866
界面

1856
01:24:10,866 --> 01:24:14,133
压根不是在这个阶段要去考虑的问题

1857
01:24:14,600 --> 01:24:15,766
我们前面就讲过

1858
01:24:15,766 --> 01:24:16,899
在写用力的时候

1859
01:24:16,900 --> 01:24:19,900
你讲的是人机之间的交互

1860
01:24:20,266 --> 01:24:21,766
而不是界面设计

1861
01:24:22,133 --> 01:24:24,499
不是内部实现不是测试

1862
01:24:24,700 --> 01:24:26,800
仅仅讲人机之间的交互

1863
01:24:27,466 --> 01:24:28,499
我们一定会按照

1864
01:24:28,500 --> 01:24:30,800
用力为单位来做界面吗

1865
01:24:31,866 --> 01:24:35,533
不一定那个是后面的界面设计

1866
01:24:35,533 --> 01:24:36,966
师去考虑的问题

1867
01:24:37,666 --> 01:24:39,699
就是做界面设计

1868
01:24:39,700 --> 01:24:41,700
目前在任何一个公司里头

1869
01:24:41,700 --> 01:24:44,500
都是有专门的做界面设计的人去做的

1870
01:24:44,866 --> 01:24:46,866
他熟悉美工熟悉人机交互

1871
01:24:47,100 --> 01:24:50,400
他会根据你所有写的这些交互去决定

1872
01:24:50,733 --> 01:24:52,166
哪些交互

1873
01:24:52,200 --> 01:24:54,866
应该是可以合在一个界面上去的

1874
01:24:54,900 --> 01:24:56,933
然后他就根据你的用力

1875
01:24:57,266 --> 01:24:58,933
去做出那个界面设计了

1876
01:24:59,100 --> 01:25:00,700
所以在这个阶段

1877
01:25:00,700 --> 01:25:02,366
你不用去考虑说

1878
01:25:02,366 --> 01:25:04,899
这样的一个交互和另外一个交互

1879
01:25:05,266 --> 01:25:06,966
未来是会做在一个界面里的

1880
01:25:06,966 --> 01:25:08,933
这个不是你在这个阶段所考虑的问题

1881
01:25:08,933 --> 01:25:09,766
这个明白吗

1882
01:25:10,166 --> 01:25:13,533
这个阶段你把每一个东西给他写清楚

1883
01:25:13,533 --> 01:25:16,866
说他人机之间的交互是什么就可以了

1884
01:25:17,066 --> 01:25:19,799
做成税的好处在于说

1885
01:25:20,666 --> 01:25:21,999
在后面好追踪

1886
01:25:22,500 --> 01:25:24,533
就是你其实把它力度分的小

1887
01:25:24,900 --> 01:25:25,933
越好去

1888
01:25:25,933 --> 01:25:28,599
在后面建立这样的一个需求的追踪列

1889
01:25:29,166 --> 01:25:30,966
分的越笼统合的越大

1890
01:25:31,000 --> 01:25:32,300
其实越不好区分

1891
01:25:32,300 --> 01:25:34,066
说你的某一部分的代码

1892
01:25:34,066 --> 01:25:35,933
或者某部分的东西是做什么的

1893
01:25:36,600 --> 01:25:36,800
啊

1894
01:25:36,800 --> 01:25:40,966
所以这是我为什么会追求说他的APP

1895
01:25:40,966 --> 01:25:43,933
测试和目标测试宁可把它分的很碎

1896
01:25:44,133 --> 01:25:46,099
也不把它合到一起的原因

1897
01:25:47,100 --> 01:25:47,900
对吧

1898
01:25:48,466 --> 01:25:49,499
你可以那样做

1899
01:25:49,500 --> 01:25:50,500
但是你要告诉我说

1900
01:25:50,500 --> 01:25:52,200
你那样做的理由是什么

1901
01:25:52,466 --> 01:25:54,566
比如说我就不支持我

1902
01:25:54,566 --> 01:25:58,199
我就不赞同说你你这么去做

1903
01:26:01,666 --> 01:26:03,899
这么赞同我就不赞同说你

1904
01:26:05,266 --> 01:26:06,666
把所有东西合在一起

1905
01:26:06,866 --> 01:26:08,699
所以啊讨论课的时候

1906
01:26:09,566 --> 01:26:11,299
你们在做任何一个用力的时候

1907
01:26:11,300 --> 01:26:13,166
讨论课的时候你其实没必要把

1908
01:26:13,200 --> 01:26:15,066
因为讨论课会是作业之前

1909
01:26:15,333 --> 01:26:16,333
所以讨论课的时候

1910
01:26:16,333 --> 01:26:17,566
你其实没有必要把

1911
01:26:17,566 --> 01:26:19,499
所有的用力都做出来

1912
01:26:19,733 --> 01:26:20,866
你做了一部分

1913
01:26:22,366 --> 01:26:24,533
就可以拿来看讨论课

1914
01:26:24,600 --> 01:26:26,966
那我也会去看你头他存在的问题

1915
01:26:27,166 --> 01:26:28,966
或者说你头有做的好的地方

1916
01:26:29,133 --> 01:26:31,199
拿出来给大家去去讨论

1917
01:26:31,600 --> 01:26:32,466
记住一点

1918
01:26:32,800 --> 01:26:35,366
在整个的这门课的所有的作业中间

1919
01:26:35,366 --> 01:26:37,499
你在做任何事情的时候

1920
01:26:38,166 --> 01:26:39,066
都要有理由

1921
01:26:39,900 --> 01:26:41,166
所以讨论课上的我问你

1922
01:26:41,166 --> 01:26:42,133
你为什么这么做

1923
01:26:42,900 --> 01:26:44,400
你如果说不出理由来

1924
01:26:45,100 --> 01:26:46,533
这个理由立不住脚

1925
01:26:46,666 --> 01:26:47,966
那就没有意义

1926
01:26:48,333 --> 01:26:49,899
比如说我们在讲用力的时候

1927
01:26:49,900 --> 01:26:52,100
我再强调一遍我们在讲用力的时候

1928
01:26:52,466 --> 01:26:53,599
用力是从

1929
01:26:54,166 --> 01:26:57,999
主参与者的目标为出发来做的

1930
01:26:58,733 --> 01:27:01,933
他是要满足我们的三个原则的

1931
01:27:01,933 --> 01:27:02,499
但是你

1932
01:27:02,500 --> 01:27:05,566
有时候很难去满足所有的三个原则

1933
01:27:06,333 --> 01:27:07,733
那我倾向于说

1934
01:27:07,733 --> 01:27:09,766
EVP原则是会排第一位的

1935
01:27:10,133 --> 01:27:11,799
其次是老板测试

1936
01:27:11,866 --> 01:27:14,099
最后是规模测试

1937
01:27:14,200 --> 01:27:16,133
就在我心目中我会把这三个

1938
01:27:16,766 --> 01:27:19,866
三个测试的顺序EVP是第一

1939
01:27:20,466 --> 01:27:21,866
老板测试是第二

1940
01:27:22,100 --> 01:27:23,800
然后规模测试是第三

1941
01:27:24,100 --> 01:27:25,900
那正是基于这样的一个想法

1942
01:27:25,900 --> 01:27:27,800
所以我就会把它拆成两个用力

1943
01:27:27,966 --> 01:27:29,466
而不把它合成一个用力

1944
01:27:29,466 --> 01:27:32,333
这个就是你要有你的理由

1945
01:27:32,333 --> 01:27:33,533
你不能说我就是想

1946
01:27:33,533 --> 01:27:34,866
这么写就这么写啊

1947
01:27:38,533 --> 01:27:40,899
他的这个交互设计

1948
01:27:41,733 --> 01:27:43,899
交互设计部分我们前面看到了

1949
01:27:44,266 --> 01:27:45,399
支付的交互

1950
01:27:45,700 --> 01:27:46,733
这是退款的

1951
01:27:47,200 --> 01:27:49,400
其实除了支付退款以外

1952
01:27:49,800 --> 01:27:51,400
文档里还有很多啊

1953
01:27:51,666 --> 01:27:53,599
总的来说大家可以看到

1954
01:27:53,933 --> 01:27:57,133
他所描述的就是我们的主参与人

1955
01:27:57,133 --> 01:28:00,299
我们的系统还有我们的辅助参与人

1956
01:28:01,133 --> 01:28:03,499
在每一个用力里头

1957
01:28:03,800 --> 01:28:05,166
他是怎么交互的

1958
01:28:05,400 --> 01:28:06,600
何时交互

1959
01:28:07,000 --> 01:28:08,533
交互了什么样的信息

1960
01:28:08,666 --> 01:28:11,299
这个信息的要求是什么

1961
01:28:11,300 --> 01:28:13,666
都需要列在这个系统生意图里头

1962
01:28:14,000 --> 01:28:15,100
图里头画不清楚了

1963
01:28:15,100 --> 01:28:17,200
就用附属的文字来表述

1964
01:28:17,200 --> 01:28:19,533
所以我现在大家看这份文档的时候

1965
01:28:19,533 --> 01:28:21,566
所有的图后面都跟着一个

1966
01:28:21,933 --> 01:28:24,899
表格去说明说他的这个东西

1967
01:28:25,133 --> 01:28:26,366
同样啊我不细讲了

1968
01:28:26,366 --> 01:28:28,266
大家从这个上头就能看得到

1969
01:28:30,500 --> 01:28:32,600
的微信支付和

1970
01:28:34,133 --> 01:28:38,266
微信支付和这个支付宝支付是不一样

1971
01:28:39,566 --> 01:28:40,933
他的逻辑是不一样的

1972
01:28:40,933 --> 01:28:43,899
这个有些符号啊可能大家不是很熟悉

1973
01:28:43,900 --> 01:28:45,800
就是我这里画的这些符号

1974
01:28:46,300 --> 01:28:47,766
这个OPT是什么意思

1975
01:28:48,366 --> 01:28:49,499
知道OPT什么意思吗

1976
01:28:49,966 --> 01:28:52,866
OPT就是如果option

1977
01:28:53,333 --> 01:28:57,766
如果它满足已分账的这个条件

1978
01:28:57,900 --> 01:28:59,333
就是里头这一段

1979
01:28:59,900 --> 01:29:01,966
如果不满足的话就直接到第三了

1980
01:29:01,966 --> 01:29:03,133
就第二不会走

1981
01:29:03,733 --> 01:29:05,399
第二外面又套了一个loop

1982
01:29:05,400 --> 01:29:06,966
这个应该大家一看就知道吧

1983
01:29:08,133 --> 01:29:08,933
什么意思啊

1984
01:29:10,733 --> 01:29:11,566
路虎什么意思

1985
01:29:12,400 --> 01:29:13,866
循环对啊

1986
01:29:14,100 --> 01:29:15,366
这个退

1987
01:29:15,866 --> 01:29:19,199
款就是微信退款为什么这么麻烦

1988
01:29:19,533 --> 01:29:22,366
而支付宝退款好像一退就退了

1989
01:29:23,133 --> 01:29:24,866
这个原因就是因为

1990
01:29:26,333 --> 01:29:31,066
呃微信退款的分账做的更麻烦

1991
01:29:31,600 --> 01:29:33,466
他会一分多

1992
01:29:33,866 --> 01:29:34,699
而不是

1993
01:29:35,366 --> 01:29:38,466
比如说我平台我商户只分给平台

1994
01:29:38,766 --> 01:29:39,133
商户

1995
01:29:39,133 --> 01:29:41,933
它可以分给平台一平台2平台3平台4

1996
01:29:42,000 --> 01:29:43,166
所以它的逻辑是

1997
01:29:43,166 --> 01:29:45,566
你需要知道它分如果分账了

1998
01:29:45,933 --> 01:29:48,333
分给了多少纸账号

1999
01:29:48,533 --> 01:29:50,766
依次去调那些API

2000
01:29:51,066 --> 01:29:53,166
把那个退回来

2001
01:29:53,600 --> 01:29:56,366
所以这是微信中间多了这一段

2002
01:29:57,333 --> 01:29:58,199
多了这一段

2003
01:29:58,666 --> 01:30:00,533
你可以看到支付宝就没有这一段

2004
01:30:02,466 --> 01:30:04,566
然后支付宝就退账退款就好了

2005
01:30:05,133 --> 01:30:05,799
他做了吗

2006
01:30:05,800 --> 01:30:07,000
他做了分账退款吗

2007
01:30:07,000 --> 01:30:09,866
做了但是他不需要你主动去知道他

2008
01:30:09,866 --> 01:30:11,533
退给了哪些纸账号

2009
01:30:11,866 --> 01:30:14,366
然后一个个的去调那些纸账号退款

2010
01:30:14,733 --> 01:30:16,099
支付宝平台自己做完了

2011
01:30:16,700 --> 01:30:20,000
这就是两个平台的技术差异

2012
01:30:20,333 --> 01:30:23,599
会使得说你在你的支付平台里头

2013
01:30:23,600 --> 01:30:26,000
会因为两个平台的技术差异

2014
01:30:26,266 --> 01:30:28,266
都要写两套不一样的代码

2015
01:30:28,600 --> 01:30:32,066
一套是调支付宝去退款的

2016
01:30:32,300 --> 01:30:35,266
一套是去调微信去退款的

2017
01:30:36,166 --> 01:30:38,199
但是你在做这个过程中间

2018
01:30:38,200 --> 01:30:40,900
你其实努力想做的一件事情是什么

2019
01:30:40,900 --> 01:30:41,933
就是我们的

2020
01:30:43,166 --> 01:30:44,466
调用的这个部分来说

2021
01:30:44,466 --> 01:30:46,566
我们尽量把它做成一样的

2022
01:30:46,600 --> 01:30:48,666
这样使得我们在使用这个

2023
01:30:48,800 --> 01:30:50,733
微信或者使用支付宝的时候

2024
01:30:51,100 --> 01:30:55,000
并在业务系统这边并没有去区分它啊

2025
01:30:55,000 --> 01:30:56,200
并没有去区分它

2026
01:30:57,333 --> 01:31:00,799
这个是我最后画的一个业务流程图

2027
01:31:01,733 --> 01:31:04,133
这个业务流程图呢描述的就是

2028
01:31:05,333 --> 01:31:06,133
啊

2029
01:31:06,766 --> 01:31:08,533
我们里头的若刚刚用力

2030
01:31:08,700 --> 01:31:10,700
他的关系是什么

2031
01:31:11,333 --> 01:31:13,533
一个支付渠道要能够用

2032
01:31:13,533 --> 01:31:14,466
就是一个商户啊

2033
01:31:14,466 --> 01:31:16,566
要能用一个支付渠道去收款

2034
01:31:16,866 --> 01:31:18,166
他是有一定的前提的

2035
01:31:18,166 --> 01:31:19,966
前提是后台管理人员

2036
01:31:19,966 --> 01:31:21,999
事先配置了这个支付渠道

2037
01:31:22,666 --> 01:31:23,733
我们当然更有个前提是

2038
01:31:23,733 --> 01:31:25,166
我们里头支持这个支付渠道

2039
01:31:25,166 --> 01:31:26,466
我们现在支持微信支付宝

2040
01:31:26,466 --> 01:31:27,966
只能两个里头二选一

2041
01:31:28,366 --> 01:31:31,299
然后平台首先要配送我平台在微

2042
01:31:31,500 --> 01:31:33,066
信里头的账号是什么

2043
01:31:33,300 --> 01:31:35,966
平台在支付宝里头的账号是什么做

2044
01:31:35,966 --> 01:31:37,799
了这样的一个配置以后

2045
01:31:38,500 --> 01:31:40,666
商户才能在微信或者支付宝上头

2046
01:31:40,666 --> 01:31:41,999
把自己的账号登上去

2047
01:31:42,000 --> 01:31:43,400
这叫做签约账户

2048
01:31:43,933 --> 01:31:45,466
签约账户完成了以后

2049
01:31:45,466 --> 01:31:47,399
顾客才能在签约账户上头

2050
01:31:47,400 --> 01:31:48,800
买这个商户的东西

2051
01:31:49,166 --> 01:31:50,333
才能在顾客的

2052
01:31:50,333 --> 01:31:53,299
商户的签约账户上头去完成支付

2053
01:31:53,866 --> 01:31:56,366
完成支付以后啊这个又划错了

2054
01:31:57,166 --> 01:31:57,966
现在我们把

2055
01:31:58,066 --> 01:31:59,499
这一系列东西

2056
01:31:59,500 --> 01:32:01,400
全部归到了这个后台管理人员

2057
01:32:01,400 --> 01:32:04,200
所以对账分账处理

2058
01:32:04,333 --> 01:32:07,266
挂账全部归到了后台管理人员啊

2059
01:32:07,266 --> 01:32:09,166
所以都在这边啊都在这边

2060
01:32:09,166 --> 01:32:11,099
都是由后台管理人员来完成的

2061
01:32:11,200 --> 01:32:13,300
所以做完了以后商户分看了

2062
01:32:13,300 --> 01:32:14,166
就是看流水

2063
01:32:14,166 --> 01:32:15,399
其他都不能看了啊

2064
01:32:15,400 --> 01:32:16,400
其他都不能看了

2065
01:32:17,066 --> 01:32:18,666
这个就是他的业务流程

2066
01:32:19,300 --> 01:32:20,700
啊这个文档的话

2067
01:32:20,700 --> 01:32:22,700
我其实是放到代码中间的

2068
01:32:23,500 --> 01:32:24,600
那代码在哪呢

2069
01:32:24,600 --> 01:32:26,166
代码在华为云上头

2070
01:32:31,700 --> 01:32:32,600
大家看一下

2071
01:32:37,866 --> 01:32:39,299
代码在华为云上头

2072
01:32:39,733 --> 01:32:41,466
文档在代码里头

2073
01:32:41,866 --> 01:32:43,133
华为云怎么去访问

2074
01:32:43,200 --> 01:32:45,333
把账号跟我登记好了

2075
01:32:45,500 --> 01:32:47,966
然后我把优惠券发出去

2076
01:32:48,200 --> 01:32:49,866
你们才能看到这个

2077
01:32:50,333 --> 01:32:52,499
所以先把账号登记好

2078
01:32:52,666 --> 01:32:54,733
我把优惠券申请下来

2079
01:32:54,733 --> 01:32:56,266
把优惠券发出去

2080
01:32:56,333 --> 01:32:57,799
然后我再教你们怎么

2081
01:32:58,100 --> 01:32:59,866
用优惠券去买这个服务

2082
01:32:59,933 --> 01:33:02,466
然后你们才能看到这里头的所有东西

2083
01:33:02,466 --> 01:33:03,866
否则你看不到啊

2084
01:33:03,866 --> 01:33:04,266
就今年

2085
01:33:04,266 --> 01:33:06,299
我们已经把所有的代码转到了

2086
01:33:06,300 --> 01:33:07,400
华为云的code

2087
01:33:07,400 --> 01:33:08,200
上

2088
01:33:08,733 --> 01:33:09,766
好听力课就到这里

